diff --git a/zen_project1337/.dart_tool/dartpad/web_plugin_registrant.dart b/zen_project1337/.dart_tool/dartpad/web_plugin_registrant.dart
index d675fc5..dbfc6f5 100644
--- a/zen_project1337/.dart_tool/dartpad/web_plugin_registrant.dart
+++ b/zen_project1337/.dart_tool/dartpad/web_plugin_registrant.dart
@@ -7,7 +7,6 @@
 // ignore_for_file: type=lint
 
 import 'package:audio_session/audio_session_web.dart';
-import 'package:audioplayers_web/audioplayers_web.dart';
 import 'package:flutter_secure_storage_web/flutter_secure_storage_web.dart';
 import 'package:just_audio_web/just_audio_web.dart';
 import 'package:permission_handler_html/permission_handler_html.dart';
@@ -20,7 +19,6 @@ import 'package:flutter_web_plugins/flutter_web_plugins.dart';
 void registerPlugins([final Registrar? pluginRegistrar]) {
   final Registrar registrar = pluginRegistrar ?? webPluginRegistrar;
   AudioSessionWeb.registerWith(registrar);
-  AudioplayersPlugin.registerWith(registrar);
   FlutterSecureStorageWeb.registerWith(registrar);
   JustAudioPlugin.registerWith(registrar);
   WebPermissionHandler.registerWith(registrar);
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/.filecache b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/.filecache
deleted file mode 100644
index c90248e..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/.filecache
+++ /dev/null
@@ -1 +0,0 @@
-{"version":2,"files":[{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_event_channel.h","hash":"defbac680fc3c78d98ef61319ff0dbb6"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_channel.h","hash":"5a5b80bcf4d72767c5fee74693a1140e"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture.h","hash":"d1894650bbfe9ba65c6f0b195645a9a5"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_registrar.h","hash":"455c45888f33294a5054d8adacac5a2e"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/flutter_linux.h","hash":"1dcce1af8eb3052e29d06a756f0535db"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture.h","hash":"d1894650bbfe9ba65c6f0b195645a9a5"},{"path":"/home/matth/zen_project1337/.dart_tool/package_config_subset","hash":"ab7bf653398de09d40f24e5936139c82"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h","hash":"c31254629784a8fd48a5ec671df85e64"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_string_codec.h","hash":"5edcd4ae8b7d3acb2e56bf8bfad75d4d"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h","hash":"ea928ca76b491e0a1313d69a25103ee3"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h","hash":"9093dc992b7f0c62c899bb5ee75437bb"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_basic_message_channel.h","hash":"6cba49677d30f16cadf943f2648123fc"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_dart_project.h","hash":"33df0b32edf5c119fff6fafaa8359145"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h","hash":"1b028c1fa72fa880b3f8ceb15c1c69df"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_pixel_buffer_texture.h","hash":"fb73b65a52e89c14449cd8524058187b"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_method_codec.h","hash":"dd8da806243743ff943e6de062ddaa3d"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h","hash":"63f9825adadb5fe17a5f3df6a8202686"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h","hash":"3d850b5432140f7e565baa806ee1f716"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_gl.h","hash":"2ff91c9748bb7c022a2aeee861f51b81"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_pixel_buffer_texture.h","hash":"fb73b65a52e89c14449cd8524058187b"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h","hash":"c9ddf466fd4c06d0991614cd26dd74c5"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_gl.h","hash":"2ff91c9748bb7c022a2aeee861f51b81"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_message_codec.h","hash":"f68e09ad8fbb558e8ba442fee9dcc884"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h","hash":"5a5b80bcf4d72767c5fee74693a1140e"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_codec.h","hash":"ea928ca76b491e0a1313d69a25103ee3"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_messenger.h","hash":"ede736022263f14bbdff0885eb66ec86"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/icudtl.dat","hash":"692337664e861ad322138061132dddc6"},{"path":"/home/matth/flutter/packages/flutter_tools/lib/src/build_system/targets/linux.dart","hash":"ca70051cbdc2ca7f1b5f2086cc18431f"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h","hash":"1dcce1af8eb3052e29d06a756f0535db"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/libflutter_linux_gtk.so","hash":"4ea16ca520d8ecf8bb498466c90f474f"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_codec.h","hash":"5997440e26e079541337c498925226f1"},{"path":"/home/matth/zen_project1337/.dart_tool/flutter_build/dart_plugin_registrant.dart","hash":"a4246bde19dc090a8d62d68e5141e764"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_message_codec.h","hash":"1fa21d2586a24da4ab78ae2936263c7f"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h","hash":"ede736022263f14bbdff0885eb66ec86"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_response.h","hash":"63f9825adadb5fe17a5f3df6a8202686"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h","hash":"1fa21d2586a24da4ab78ae2936263c7f"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h","hash":"5edcd4ae8b7d3acb2e56bf8bfad75d4d"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_view.h","hash":"e27fc7ec7888b59ffac04a45e4461699"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_registrar.h","hash":"455c45888f33294a5054d8adacac5a2e"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h","hash":"96e3a074c3f1f33e88ad3ccc60d6f9d3"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h","hash":"dd8da806243743ff943e6de062ddaa3d"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h","hash":"0fad916a7405474cce0f6d85509a12ac"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h","hash":"5997440e26e079541337c498925226f1"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_value.h","hash":"0fad916a7405474cce0f6d85509a12ac"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_application.h","hash":"5774eb642609ea54649f5a74272b973f"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registry.h","hash":"9093dc992b7f0c62c899bb5ee75437bb"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_application.h","hash":"5774eb642609ea54649f5a74272b973f"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_engine.h","hash":"1b028c1fa72fa880b3f8ceb15c1c69df"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so","hash":"4ea16ca520d8ecf8bb498466c90f474f"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h","hash":"e27fc7ec7888b59ffac04a45e4461699"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h","hash":"f68e09ad8fbb558e8ba442fee9dcc884"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_event_channel.h","hash":"defbac680fc3c78d98ef61319ff0dbb6"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_call.h","hash":"96e3a074c3f1f33e88ad3ccc60d6f9d3"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_method_codec.h","hash":"c31254629784a8fd48a5ec671df85e64"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h","hash":"33df0b32edf5c119fff6fafaa8359145"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_message_codec.h","hash":"c9ddf466fd4c06d0991614cd26dd74c5"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h","hash":"6cba49677d30f16cadf943f2648123fc"},{"path":"/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registrar.h","hash":"3d850b5432140f7e565baa806ee1f716"},{"path":"/home/matth/zen_project1337/linux/flutter/ephemeral/icudtl.dat","hash":"692337664e861ad322138061132dddc6"}]}
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/app.dill b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/app.dill
deleted file mode 100644
index e9a0d80..0000000
Binary files a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/app.dill and /dev/null differ
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_dart_plugin_registrant.stamp b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_dart_plugin_registrant.stamp
deleted file mode 100644
index a5bbede..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_dart_plugin_registrant.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":["/home/matth/zen_project1337/.dart_tool/package_config_subset"],"outputs":["/home/matth/zen_project1337/.dart_tool/flutter_build/dart_plugin_registrant.dart"]}
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_localizations.stamp b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_localizations.stamp
deleted file mode 100644
index 1b2d28c..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/gen_localizations.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":[],"outputs":[]}
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/kernel_snapshot_program.d b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/kernel_snapshot_program.d
deleted file mode 100644
index eea16d8..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/kernel_snapshot_program.d
+++ /dev/null
@@ -1 +0,0 @@
-/home/matth/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/app.dill: /home/matth/zen_project1337/lib/main.dart /home/matth/zen_project1337/.dart_tool/flutter_build/dart_plugin_registrant.dart /home/matth/flutter/packages/flutter/lib/src/dart_plugin_registrant.dart /home/matth/flutter/packages/flutter/lib/material.dart /home/matth/flutter/packages/flutter_localizations/lib/flutter_localizations.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/provider.dart /home/matth/zen_project1337/lib/models/mood_entries_provider.dart /home/matth/zen_project1337/lib/models/reflection_entries_provider.dart /home/matth/zen_project1337/lib/models/user_profile_provider.dart /home/matth/zen_project1337/lib/features/journey/journey_map.dart /home/matth/zen_project1337/lib/features/reflection/reflection_screen.dart /home/matth/zen_project1337/lib/features/impulse/impulse_screen.dart /home/matth/zen_project1337/lib/features/pro/pro_screen.dart /home/matth/zen_project1337/lib/features/calendar/mood_heatmap.dart /home/matth/zen_project1337/lib/features/community/question_voting.dart /home/matth/zen_project1337/lib/shared/ui/zen_widgets.dart /home/matth/zen_project1337/lib/audio/soundscape_manager.dart /home/matth/zen_project1337/lib/data/mood_entry.dart /home/matth/zen_project1337/lib/features/accessibility/a11y_utils.dart /home/matth/zen_project1337/lib/features/accessibility/color_blind_mode.dart /home/matth/zen_project1337/lib/features/accessibility/large_text_mode.dart /home/matth/zen_project1337/lib/data/reflection_entry.dart /home/matth/zen_project1337/lib/models/user.dart /home/matth/zen_project1337/lib/services/local_storage.dart /home/matth/zen_project1337/lib/services/analytics.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/lottie.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/flutter_local_notifications.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/lib/path_provider_android.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/shared_preferences_android.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/lib/path_provider_foundation.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib/shared_preferences_foundation.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/flutter_local_notifications_linux.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/path_provider_linux.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/lib/share_plus.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_linux-2.4.1/lib/shared_preferences_linux.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/lib/url_launcher_linux.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/flutter_local_notifications_windows.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/lib/flutter_secure_storage_windows.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/path_provider_windows.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_windows-2.4.1/lib/shared_preferences_windows.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/lib/url_launcher_windows.dart /home/matth/flutter/packages/flutter/lib/src/material/about.dart /home/matth/flutter/packages/flutter/lib/src/material/action_buttons.dart /home/matth/flutter/packages/flutter/lib/src/material/action_chip.dart /home/matth/flutter/packages/flutter/lib/src/material/action_icons_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/adaptive_text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons.dart /home/matth/flutter/packages/flutter/lib/src/material/app.dart /home/matth/flutter/packages/flutter/lib/src/material/app_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/app_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/arc.dart /home/matth/flutter/packages/flutter/lib/src/material/autocomplete.dart /home/matth/flutter/packages/flutter/lib/src/material/badge.dart /home/matth/flutter/packages/flutter/lib/src/material/badge_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/banner.dart /home/matth/flutter/packages/flutter/lib/src/material/banner_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_app_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_app_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_sheet.dart /home/matth/flutter/packages/flutter/lib/src/material/bottom_sheet_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/button.dart /home/matth/flutter/packages/flutter/lib/src/material/button_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/button_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/button_style.dart /home/matth/flutter/packages/flutter/lib/src/material/button_style_button.dart /home/matth/flutter/packages/flutter/lib/src/material/button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart /home/matth/flutter/packages/flutter/lib/src/material/card.dart /home/matth/flutter/packages/flutter/lib/src/material/card_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/carousel.dart /home/matth/flutter/packages/flutter/lib/src/material/checkbox.dart /home/matth/flutter/packages/flutter/lib/src/material/checkbox_list_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/checkbox_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/chip.dart /home/matth/flutter/packages/flutter/lib/src/material/chip_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/choice_chip.dart /home/matth/flutter/packages/flutter/lib/src/material/circle_avatar.dart /home/matth/flutter/packages/flutter/lib/src/material/color_scheme.dart /home/matth/flutter/packages/flutter/lib/src/material/colors.dart /home/matth/flutter/packages/flutter/lib/src/material/constants.dart /home/matth/flutter/packages/flutter/lib/src/material/curves.dart /home/matth/flutter/packages/flutter/lib/src/material/data_table.dart /home/matth/flutter/packages/flutter/lib/src/material/data_table_source.dart /home/matth/flutter/packages/flutter/lib/src/material/data_table_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/date.dart /home/matth/flutter/packages/flutter/lib/src/material/date_picker.dart /home/matth/flutter/packages/flutter/lib/src/material/date_picker_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/debug.dart /home/matth/flutter/packages/flutter/lib/src/material/desktop_text_selection.dart /home/matth/flutter/packages/flutter/lib/src/material/desktop_text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/material/desktop_text_selection_toolbar_button.dart /home/matth/flutter/packages/flutter/lib/src/material/dialog.dart /home/matth/flutter/packages/flutter/lib/src/material/dialog_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/divider.dart /home/matth/flutter/packages/flutter/lib/src/material/divider_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/drawer.dart /home/matth/flutter/packages/flutter/lib/src/material/drawer_header.dart /home/matth/flutter/packages/flutter/lib/src/material/drawer_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/dropdown.dart /home/matth/flutter/packages/flutter/lib/src/material/dropdown_menu.dart /home/matth/flutter/packages/flutter/lib/src/material/dropdown_menu_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/elevated_button.dart /home/matth/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/elevation_overlay.dart /home/matth/flutter/packages/flutter/lib/src/material/expand_icon.dart /home/matth/flutter/packages/flutter/lib/src/material/expansion_panel.dart /home/matth/flutter/packages/flutter/lib/src/material/expansion_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/expansion_tile_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/filled_button.dart /home/matth/flutter/packages/flutter/lib/src/material/filled_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/filter_chip.dart /home/matth/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/floating_action_button.dart /home/matth/flutter/packages/flutter/lib/src/material/floating_action_button_location.dart /home/matth/flutter/packages/flutter/lib/src/material/floating_action_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/grid_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/grid_tile_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/icon_button.dart /home/matth/flutter/packages/flutter/lib/src/material/icon_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/icons.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_decoration.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_highlight.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_ripple.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_sparkle.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_splash.dart /home/matth/flutter/packages/flutter/lib/src/material/ink_well.dart /home/matth/flutter/packages/flutter/lib/src/material/input_border.dart /home/matth/flutter/packages/flutter/lib/src/material/input_chip.dart /home/matth/flutter/packages/flutter/lib/src/material/input_date_picker_form_field.dart /home/matth/flutter/packages/flutter/lib/src/material/input_decorator.dart /home/matth/flutter/packages/flutter/lib/src/material/list_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/list_tile_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/magnifier.dart /home/matth/flutter/packages/flutter/lib/src/material/material.dart /home/matth/flutter/packages/flutter/lib/src/material/material_button.dart /home/matth/flutter/packages/flutter/lib/src/material/material_localizations.dart /home/matth/flutter/packages/flutter/lib/src/material/material_state.dart /home/matth/flutter/packages/flutter/lib/src/material/material_state_mixin.dart /home/matth/flutter/packages/flutter/lib/src/material/menu_anchor.dart /home/matth/flutter/packages/flutter/lib/src/material/menu_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/menu_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/menu_style.dart /home/matth/flutter/packages/flutter/lib/src/material/menu_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/mergeable_material.dart /home/matth/flutter/packages/flutter/lib/src/material/motion.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_drawer.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_drawer_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_rail.dart /home/matth/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/no_splash.dart /home/matth/flutter/packages/flutter/lib/src/material/outlined_button.dart /home/matth/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/page.dart /home/matth/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/paginated_data_table.dart /home/matth/flutter/packages/flutter/lib/src/material/popup_menu.dart /home/matth/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/predictive_back_page_transitions_builder.dart /home/matth/flutter/packages/flutter/lib/src/material/progress_indicator.dart /home/matth/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/radio.dart /home/matth/flutter/packages/flutter/lib/src/material/radio_list_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/radio_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/range_slider.dart /home/matth/flutter/packages/flutter/lib/src/material/refresh_indicator.dart /home/matth/flutter/packages/flutter/lib/src/material/reorderable_list.dart /home/matth/flutter/packages/flutter/lib/src/material/scaffold.dart /home/matth/flutter/packages/flutter/lib/src/material/scrollbar.dart /home/matth/flutter/packages/flutter/lib/src/material/scrollbar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/search.dart /home/matth/flutter/packages/flutter/lib/src/material/search_anchor.dart /home/matth/flutter/packages/flutter/lib/src/material/search_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/search_view_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/segmented_button.dart /home/matth/flutter/packages/flutter/lib/src/material/segmented_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/selectable_text.dart /home/matth/flutter/packages/flutter/lib/src/material/selection_area.dart /home/matth/flutter/packages/flutter/lib/src/material/shadows.dart /home/matth/flutter/packages/flutter/lib/src/material/slider.dart /home/matth/flutter/packages/flutter/lib/src/material/slider_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/slider_value_indicator_shape.dart /home/matth/flutter/packages/flutter/lib/src/material/snack_bar.dart /home/matth/flutter/packages/flutter/lib/src/material/snack_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/spell_check_suggestions_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/material/spell_check_suggestions_toolbar_layout_delegate.dart /home/matth/flutter/packages/flutter/lib/src/material/stepper.dart /home/matth/flutter/packages/flutter/lib/src/material/switch.dart /home/matth/flutter/packages/flutter/lib/src/material/switch_list_tile.dart /home/matth/flutter/packages/flutter/lib/src/material/switch_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/tab_bar_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/tab_controller.dart /home/matth/flutter/packages/flutter/lib/src/material/tab_indicator.dart /home/matth/flutter/packages/flutter/lib/src/material/tabs.dart /home/matth/flutter/packages/flutter/lib/src/material/text_button.dart /home/matth/flutter/packages/flutter/lib/src/material/text_button_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/text_field.dart /home/matth/flutter/packages/flutter/lib/src/material/text_form_field.dart /home/matth/flutter/packages/flutter/lib/src/material/text_selection.dart /home/matth/flutter/packages/flutter/lib/src/material/text_selection_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/material/text_selection_toolbar_text_button.dart /home/matth/flutter/packages/flutter/lib/src/material/text_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/theme.dart /home/matth/flutter/packages/flutter/lib/src/material/theme_data.dart /home/matth/flutter/packages/flutter/lib/src/material/time.dart /home/matth/flutter/packages/flutter/lib/src/material/time_picker.dart /home/matth/flutter/packages/flutter/lib/src/material/time_picker_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/toggle_buttons.dart /home/matth/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/tooltip.dart /home/matth/flutter/packages/flutter/lib/src/material/tooltip_theme.dart /home/matth/flutter/packages/flutter/lib/src/material/tooltip_visibility.dart /home/matth/flutter/packages/flutter/lib/src/material/typography.dart /home/matth/flutter/packages/flutter/lib/src/material/user_accounts_drawer_header.dart /home/matth/flutter/packages/flutter/lib/widgets.dart /home/matth/flutter/packages/flutter_localizations/lib/src/cupertino_localizations.dart /home/matth/flutter/packages/flutter_localizations/lib/src/l10n/generated_cupertino_localizations.dart /home/matth/flutter/packages/flutter_localizations/lib/src/l10n/generated_material_localizations.dart /home/matth/flutter/packages/flutter_localizations/lib/src/l10n/generated_widgets_localizations.dart /home/matth/flutter/packages/flutter_localizations/lib/src/material_localizations.dart /home/matth/flutter/packages/flutter_localizations/lib/src/widgets_localizations.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/async_provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/change_notifier_provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/consumer.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/listenable_provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/proxy_provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/reassemble_handler.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/selector.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/value_listenable_provider.dart /home/matth/zen_project1337/lib/models/mood_entry.dart /home/matth/zen_project1337/lib/models/reflection.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/flutter_svg.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/animations.dart /home/matth/zen_project1337/lib/features/therapist/anon_export.dart /home/matth/zen_project1337/lib/models/question.dart /home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/lib/just_audio.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/lib/shared_preferences.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart /home/matth/flutter/packages/flutter/lib/foundation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/composition.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/frame_rate.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie_builder.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie_delegates.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie_drawable.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie_image_asset.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/marker.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/options.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/asset_provider.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/file_provider.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/load_image.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/lottie_provider.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/memory_provider.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/network_provider.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/raw_lottie.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_cache.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/drop_shadow.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value_delegate.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/lib/flutter_local_notifications_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/flutter_local_notifications_plugin.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/initialization_settings.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/notification_details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_flutter_local_notifications.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/bitmap.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/enums.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/icon.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/initialization_settings.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/message.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/notification_channel.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/notification_channel_group.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/notification_details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/notification_sound.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/person.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/schedule_mode.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/big_picture_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/big_text_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/default_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/inbox_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/media_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/messaging_style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/styles/style_information.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/initialization_settings.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/interruption_level.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_action.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_action_option.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_attachment.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_category.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_category_option.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/notification_enabled_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/typedefs.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/types.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib/path_provider_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/lib/messages.g.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/src/shared_preferences_android.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/src/shared_preferences_async_android.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/lib/messages.g.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib/src/shared_preferences_async_foundation.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib/src/shared_preferences_foundation.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/flutter_local_notifications.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/capabilities.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/enums.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/icon.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/initialization_settings.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/location.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/notification_details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/sound.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/timeout.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/src/path_provider_linux.dart /home/matth/.pub-cache/hosted/pub.dev/meta-1.16.0/lib/meta.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus_platform_interface-6.0.0/lib/share_plus_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/lib/src/share_plus_linux.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/lib/src/share_plus_windows.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/file.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/local.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/path.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib/shared_preferences_async_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib/shared_preferences_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib/types.dart /home/matth/flutter/packages/flutter/lib/services.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/link.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/url_launcher_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/lib/src/messages.g.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/msix/ffi.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/plugin/ffi.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/lib/src/flutter_secure_storage_windows_ffi.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/src/folders.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/src/path_provider_windows_real.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/lib/src/messages.g.dart /home/matth/flutter/packages/flutter/lib/cupertino.dart /home/matth/flutter/packages/flutter/lib/scheduler.dart /home/matth/flutter/packages/flutter/lib/src/material/back_button.dart /home/matth/flutter/packages/flutter/lib/rendering.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/animated_icons.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/animated_icons_data.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/add_event.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/arrow_menu.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/close_menu.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/ellipsis_search.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/event_add.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/home_menu.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/list_view.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/menu_arrow.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/menu_close.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/menu_home.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/pause_play.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/play_pause.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/search_ellipsis.g.dart /home/matth/flutter/packages/flutter/lib/src/material/animated_icons/data/view_list.g.dart /home/matth/flutter/packages/flutter/lib/animation.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/vector_math_64.dart /home/matth/flutter/packages/flutter/lib/gestures.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/collection.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/material_color_utilities.dart /home/matth/flutter/packages/flutter/lib/painting.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/characters.dart /home/matth/flutter/packages/flutter/lib/src/widgets/actions.dart /home/matth/flutter/packages/flutter/lib/src/widgets/adapter.dart /home/matth/flutter/packages/flutter/lib/src/widgets/animated_cross_fade.dart /home/matth/flutter/packages/flutter/lib/src/widgets/animated_scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/animated_size.dart /home/matth/flutter/packages/flutter/lib/src/widgets/animated_switcher.dart /home/matth/flutter/packages/flutter/lib/src/widgets/annotated_region.dart /home/matth/flutter/packages/flutter/lib/src/widgets/app.dart /home/matth/flutter/packages/flutter/lib/src/widgets/app_lifecycle_listener.dart /home/matth/flutter/packages/flutter/lib/src/widgets/async.dart /home/matth/flutter/packages/flutter/lib/src/widgets/autocomplete.dart /home/matth/flutter/packages/flutter/lib/src/widgets/autofill.dart /home/matth/flutter/packages/flutter/lib/src/widgets/automatic_keep_alive.dart /home/matth/flutter/packages/flutter/lib/src/widgets/banner.dart /home/matth/flutter/packages/flutter/lib/src/widgets/basic.dart /home/matth/flutter/packages/flutter/lib/src/widgets/binding.dart /home/matth/flutter/packages/flutter/lib/src/widgets/bottom_navigation_bar_item.dart /home/matth/flutter/packages/flutter/lib/src/widgets/color_filter.dart /home/matth/flutter/packages/flutter/lib/src/widgets/container.dart /home/matth/flutter/packages/flutter/lib/src/widgets/context_menu_button_item.dart /home/matth/flutter/packages/flutter/lib/src/widgets/context_menu_controller.dart /home/matth/flutter/packages/flutter/lib/src/widgets/debug.dart /home/matth/flutter/packages/flutter/lib/src/widgets/decorated_sliver.dart /home/matth/flutter/packages/flutter/lib/src/widgets/default_selection_style.dart /home/matth/flutter/packages/flutter/lib/src/widgets/default_text_editing_shortcuts.dart /home/matth/flutter/packages/flutter/lib/src/widgets/desktop_text_selection_toolbar_layout_delegate.dart /home/matth/flutter/packages/flutter/lib/src/widgets/dismissible.dart /home/matth/flutter/packages/flutter/lib/src/widgets/display_feature_sub_screen.dart /home/matth/flutter/packages/flutter/lib/src/widgets/disposable_build_context.dart /home/matth/flutter/packages/flutter/lib/src/widgets/drag_boundary.dart /home/matth/flutter/packages/flutter/lib/src/widgets/drag_target.dart /home/matth/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart /home/matth/flutter/packages/flutter/lib/src/widgets/dual_transition_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/editable_text.dart /home/matth/flutter/packages/flutter/lib/src/widgets/expansible.dart /home/matth/flutter/packages/flutter/lib/src/widgets/fade_in_image.dart /home/matth/flutter/packages/flutter/lib/src/widgets/feedback.dart /home/matth/flutter/packages/flutter/lib/src/widgets/flutter_logo.dart /home/matth/flutter/packages/flutter/lib/src/widgets/focus_manager.dart /home/matth/flutter/packages/flutter/lib/src/widgets/focus_scope.dart /home/matth/flutter/packages/flutter/lib/src/widgets/focus_traversal.dart /home/matth/flutter/packages/flutter/lib/src/widgets/form.dart /home/matth/flutter/packages/flutter/lib/src/widgets/framework.dart /home/matth/flutter/packages/flutter/lib/src/widgets/gesture_detector.dart /home/matth/flutter/packages/flutter/lib/src/widgets/grid_paper.dart /home/matth/flutter/packages/flutter/lib/src/widgets/heroes.dart /home/matth/flutter/packages/flutter/lib/src/widgets/icon.dart /home/matth/flutter/packages/flutter/lib/src/widgets/icon_data.dart /home/matth/flutter/packages/flutter/lib/src/widgets/icon_theme.dart /home/matth/flutter/packages/flutter/lib/src/widgets/icon_theme_data.dart /home/matth/flutter/packages/flutter/lib/src/widgets/image.dart /home/matth/flutter/packages/flutter/lib/src/widgets/image_filter.dart /home/matth/flutter/packages/flutter/lib/src/widgets/image_icon.dart /home/matth/flutter/packages/flutter/lib/src/widgets/implicit_animations.dart /home/matth/flutter/packages/flutter/lib/src/widgets/inherited_model.dart /home/matth/flutter/packages/flutter/lib/src/widgets/inherited_notifier.dart /home/matth/flutter/packages/flutter/lib/src/widgets/inherited_theme.dart /home/matth/flutter/packages/flutter/lib/src/widgets/interactive_viewer.dart /home/matth/flutter/packages/flutter/lib/src/widgets/keyboard_listener.dart /home/matth/flutter/packages/flutter/lib/src/widgets/layout_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/list_wheel_scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/localizations.dart /home/matth/flutter/packages/flutter/lib/src/widgets/lookup_boundary.dart /home/matth/flutter/packages/flutter/lib/src/widgets/magnifier.dart /home/matth/flutter/packages/flutter/lib/src/widgets/media_query.dart /home/matth/flutter/packages/flutter/lib/src/widgets/modal_barrier.dart /home/matth/flutter/packages/flutter/lib/src/widgets/navigation_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/widgets/navigator.dart /home/matth/flutter/packages/flutter/lib/src/widgets/navigator_pop_handler.dart /home/matth/flutter/packages/flutter/lib/src/widgets/nested_scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/notification_listener.dart /home/matth/flutter/packages/flutter/lib/src/widgets/orientation_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/overflow_bar.dart /home/matth/flutter/packages/flutter/lib/src/widgets/overlay.dart /home/matth/flutter/packages/flutter/lib/src/widgets/overscroll_indicator.dart /home/matth/flutter/packages/flutter/lib/src/widgets/page_storage.dart /home/matth/flutter/packages/flutter/lib/src/widgets/page_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/pages.dart /home/matth/flutter/packages/flutter/lib/src/widgets/performance_overlay.dart /home/matth/flutter/packages/flutter/lib/src/widgets/pinned_header_sliver.dart /home/matth/flutter/packages/flutter/lib/src/widgets/placeholder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/platform_menu_bar.dart /home/matth/flutter/packages/flutter/lib/src/widgets/platform_selectable_region_context_menu.dart /home/matth/flutter/packages/flutter/lib/src/widgets/platform_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/pop_scope.dart /home/matth/flutter/packages/flutter/lib/src/widgets/preferred_size.dart /home/matth/flutter/packages/flutter/lib/src/widgets/primary_scroll_controller.dart /home/matth/flutter/packages/flutter/lib/src/widgets/raw_keyboard_listener.dart /home/matth/flutter/packages/flutter/lib/src/widgets/raw_menu_anchor.dart /home/matth/flutter/packages/flutter/lib/src/widgets/reorderable_list.dart /home/matth/flutter/packages/flutter/lib/src/widgets/restoration.dart /home/matth/flutter/packages/flutter/lib/src/widgets/restoration_properties.dart /home/matth/flutter/packages/flutter/lib/src/widgets/router.dart /home/matth/flutter/packages/flutter/lib/src/widgets/routes.dart /home/matth/flutter/packages/flutter/lib/src/widgets/safe_area.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_activity.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_aware_image_provider.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_configuration.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_context.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_controller.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_delegate.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_metrics.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_notification.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_notification_observer.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_physics.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_position.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_position_with_single_context.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_simulation.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scrollable.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scrollable_helpers.dart /home/matth/flutter/packages/flutter/lib/src/widgets/scrollbar.dart /home/matth/flutter/packages/flutter/lib/src/widgets/selectable_region.dart /home/matth/flutter/packages/flutter/lib/src/widgets/selection_container.dart /home/matth/flutter/packages/flutter/lib/src/widgets/semantics_debugger.dart /home/matth/flutter/packages/flutter/lib/src/widgets/service_extensions.dart /home/matth/flutter/packages/flutter/lib/src/widgets/shared_app_data.dart /home/matth/flutter/packages/flutter/lib/src/widgets/shortcuts.dart /home/matth/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/size_changed_layout_notifier.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_floating_header.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_layout_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_persistent_header.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_prototype_extent_list.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_resizing_header.dart /home/matth/flutter/packages/flutter/lib/src/widgets/sliver_tree.dart /home/matth/flutter/packages/flutter/lib/src/widgets/slotted_render_object_widget.dart /home/matth/flutter/packages/flutter/lib/src/widgets/snapshot_widget.dart /home/matth/flutter/packages/flutter/lib/src/widgets/spacer.dart /home/matth/flutter/packages/flutter/lib/src/widgets/spell_check.dart /home/matth/flutter/packages/flutter/lib/src/widgets/standard_component_type.dart /home/matth/flutter/packages/flutter/lib/src/widgets/status_transitions.dart /home/matth/flutter/packages/flutter/lib/src/widgets/system_context_menu.dart /home/matth/flutter/packages/flutter/lib/src/widgets/table.dart /home/matth/flutter/packages/flutter/lib/src/widgets/tap_region.dart /home/matth/flutter/packages/flutter/lib/src/widgets/text.dart /home/matth/flutter/packages/flutter/lib/src/widgets/text_editing_intents.dart /home/matth/flutter/packages/flutter/lib/src/widgets/text_selection.dart /home/matth/flutter/packages/flutter/lib/src/widgets/text_selection_toolbar_anchors.dart /home/matth/flutter/packages/flutter/lib/src/widgets/text_selection_toolbar_layout_delegate.dart /home/matth/flutter/packages/flutter/lib/src/widgets/texture.dart /home/matth/flutter/packages/flutter/lib/src/widgets/ticker_provider.dart /home/matth/flutter/packages/flutter/lib/src/widgets/title.dart /home/matth/flutter/packages/flutter/lib/src/widgets/toggleable.dart /home/matth/flutter/packages/flutter/lib/src/widgets/transitions.dart /home/matth/flutter/packages/flutter/lib/src/widgets/tween_animation_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/two_dimensional_scroll_view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/two_dimensional_viewport.dart /home/matth/flutter/packages/flutter/lib/src/widgets/undo_history.dart /home/matth/flutter/packages/flutter/lib/src/widgets/unique_widget.dart /home/matth/flutter/packages/flutter/lib/src/widgets/value_listenable_builder.dart /home/matth/flutter/packages/flutter/lib/src/widgets/view.dart /home/matth/flutter/packages/flutter/lib/src/widgets/viewport.dart /home/matth/flutter/packages/flutter/lib/src/widgets/visibility.dart /home/matth/flutter/packages/flutter/lib/src/widgets/widget_inspector.dart /home/matth/flutter/packages/flutter/lib/src/widgets/widget_preview.dart /home/matth/flutter/packages/flutter/lib/src/widgets/widget_span.dart /home/matth/flutter/packages/flutter/lib/src/widgets/widget_state.dart /home/matth/flutter/packages/flutter/lib/src/widgets/will_pop_scope.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/intl.dart /home/matth/flutter/packages/flutter_localizations/lib/src/utils/date_localizations.dart /home/matth/.pub-cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/deferred_inherited_provider.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/devtool.dart /home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/src/inherited_provider.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/svg.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/fade_scale_transition.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/fade_through_transition.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/modal.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/open_container.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/page_transition_switcher.dart /home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/src/shared_axis_transition.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider-2.1.5/lib/path_provider.dart /home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/audio_session.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/crypto.dart /home/matth/.pub-cache/hosted/pub.dev/just_audio_platform_interface-4.5.0/lib/just_audio_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/rxdart.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/uuid.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/lib/src/shared_preferences_async.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/lib/src/shared_preferences_legacy.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/test/test_flutter_secure_storage_platform.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_platform_interface-1.1.2/lib/flutter_secure_storage_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/android_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/apple_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/ios_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/linux_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/macos_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/web_options.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/options/windows_options.dart /home/matth/flutter/packages/flutter/lib/src/foundation/annotations.dart /home/matth/flutter/packages/flutter/lib/src/foundation/assertions.dart /home/matth/flutter/packages/flutter/lib/src/foundation/basic_types.dart /home/matth/flutter/packages/flutter/lib/src/foundation/binding.dart /home/matth/flutter/packages/flutter/lib/src/foundation/bitfield.dart /home/matth/flutter/packages/flutter/lib/src/foundation/capabilities.dart /home/matth/flutter/packages/flutter/lib/src/foundation/change_notifier.dart /home/matth/flutter/packages/flutter/lib/src/foundation/collections.dart /home/matth/flutter/packages/flutter/lib/src/foundation/consolidate_response.dart /home/matth/flutter/packages/flutter/lib/src/foundation/constants.dart /home/matth/flutter/packages/flutter/lib/src/foundation/debug.dart /home/matth/flutter/packages/flutter/lib/src/foundation/diagnostics.dart /home/matth/flutter/packages/flutter/lib/src/foundation/isolates.dart /home/matth/flutter/packages/flutter/lib/src/foundation/key.dart /home/matth/flutter/packages/flutter/lib/src/foundation/licenses.dart /home/matth/flutter/packages/flutter/lib/src/foundation/memory_allocations.dart /home/matth/flutter/packages/flutter/lib/src/foundation/node.dart /home/matth/flutter/packages/flutter/lib/src/foundation/object.dart /home/matth/flutter/packages/flutter/lib/src/foundation/observer_list.dart /home/matth/flutter/packages/flutter/lib/src/foundation/persistent_hash_map.dart /home/matth/flutter/packages/flutter/lib/src/foundation/platform.dart /home/matth/flutter/packages/flutter/lib/src/foundation/print.dart /home/matth/flutter/packages/flutter/lib/src/foundation/serialization.dart /home/matth/flutter/packages/flutter/lib/src/foundation/service_extensions.dart /home/matth/flutter/packages/flutter/lib/src/foundation/stack_frame.dart /home/matth/flutter/packages/flutter/lib/src/foundation/synchronous_future.dart /home/matth/flutter/packages/flutter/lib/src/foundation/timeline.dart /home/matth/flutter/packages/flutter/lib/src/foundation/unicode.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/archive.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/font.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/font_character.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/lottie_composition_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/moshi/json_reader.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/performance_tracker.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/http.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/l.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/key_path.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/composition_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/layer_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/load_fonts.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/providers/file_provider_io.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_lottie.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_cache/store_drawing.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_cache/store_raster.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/lottie_property.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/lottie_frame_info.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/lottie_relative_double_value_callback.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/lottie_relative_integer_value_callback.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/lottie_relative_point_value_callback.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/lottie_value_callback.dart /home/matth/.pub-cache/hosted/pub.dev/plugin_platform_interface-2.1.8/lib/plugin_platform_interface.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/lib/src/types.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/lib/src/helpers.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/lib/src/typedefs.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/timezone.dart /home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/clock.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/callback_dispatcher.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/helpers.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/android/method_channel_mappers.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/platform_specifics/darwin/mappers.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/src/tz_datetime_mapper.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib/src/enums.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib/src/method_channel_path_provider.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/src/messages.g.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/src/strings.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/src/messages_async.g.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib/src/messages.g.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/flutter_local_notifications_platform_linux.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/notifications_manager.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/model/hint.dart /home/matth/.pub-cache/hosted/pub.dev/xdg_directories-1.1.0/lib/xdg_directories.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/src/get_application_id.dart /home/matth/.pub-cache/hosted/pub.dev/meta-1.16.0/lib/meta_meta.dart /home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/lib/cross_file.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus_platform_interface-6.0.0/lib/platform_interface/share_plus_platform.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/lib/src/windows_version_helper.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/context.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/style.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/path_exception.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/path_map.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/path_set.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib/method_channel_shared_preferences.dart /home/matth/flutter/packages/flutter/lib/src/services/asset_bundle.dart /home/matth/flutter/packages/flutter/lib/src/services/asset_manifest.dart /home/matth/flutter/packages/flutter/lib/src/services/autofill.dart /home/matth/flutter/packages/flutter/lib/src/services/binary_messenger.dart /home/matth/flutter/packages/flutter/lib/src/services/binding.dart /home/matth/flutter/packages/flutter/lib/src/services/browser_context_menu.dart /home/matth/flutter/packages/flutter/lib/src/services/clipboard.dart /home/matth/flutter/packages/flutter/lib/src/services/debug.dart /home/matth/flutter/packages/flutter/lib/src/services/deferred_component.dart /home/matth/flutter/packages/flutter/lib/src/services/flavor.dart /home/matth/flutter/packages/flutter/lib/src/services/flutter_version.dart /home/matth/flutter/packages/flutter/lib/src/services/font_loader.dart /home/matth/flutter/packages/flutter/lib/src/services/haptic_feedback.dart /home/matth/flutter/packages/flutter/lib/src/services/hardware_keyboard.dart /home/matth/flutter/packages/flutter/lib/src/services/keyboard_inserted_content.dart /home/matth/flutter/packages/flutter/lib/src/services/keyboard_key.g.dart /home/matth/flutter/packages/flutter/lib/src/services/keyboard_maps.g.dart /home/matth/flutter/packages/flutter/lib/src/services/live_text.dart /home/matth/flutter/packages/flutter/lib/src/services/message_codec.dart /home/matth/flutter/packages/flutter/lib/src/services/message_codecs.dart /home/matth/flutter/packages/flutter/lib/src/services/mouse_cursor.dart /home/matth/flutter/packages/flutter/lib/src/services/mouse_tracking.dart /home/matth/flutter/packages/flutter/lib/src/services/platform_channel.dart /home/matth/flutter/packages/flutter/lib/src/services/platform_views.dart /home/matth/flutter/packages/flutter/lib/src/services/predictive_back_event.dart /home/matth/flutter/packages/flutter/lib/src/services/process_text.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_android.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_fuchsia.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_ios.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_linux.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_macos.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_web.dart /home/matth/flutter/packages/flutter/lib/src/services/raw_keyboard_windows.dart /home/matth/flutter/packages/flutter/lib/src/services/restoration.dart /home/matth/flutter/packages/flutter/lib/src/services/scribe.dart /home/matth/flutter/packages/flutter/lib/src/services/service_extensions.dart /home/matth/flutter/packages/flutter/lib/src/services/spell_check.dart /home/matth/flutter/packages/flutter/lib/src/services/system_channels.dart /home/matth/flutter/packages/flutter/lib/src/services/system_chrome.dart /home/matth/flutter/packages/flutter/lib/src/services/system_navigator.dart /home/matth/flutter/packages/flutter/lib/src/services/system_sound.dart /home/matth/flutter/packages/flutter/lib/src/services/text_boundary.dart /home/matth/flutter/packages/flutter/lib/src/services/text_editing.dart /home/matth/flutter/packages/flutter/lib/src/services/text_editing_delta.dart /home/matth/flutter/packages/flutter/lib/src/services/text_formatter.dart /home/matth/flutter/packages/flutter/lib/src/services/text_input.dart /home/matth/flutter/packages/flutter/lib/src/services/text_layout_metrics.dart /home/matth/flutter/packages/flutter/lib/src/services/undo_manager.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/src/types.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/src/url_launcher_platform.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/initialization_settings.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_action.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_audio.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_header.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_input.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_parts.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_progress.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_row.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/ffi/bindings.dart /home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/ffi.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/notification_to_xml.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/ffi/utils.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/plugin/base.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/win32.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/src/guid.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/src/win32_wrappers.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/activity_indicator.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/adaptive_text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/app.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/bottom_tab_bar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/button.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/checkbox.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/colors.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/constants.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/context_menu.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/context_menu_action.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/date_picker.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/debug.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/desktop_text_selection.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/desktop_text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/desktop_text_selection_toolbar_button.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/dialog.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/form_row.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/form_section.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/icon_theme_data.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/icons.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/interface_level.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/list_section.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/list_tile.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/localizations.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/magnifier.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/nav_bar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/page_scaffold.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/picker.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/radio.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/refresh.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/route.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/scrollbar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/search_field.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/segmented_control.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/sheet.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/slider.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/sliding_segmented_control.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/spell_check_suggestions_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/switch.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/tab_scaffold.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/tab_view.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_field.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_form_field_row.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_selection.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_selection_toolbar.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_selection_toolbar_button.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/text_theme.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/theme.dart /home/matth/flutter/packages/flutter/lib/src/cupertino/thumb_painter.dart /home/matth/flutter/packages/flutter/lib/src/scheduler/binding.dart /home/matth/flutter/packages/flutter/lib/src/scheduler/debug.dart /home/matth/flutter/packages/flutter/lib/src/scheduler/priority.dart /home/matth/flutter/packages/flutter/lib/src/scheduler/service_extensions.dart /home/matth/flutter/packages/flutter/lib/src/scheduler/ticker.dart /home/matth/flutter/packages/flutter/lib/semantics.dart /home/matth/flutter/packages/flutter/lib/src/rendering/animated_size.dart /home/matth/flutter/packages/flutter/lib/src/rendering/binding.dart /home/matth/flutter/packages/flutter/lib/src/rendering/box.dart /home/matth/flutter/packages/flutter/lib/src/rendering/custom_layout.dart /home/matth/flutter/packages/flutter/lib/src/rendering/custom_paint.dart /home/matth/flutter/packages/flutter/lib/src/rendering/debug.dart /home/matth/flutter/packages/flutter/lib/src/rendering/debug_overflow_indicator.dart /home/matth/flutter/packages/flutter/lib/src/rendering/decorated_sliver.dart /home/matth/flutter/packages/flutter/lib/src/rendering/editable.dart /home/matth/flutter/packages/flutter/lib/src/rendering/error.dart /home/matth/flutter/packages/flutter/lib/src/rendering/flex.dart /home/matth/flutter/packages/flutter/lib/src/rendering/flow.dart /home/matth/flutter/packages/flutter/lib/src/rendering/image.dart /home/matth/flutter/packages/flutter/lib/src/rendering/layer.dart /home/matth/flutter/packages/flutter/lib/src/rendering/layout_helper.dart /home/matth/flutter/packages/flutter/lib/src/rendering/list_body.dart /home/matth/flutter/packages/flutter/lib/src/rendering/list_wheel_viewport.dart /home/matth/flutter/packages/flutter/lib/src/rendering/mouse_tracker.dart /home/matth/flutter/packages/flutter/lib/src/rendering/object.dart /home/matth/flutter/packages/flutter/lib/src/rendering/paragraph.dart /home/matth/flutter/packages/flutter/lib/src/rendering/performance_overlay.dart /home/matth/flutter/packages/flutter/lib/src/rendering/platform_view.dart /home/matth/flutter/packages/flutter/lib/src/rendering/proxy_box.dart /home/matth/flutter/packages/flutter/lib/src/rendering/proxy_sliver.dart /home/matth/flutter/packages/flutter/lib/src/rendering/rotated_box.dart /home/matth/flutter/packages/flutter/lib/src/rendering/selection.dart /home/matth/flutter/packages/flutter/lib/src/rendering/service_extensions.dart /home/matth/flutter/packages/flutter/lib/src/rendering/shifted_box.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_fill.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_fixed_extent_list.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_grid.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_group.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_list.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_multi_box_adaptor.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_padding.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_persistent_header.dart /home/matth/flutter/packages/flutter/lib/src/rendering/sliver_tree.dart /home/matth/flutter/packages/flutter/lib/src/rendering/stack.dart /home/matth/flutter/packages/flutter/lib/src/rendering/table.dart /home/matth/flutter/packages/flutter/lib/src/rendering/table_border.dart /home/matth/flutter/packages/flutter/lib/src/rendering/texture.dart /home/matth/flutter/packages/flutter/lib/src/rendering/tweens.dart /home/matth/flutter/packages/flutter/lib/src/rendering/view.dart /home/matth/flutter/packages/flutter/lib/src/rendering/viewport.dart /home/matth/flutter/packages/flutter/lib/src/rendering/viewport_offset.dart /home/matth/flutter/packages/flutter/lib/src/rendering/wrap.dart /home/matth/flutter/packages/flutter/lib/src/animation/animation.dart /home/matth/flutter/packages/flutter/lib/src/animation/animation_controller.dart /home/matth/flutter/packages/flutter/lib/src/animation/animation_style.dart /home/matth/flutter/packages/flutter/lib/src/animation/animations.dart /home/matth/flutter/packages/flutter/lib/src/animation/curves.dart /home/matth/flutter/packages/flutter/lib/src/animation/listener_helpers.dart /home/matth/flutter/packages/flutter/lib/src/animation/tween.dart /home/matth/flutter/packages/flutter/lib/src/animation/tween_sequence.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/aabb2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/aabb3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/colors.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/constants.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/error_helpers.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/frustum.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/intersection_result.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/matrix2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/matrix3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/matrix4.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/noise.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/obb3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/opengl.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/plane.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/quad.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/quaternion.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/ray.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/sphere.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/triangle.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/utilities.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/vector.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/vector2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/vector3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math_64/vector4.dart /home/matth/flutter/packages/flutter/lib/src/gestures/arena.dart /home/matth/flutter/packages/flutter/lib/src/gestures/binding.dart /home/matth/flutter/packages/flutter/lib/src/gestures/constants.dart /home/matth/flutter/packages/flutter/lib/src/gestures/converter.dart /home/matth/flutter/packages/flutter/lib/src/gestures/debug.dart /home/matth/flutter/packages/flutter/lib/src/gestures/drag.dart /home/matth/flutter/packages/flutter/lib/src/gestures/drag_details.dart /home/matth/flutter/packages/flutter/lib/src/gestures/eager.dart /home/matth/flutter/packages/flutter/lib/src/gestures/events.dart /home/matth/flutter/packages/flutter/lib/src/gestures/force_press.dart /home/matth/flutter/packages/flutter/lib/src/gestures/gesture_settings.dart /home/matth/flutter/packages/flutter/lib/src/gestures/hit_test.dart /home/matth/flutter/packages/flutter/lib/src/gestures/long_press.dart /home/matth/flutter/packages/flutter/lib/src/gestures/lsq_solver.dart /home/matth/flutter/packages/flutter/lib/src/gestures/monodrag.dart /home/matth/flutter/packages/flutter/lib/src/gestures/multidrag.dart /home/matth/flutter/packages/flutter/lib/src/gestures/multitap.dart /home/matth/flutter/packages/flutter/lib/src/gestures/pointer_router.dart /home/matth/flutter/packages/flutter/lib/src/gestures/pointer_signal_resolver.dart /home/matth/flutter/packages/flutter/lib/src/gestures/recognizer.dart /home/matth/flutter/packages/flutter/lib/src/gestures/resampler.dart /home/matth/flutter/packages/flutter/lib/src/gestures/scale.dart /home/matth/flutter/packages/flutter/lib/src/gestures/tap.dart /home/matth/flutter/packages/flutter/lib/src/gestures/tap_and_drag.dart /home/matth/flutter/packages/flutter/lib/src/gestures/team.dart /home/matth/flutter/packages/flutter/lib/src/gestures/velocity_tracker.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/algorithms.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/boollist.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/canonicalized_map.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/combined_wrappers/combined_iterable.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/combined_wrappers/combined_list.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/combined_wrappers/combined_map.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/comparators.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/equality.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/equality_map.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/equality_set.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/functions.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/iterable_extensions.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/iterable_zip.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/list_extensions.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/priority_queue.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/queue_list.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/union_set.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/union_set_controller.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/unmodifiable_wrappers.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/wrappers.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/blend/blend.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/contrast/contrast.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dislike/dislike_analyzer.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/dynamic_color.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/dynamic_scheme.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/material_dynamic_colors.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/variant.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/hct/cam16.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/hct/hct.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/hct/viewing_conditions.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/palettes/core_palette.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/palettes/tonal_palette.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/quantizer.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/quantizer_celebi.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/quantizer_map.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/quantizer_wsmeans.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/quantizer_wu.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_content.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_expressive.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_fidelity.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_fruit_salad.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_monochrome.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_neutral.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_rainbow.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_tonal_spot.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/scheme/scheme_vibrant.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/score/score.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/temperature/temperature_cache.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/utils/color_utils.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/utils/math_utils.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/utils/string_utils.dart /home/matth/flutter/packages/flutter/lib/src/painting/alignment.dart /home/matth/flutter/packages/flutter/lib/src/painting/basic_types.dart /home/matth/flutter/packages/flutter/lib/src/painting/beveled_rectangle_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/binding.dart /home/matth/flutter/packages/flutter/lib/src/painting/border_radius.dart /home/matth/flutter/packages/flutter/lib/src/painting/borders.dart /home/matth/flutter/packages/flutter/lib/src/painting/box_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/box_decoration.dart /home/matth/flutter/packages/flutter/lib/src/painting/box_fit.dart /home/matth/flutter/packages/flutter/lib/src/painting/box_shadow.dart /home/matth/flutter/packages/flutter/lib/src/painting/circle_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/clip.dart /home/matth/flutter/packages/flutter/lib/src/painting/colors.dart /home/matth/flutter/packages/flutter/lib/src/painting/continuous_rectangle_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/debug.dart /home/matth/flutter/packages/flutter/lib/src/painting/decoration.dart /home/matth/flutter/packages/flutter/lib/src/painting/decoration_image.dart /home/matth/flutter/packages/flutter/lib/src/painting/edge_insets.dart /home/matth/flutter/packages/flutter/lib/src/painting/flutter_logo.dart /home/matth/flutter/packages/flutter/lib/src/painting/fractional_offset.dart /home/matth/flutter/packages/flutter/lib/src/painting/geometry.dart /home/matth/flutter/packages/flutter/lib/src/painting/gradient.dart /home/matth/flutter/packages/flutter/lib/src/painting/image_cache.dart /home/matth/flutter/packages/flutter/lib/src/painting/image_decoder.dart /home/matth/flutter/packages/flutter/lib/src/painting/image_provider.dart /home/matth/flutter/packages/flutter/lib/src/painting/image_resolution.dart /home/matth/flutter/packages/flutter/lib/src/painting/image_stream.dart /home/matth/flutter/packages/flutter/lib/src/painting/inline_span.dart /home/matth/flutter/packages/flutter/lib/src/painting/linear_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/matrix_utils.dart /home/matth/flutter/packages/flutter/lib/src/painting/notched_shapes.dart /home/matth/flutter/packages/flutter/lib/src/painting/oval_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/paint_utilities.dart /home/matth/flutter/packages/flutter/lib/src/painting/placeholder_span.dart /home/matth/flutter/packages/flutter/lib/src/painting/rounded_rectangle_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/shader_warm_up.dart /home/matth/flutter/packages/flutter/lib/src/painting/shape_decoration.dart /home/matth/flutter/packages/flutter/lib/src/painting/stadium_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/star_border.dart /home/matth/flutter/packages/flutter/lib/src/painting/strut_style.dart /home/matth/flutter/packages/flutter/lib/src/painting/text_painter.dart /home/matth/flutter/packages/flutter/lib/src/painting/text_scaler.dart /home/matth/flutter/packages/flutter/lib/src/painting/text_span.dart /home/matth/flutter/packages/flutter/lib/src/painting/text_style.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/characters.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/extensions.dart /home/matth/flutter/packages/flutter/lib/src/widgets/constants.dart /home/matth/flutter/packages/flutter/lib/src/painting/_web_image_info_io.dart /home/matth/flutter/packages/flutter/lib/src/widgets/_web_image_io.dart /home/matth/flutter/packages/flutter/lib/physics.dart /home/matth/flutter/packages/flutter/lib/src/widgets/_platform_selectable_region_context_menu_io.dart /home/matth/flutter/packages/flutter/lib/src/widgets/_html_element_view_io.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/global_state.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/date_format.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl_helpers.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/plural_rules.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/bidi.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/bidi_formatter.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/micro_money.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/number_format.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/number_parser_base.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/text_direction.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/date_symbol_data_custom.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/date_symbols.dart /home/matth/flutter/packages/flutter_localizations/lib/src/l10n/generated_date_localizations.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/vector_graphics_compat.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/cache.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/loaders.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/utilities/file.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/vector_graphics.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/default_theme.dart /home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/src/android.dart /home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/src/core.dart /home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/src/darwin.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/digest.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/hash.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/hmac.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/md5.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/sha1.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/sha256.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/sha512.dart /home/matth/.pub-cache/hosted/pub.dev/just_audio_platform_interface-4.5.0/lib/method_channel_just_audio.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/rx.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/streams.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/subjects.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/transformers.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/utils.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/data.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/rng.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/validation.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/enums.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/parsing.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/uuid_value.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v1.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v4.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v5.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v6.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v7.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v8.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/v8generic.dart /home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/lib/src/shared_preferences_devtools_extension_data.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_platform_interface-1.1.2/lib/src/method_channel_flutter_secure_storage.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_platform_interface-1.1.2/lib/src/options.dart /home/matth/flutter/packages/flutter/lib/src/foundation/_bitfield_io.dart /home/matth/flutter/packages/flutter/lib/src/foundation/_capabilities_io.dart /home/matth/flutter/packages/flutter/lib/src/foundation/_isolates_io.dart /home/matth/flutter/packages/flutter/lib/src/foundation/_platform_io.dart /home/matth/flutter/packages/flutter/lib/src/foundation/_timeline_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/archive/archive.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/archive/archive_file.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/archive/compression_type.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/archive/encryption_type.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/bzip2/bz2_bit_reader.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/bzip2/bz2_bit_writer.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/bzip2/bzip2.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/bzip2_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/bzip2_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/gzip_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/gzip_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/lzma/lzma_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/lzma/range_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/tar/tar_file.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/tar_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/tar_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/xz_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/xz_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zip/zip_directory.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zip/zip_file.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zip/zip_file_header.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zip_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zip_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/deflate.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/gzip_decoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/gzip_encoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/inflate.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/inflate_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/zlib_decoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/zlib_encoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/abstract_file_handle.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/adler32.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/aes_decrypt.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/archive_exception.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/byte_order.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/crc32.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/crc64.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/file_access.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/file_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/file_content.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/file_handle.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/input_file_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/input_memory_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/input_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/output_file_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/output_memory_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/output_stream.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/ram_file_handle.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_group.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/value/keyframe.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_double_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_text_frame.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_text_properties.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_transform.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/blur_effect.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/content_model.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/drop_shadow_effect.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/mask.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/misc.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/font_character_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/font_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/moshi/buffer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/moshi/json_scope.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/moshi/json_utf8_reader.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/mean_calculator.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/pair.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/client.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/exception.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/request.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/response.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/streamed_request.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/base_client.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/base_request.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/base_response.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/byte_stream.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/multipart_file.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/multipart_request.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/streamed_response.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/key_path_element.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/base_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/value_callback_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/base_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/shape_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/layer_blend.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/animatable_text_properties_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/animatable_transform_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/animatable_value_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/blur_effect_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/content_model_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/drop_shadow_effect_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/mask_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_cache/key.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/render_cache/store.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/date_time.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/env.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/exceptions.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/location.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/location_database.dart /home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/src/default.dart /home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/src/clock.dart /home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/lib/platform.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/dbus.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/dbus_wrapper.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/helpers.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/notification_info.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/platform_info.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/storage.dart /home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/src/get_application_id_real.dart /home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/lib/src/x_file.dart /home/matth/.pub-cache/hosted/pub.dev/share_plus_platform_interface-6.0.0/lib/method_channel/method_channel_share.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_directory.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_file.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_file_system.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_file_system_entity.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_link.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/forwarding/forwarding_random_access_file.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/directory.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/error_codes.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/file.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/file_system.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/file_system_entity.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/link.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/io.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local/local_file_system.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/characters.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/internal_style.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/parsed_path.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/style/posix.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/style/url.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/style/windows.dart /home/matth/flutter/packages/flutter/lib/src/services/_background_isolate_binary_messenger_io.dart /home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/method_channel_url_launcher.dart /home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/src/allocation.dart /home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/src/arena.dart /home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/src/utf16.dart /home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/src/utf8.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/xml.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/details.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/progress.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/bstr.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/callbacks.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/constants.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/constants_metadata.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/constants_nodoc.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/dispatcher.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/enums.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/enums.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/exceptions.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/functions.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/guid.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/inline.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/macros.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/propertykey.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/structs.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/structs.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/types.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/variant.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/winmd_constants.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/winrt_helpers.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/dialogs.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/filetime.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/int_to_hexstring.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/list_to_blob.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/set_ansi.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/set_string.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/set_string_array.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/unpack_utf16.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/advapi32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/bluetoothapis.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/bthprops.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/comctl32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/comdlg32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/crypt32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/dbghelp.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/dwmapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/dxva2.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/gdi32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/iphlpapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/kernel32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/magnification.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/netapi32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/ntdll.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/ole32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/oleaut32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/powrprof.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/propsys.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/rometadata.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/scarddlg.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/setupapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/shell32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/shlwapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/user32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/uxtheme.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/version.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/wevtapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/winmm.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/winscard.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/winspool.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/wlanapi.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/wtsapi32.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/xinput1_4.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_apiquery_l2_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_comm_l1_1_1.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_comm_l1_1_2.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_handle_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_path_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_sysinfo_l1_2_3.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_winrt_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_winrt_error_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_core_winrt_string_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_ro_typeresolution_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_ro_typeresolution_l1_1_1.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_shcore_scaling_l1_1_1.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/win32/api_ms_win_wsl_api_l1_1_0.g.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/combase.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iagileobject.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iapplicationactivationmanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxfactory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxfile.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxfilesenumerator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestapplication.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestapplicationsenumerator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestospackagedependency.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestpackagedependenciesenumerator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestpackagedependency.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestpackageid.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestproperties.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader3.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader4.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader5.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader6.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxmanifestreader7.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iappxpackagereader.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiocaptureclient.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclient.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclient2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclient3.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclientduckingcontrol.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclock.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclock2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudioclockadjustment.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiorenderclient.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiosessioncontrol.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiosessioncontrol2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiosessionenumerator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiosessionmanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiosessionmanager2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iaudiostreamvolume.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ibindctx.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ichannelaudiovolume.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iclassfactory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iconnectionpoint.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iconnectionpointcontainer.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/idesktopwallpaper.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/idispatch.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumidlist.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienummoniker.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumnetworkconnections.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumnetworks.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumresources.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumspellingerror.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumstring.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumvariant.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ienumwbemclassobject.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ierrorinfo.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifiledialog.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifiledialog2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifiledialogcustomize.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifileisinuse.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifileopendialog.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ifilesavedialog.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iinitializewithwindow.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iinspectable.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iknownfolder.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iknownfoldermanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadataassemblyimport.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadatadispenser.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadatadispenserex.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadataimport.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadataimport2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadatatables.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imetadatatables2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/immdevice.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/immdevicecollection.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/immdeviceenumerator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/immendpoint.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/immnotificationclient.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imodalwindow.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/imoniker.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/inetwork.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/inetworkconnection.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/inetworklistmanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/inetworklistmanagerevents.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ipersist.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ipersistfile.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ipersistmemory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ipersiststream.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ipropertystore.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iprovideclassinfo.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/irestrictederrorinfo.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/irunningobjecttable.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isensor.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isensorcollection.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isensordatareport.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isensormanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isequentialstream.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellfolder.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitem.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitem2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitemarray.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitemfilter.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitemimagefactory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellitemresources.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishelllink.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishelllinkdatalist.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishelllinkdual.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ishellservice.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isimpleaudiovolume.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechaudioformat.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechbasestream.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechobjecttoken.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechobjecttokens.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechvoice.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechvoicestatus.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeechwaveformatex.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispellchecker.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispellchecker2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispellcheckerchangedeventhandler.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispellcheckerfactory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispellingerror.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispeventsource.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispnotifysource.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ispvoice.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/istream.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/isupporterrorinfo.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/itypeinfo.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation3.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation4.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation5.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomation6.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationandcondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationannotationpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationboolcondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationcacherequest.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationcondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationcustomnavigationpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationdockpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationdragpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationdroptargetpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement3.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement4.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement5.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement6.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement7.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement8.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelement9.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationelementarray.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationexpandcollapsepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationgriditempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationgridpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationinvokepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationitemcontainerpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationlegacyiaccessiblepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationmultipleviewpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationnotcondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationobjectmodelpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationorcondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationpropertycondition.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationproxyfactory.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationproxyfactoryentry.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationproxyfactorymapping.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationrangevaluepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationscrollitempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationscrollpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationselectionitempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationselectionpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationselectionpattern2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationspreadsheetitempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationspreadsheetpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationstylespattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationsynchronizedinputpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtableitempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtablepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextchildpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtexteditpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextpattern2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextrange.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextrange2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextrange3.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtextrangearray.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtogglepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtransformpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtransformpattern2.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationtreewalker.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationvaluepattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationvirtualizeditempattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuiautomationwindowpattern.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iunknown.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iuri.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/ivirtualdesktopmanager.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemclassobject.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemconfigurerefresher.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemcontext.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemhiperfenum.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemlocator.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemobjectaccess.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemrefresher.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwbemservices.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwebauthenticationcoremanagerinterop.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/com/iwinhttprequest.dart /home/matth/flutter/packages/flutter/lib/src/semantics/binding.dart /home/matth/flutter/packages/flutter/lib/src/semantics/debug.dart /home/matth/flutter/packages/flutter/lib/src/semantics/semantics.dart /home/matth/flutter/packages/flutter/lib/src/semantics/semantics_event.dart /home/matth/flutter/packages/flutter/lib/src/semantics/semantics_service.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/combined_wrappers/combined_iterator.dart /home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/src/empty_unmodifiable_set.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/src/contrast_curve.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/src/tone_delta_pair.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/hct/src/hct_solver.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/src/point_provider_lab.dart /home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/quantize/src/point_provider.dart /home/matth/flutter/packages/flutter/lib/src/painting/_network_image_io.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/characters_impl.dart /home/matth/flutter/packages/flutter/lib/src/physics/clamped_simulation.dart /home/matth/flutter/packages/flutter/lib/src/physics/friction_simulation.dart /home/matth/flutter/packages/flutter/lib/src/physics/gravity_simulation.dart /home/matth/flutter/packages/flutter/lib/src/physics/simulation.dart /home/matth/flutter/packages/flutter/lib/src/physics/spring_simulation.dart /home/matth/flutter/packages/flutter/lib/src/physics/tolerance.dart /home/matth/flutter/packages/flutter/lib/src/physics/utils.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/date_format_internal.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/constants.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/date_builder.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/date_computation.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/regexp.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/string_stack.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/date_format_field.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/number_symbols.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/number_symbols_data.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/number_format_parser.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/number_parser.dart /home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/src/intl/compact_number_format.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/vector_graphics.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/vector_graphics_compiler.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/utilities/compute.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/src/utilities/_file_io.dart /home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/src/util.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/digest_sink.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/hash_sink.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/src/sha512_fastsinks.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/error_and_stacktrace.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/combine_latest.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/concat.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/concat_eager.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/connectable_stream.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/defer.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/fork_join.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/from_callable.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/merge.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/never.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/race.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/range.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/repeat.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/replay_stream.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/retry.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/retry_when.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/sequence_equal.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/switch_latest.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/timer.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/using.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/value_stream.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/streams/zip.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/subjects/behavior_subject.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/subjects/publish_subject.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/subjects/replay_subject.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/subjects/subject.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/buffer.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/debounce.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/pairwise.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/sample.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/throttle.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/window.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/default_if_empty.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/delay.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/delay_when.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/dematerialize.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/distinct_unique.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/do.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/end_with.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/end_with_many.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/exhaust_map.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/flat_map.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/group_by.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/ignore_elements.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/interval.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/map_not_null.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/map_to.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/materialize.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/max.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/min.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/on_error_resume.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/scan.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/skip_last.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/skip_until.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/start_with.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/start_with_many.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/switch_if_empty.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/switch_map.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/take_last.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/take_until.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/take_while_inclusive.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/time_interval.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/timestamp.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/where_not_null.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/where_type.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/with_latest_from.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/composite_subscription.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/notification.dart /home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/constants.dart /home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/fixnum.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/sprintf.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/_cast.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/aes.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/encryption.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_decoder_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_decoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_decoder_base.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_encoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_encoder_base.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_huffman_table.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_inflate_buffer_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_decoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_encoder_web.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/_crc64_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/util/_file_handle_io.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/content_group.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/double_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/base_animatable_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/text_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/document_data.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_color_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/modifier_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/transform_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_integer_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_path_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_scale_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_shape_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/key_path_element_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_data.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/moshi/charcode.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/io_client.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/http_parser.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/multipart_file_io.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/boundary_characters.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/drawing_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/mask_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/image_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/null_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/solid_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/layer/text_layer.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_split_dimension_path_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/animatable_path_value_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_gradient_color_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/animatable/animatable_point_value.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/color_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/document_data_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/float_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/gradient_color_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/integer_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/keyframes_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/offset_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/scale_xy_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_data_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/value_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/circle_shape_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/gradient_fill_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/gradient_stroke_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/merge_paths_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/polysar_shape_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/rectangle_shape_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/repeat_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/rounded_corners_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_fill_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_group_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_path_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_stroke_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/shape_trim_path_parser.dart /home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/src/tzdb.dart /home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/src/stopwatch.dart /home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/lib/src/interface/local_platform.dart /home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/lib/src/interface/platform.dart /home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/lib/src/testing/fake_platform.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_address.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_auth_client.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_client.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_introspect.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_method_call.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_method_response.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_object.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_remote_object.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_remote_object_manager.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_server.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_signal.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_value.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/posix.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/src/file_system.dart /home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/lib/src/types/io.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/mime.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/interface/error_codes_dart_io.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local/local_directory.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local/local_file.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local/local_link.dart /home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/builder.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/entities/default_mapping.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/entities/entity_mapping.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/entities/null_mapping.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/enums/attribute_type.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/enums/node_type.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/format_exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/parent_exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/parser_exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/tag_exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/exceptions/type_exception.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/ancestors.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/comparison.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/descendants.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/find.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/following.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/mutator.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/nodes.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/parent.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/preceding.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/sibling.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/extensions/string.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_attributes.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_children.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_name.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_parent.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_visitor.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_writer.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/attribute.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/cdata.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/comment.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/declaration.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/doctype.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/document.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/document_fragment.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/element.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/node.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/processing.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/text.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/name.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/token.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/visitors/normalizer.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/visitors/pretty_writer.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/visitors/visitor.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/visitors/writer.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/action.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/audio.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/header.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/image.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/input.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/row.dart /home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/src/extensions/_internal.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/grapheme_clusters/breaks.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/grapheme_clusters/constants.dart /home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/src/grapheme_clusters/table.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_codec-1.1.13/lib/vector_graphics_codec.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/html_render_vector_graphics.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/listener.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/loader.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/render_object_selection.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/render_vector_graphic.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/image.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/matrix.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/path.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/pattern.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/vertices.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/paint.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/color_mapper.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/parser.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/theme.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/vector_instructions.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/_initialize_path_ops_io.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/_initialize_tessellator_io.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/geometry/basic_types.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/path_ops.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/resolver.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/tessellator.dart /home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/lib/typed_data.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/collection_extensions.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/subscription.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/start_with_error.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/empty.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/transformers/backpressure/backpressure.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/forwarding_sink.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/forwarding_stream.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/future.dart /home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/src/utils/min_max.dart /home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/src/int32.dart /home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/src/int64.dart /home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/src/intx.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/Formatter.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/int_formatter.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/float_formatter.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/string_formatter.dart /home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/src/sprintf_impl.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_decoder_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_gzip_encoder_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/_zlib_encoder_io.dart /home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/src/codecs/zlib/gzip_flag.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/greedy_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/path_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/color_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/integer_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/path_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/point_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/shape_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/cubic_curve_data.dart /home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/src/io_streamed_response.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/authentication_challenge.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/case_insensitive_map.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/chunked_coding.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/http_date.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/media_type.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/characters.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/split_dimension_path_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/json_utils.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/path_keyframe_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/gradient_color_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/gradient_color.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/collection.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/gamma_evaluator.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/keyframe_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/circle_shape.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/gradient_fill.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/gradient_type.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/gradient_stroke.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_stroke.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/merge_paths.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/polystar_shape.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/rectangle_shape.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/repeater.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/rounded_corners.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_fill.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_path.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/model/content/shape_trim_path.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_uuid.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/getsid.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/getuid.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_bus_name.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_error_name.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_interface_name.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_introspectable.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_match_rule.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_member_name.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_message.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_object_manager.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_object_tree.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_peer.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_properties.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_read_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_write_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_auth_server.dart /home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/lib/src/types/base.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/extension.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/mime_multipart_transformer.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/mime_shared.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/mime_type.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/common.dart /home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/src/backends/local/local_file_system_entity.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/dtd/external_id.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/nodes/data.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/namespace.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/entities/named_entities.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/core.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/name_matcher.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/node_list.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/predicate.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/xml_events.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/mixins/has_value.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/prefix_name.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/simple_name.dart /home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/src/details/xml/text.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_codec-1.1.13/lib/src/fp16.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/debug.dart /home/matth/.pub-cache/hosted/pub.dev/path_parsing-1.1.0/lib/path_parsing.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/util.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/image/image_info.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/clipping_optimizer.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/colors.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/masking_optimizer.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/node.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/numbers.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/overdraw_optimizer.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/parsers.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/visitor.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/_path_ops_ffi.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/svg/_tessellator_ffi.dart /home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/lib/src/typed_queue.dart /home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/lib/typed_buffers.dart /home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/src/utilities.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/path_keyframe.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/shape_modifier_content.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/string_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/scan.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/chunked_coding/decoder.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/chunked_coding/encoder.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/parser/path_parser.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/path_interpolator.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/utils.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/ellipse_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/gradient_fill_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/gradient_stroke_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/stroke_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/merge_paths_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/polystar_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/rectangle_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/repeater_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/rounded_corners_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/fill_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/shape_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/trim_path_content.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/getsid_windows.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/getuid_linux.dart /home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/src/dbus_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/default_extension_map.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/bound_multipart_stream.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/char_code.dart /home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/src/magic_number.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/core/context.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/core/exception.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/core/parser.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/core/result.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/core/token.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/event.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/iterable.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/codec/event_codec.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/codec/node_codec.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/converters/event_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/converters/event_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/converters/node_decoder.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/converters/node_encoder.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/cdata.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/comment.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/declaration.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/doctype.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/end_element.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/processing.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/start_element.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/events/text.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/streams/each_event.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/streams/flatten.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/streams/normalizer.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/streams/subtree_selector.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/streams/with_parent.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/utils/event_attribute.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/visitor.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/src/_debug_io.dart /home/matth/.pub-cache/hosted/pub.dev/path_parsing-1.1.0/lib/src/path_parsing.dart /home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/src/draw_command_builder.dart /home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/lib/src/typed_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/exception.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/line_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/span_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/string_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/source_span.dart /home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/src/chunked_coding/charcodes.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/compound_trim_path_content.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/keyframe/drop_shadow_keyframe_animation.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/animation/content/base_stroke_content.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/shared/annotations.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/matches.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/token.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/newline.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/annotations/has_buffer.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/annotations/has_location.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/annotations/has_parent.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/annotations/annotator.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/iterator.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/petitparser.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/parser.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/utils/conversion_sink.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/utils/list_converter.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml_events/utils/named.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/vector_math.dart /home/matth/.pub-cache/hosted/pub.dev/path_parsing-1.1.0/lib/src/path_segment_type.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/charcode.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/eager_span_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/src/relative_span_scanner.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/file.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/location.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/location_mixin.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/span.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/span_exception.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/span_mixin.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/span_with_context.dart /home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/src/utils/dash_path.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/matches/matches_iterable.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/delegate.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/definition.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/expression.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/matcher.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/parser.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/cache.dart /home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/src/xml/utils/character_data_parser.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/aabb2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/aabb3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/colors.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/constants.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/error_helpers.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/frustum.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/intersection_result.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/matrix2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/matrix3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/matrix4.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/noise.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/obb3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/opengl.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/plane.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/quad.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/quaternion.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/ray.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/sphere.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/triangle.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/utilities.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/vector.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/vector2.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/vector3.dart /home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/src/vector_math/vector4.dart /home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/term_glyph.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/highlighter.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/utils.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/matches/matches_iterator.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/grammar.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/parser.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/reference.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/resolve.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/expression/builder.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/expression/group.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/accept.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/pattern.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/cast.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/cast_list.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/continuation.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/flatten.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/map.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/permute.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/pick.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/trimming.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/action/where.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/any_of.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/char.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/digit.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/letter.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/lowercase.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/none_of.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/pattern.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/predicate.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/range.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/uppercase.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/whitespace.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/word.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/and.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/choice.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/list.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/not.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/optional.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/sequence.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/settable.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/skip.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/eof.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/epsilon.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/failure.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/label.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/misc/position.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/predicate/any.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/predicate/character.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/predicate/pattern.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/predicate/predicate.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/predicate/string.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/character.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/greedy.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/lazy.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/limited.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/possessive.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/repeating.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/separated.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/separated_by.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/repeater/unbounded.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/utils/failure_joiner.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/utils/labeled.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/utils/resolvable.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/utils/separated_list.dart /home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/src/generated/ascii_glyph_set.dart /home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/src/generated/glyph_set.dart /home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/src/generated/unicode_glyph_set.dart /home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/src/generated/top_level.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/charcode.dart /home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/src/colors.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/internal/reference.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/definition/internal/undefined.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/reflection/iterable.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/expression/utils.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/expression/result.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/pattern/parser_pattern.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/shared/types.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/utils/sequential.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/code.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/optimize.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/not.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/constant.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_2.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_3.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_4.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_5.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_6.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_7.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_8.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/combinator/generated/sequence_9.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/pattern/parser_match.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/pattern/pattern_iterable.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/parser/character/lookup.dart /home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/src/matcher/pattern/pattern_iterator.dart
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/linux_engine_sources.d b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/linux_engine_sources.d
deleted file mode 100644
index d132f36..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/linux_engine_sources.d
+++ /dev/null
@@ -1 +0,0 @@
- /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so /home/matth/zen_project1337/linux/flutter/ephemeral/icudtl.dat /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_registrar.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_gl.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_application.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_event_channel.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_pixel_buffer_texture.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h:  /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/libflutter_linux_gtk.so /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/icudtl.dat /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_channel.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_dart_project.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_message_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_registrar.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_gl.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_application.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_engine.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_value.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_response.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/flutter_linux.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_event_channel.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_message_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_call.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_view.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registrar.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_message_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_method_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_string_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_pixel_buffer_texture.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_messenger.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_method_codec.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_basic_message_channel.h /home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registry.h
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/outputs.json b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/outputs.json
deleted file mode 100644
index 3a83172..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/outputs.json
+++ /dev/null
@@ -1 +0,0 @@
-["/home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so","/home/matth/zen_project1337/linux/flutter/ephemeral/icudtl.dat","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_registrar.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_gl.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_application.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_event_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_pixel_buffer_texture.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h"]
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/unpack_linux.stamp b/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/unpack_linux.stamp
deleted file mode 100644
index b3942af..0000000
--- a/zen_project1337/.dart_tool/flutter_build/e791bbfce813ca1e2bc96be98e87b603/unpack_linux.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":["/home/matth/flutter/packages/flutter_tools/lib/src/build_system/targets/linux.dart","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/libflutter_linux_gtk.so","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/icudtl.dat","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_channel.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_dart_project.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_message_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_registrar.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_texture_gl.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_application.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_engine.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_value.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_response.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/flutter_linux.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_event_channel.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_message_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_call.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_method_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_view.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registrar.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_message_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_json_method_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_string_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_pixel_buffer_texture.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_binary_messenger.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_standard_method_codec.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_basic_message_channel.h","/home/matth/flutter/bin/cache/artifacts/engine/linux-x64/flutter_linux/fl_plugin_registry.h"],"outputs":["/home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so","/home/matth/zen_project1337/linux/flutter/ephemeral/icudtl.dat","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_registrar.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_texture_gl.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_application.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_event_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_pixel_buffer_texture.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h","/home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h"]}
\ No newline at end of file
diff --git a/zen_project1337/.dart_tool/package_config.json b/zen_project1337/.dart_tool/package_config.json
index d756eb7..b85834a 100644
--- a/zen_project1337/.dart_tool/package_config.json
+++ b/zen_project1337/.dart_tool/package_config.json
@@ -43,48 +43,6 @@
       "packageUri": "lib/",
       "languageVersion": "3.4"
     },
-    {
-      "name": "audioplayers",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers-6.5.0",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_android",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_android-5.2.1",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_darwin",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_darwin-6.3.0",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_linux",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_linux-4.2.1",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_platform_interface",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_platform_interface-7.1.1",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_web",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_web-5.1.1",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
-    {
-      "name": "audioplayers_windows",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_windows-4.2.1",
-      "packageUri": "lib/",
-      "languageVersion": "3.6"
-    },
     {
       "name": "boolean_selector",
       "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/boolean_selector-2.1.2",
@@ -199,6 +157,12 @@
       "packageUri": "lib/",
       "languageVersion": "2.17"
     },
+    {
+      "name": "equatable",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/equatable-2.0.7",
+      "packageUri": "lib/",
+      "languageVersion": "2.12"
+    },
     {
       "name": "fake_async",
       "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/fake_async-1.3.3",
@@ -223,11 +187,17 @@
       "packageUri": "lib/",
       "languageVersion": "3.1"
     },
+    {
+      "name": "fl_chart",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/fl_chart-1.0.0",
+      "packageUri": "lib/",
+      "languageVersion": "3.6"
+    },
     {
       "name": "flutter",
       "rootUri": "file:///home/matth/flutter/packages/flutter",
       "packageUri": "lib/",
-      "languageVersion": "3.7"
+      "languageVersion": "3.8"
     },
     {
       "name": "flutter_dotenv",
@@ -235,6 +205,12 @@
       "packageUri": "lib/",
       "languageVersion": "2.12"
     },
+    {
+      "name": "flutter_lints",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/flutter_lints-4.0.0",
+      "packageUri": "lib/",
+      "languageVersion": "3.1"
+    },
     {
       "name": "flutter_local_notifications",
       "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0",
@@ -263,7 +239,7 @@
       "name": "flutter_localizations",
       "rootUri": "file:///home/matth/flutter/packages/flutter_localizations",
       "packageUri": "lib/",
-      "languageVersion": "3.7"
+      "languageVersion": "3.8"
     },
     {
       "name": "flutter_secure_storage",
@@ -311,13 +287,13 @@
       "name": "flutter_test",
       "rootUri": "file:///home/matth/flutter/packages/flutter_test",
       "packageUri": "lib/",
-      "languageVersion": "3.7"
+      "languageVersion": "3.8"
     },
     {
       "name": "flutter_web_plugins",
       "rootUri": "file:///home/matth/flutter/packages/flutter_web_plugins",
       "packageUri": "lib/",
-      "languageVersion": "3.7"
+      "languageVersion": "3.8"
     },
     {
       "name": "frontend_server_client",
@@ -405,22 +381,28 @@
     },
     {
       "name": "leak_tracker",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker-10.0.9",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker-11.0.1",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
     {
       "name": "leak_tracker_flutter_testing",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.9",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.10",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
     {
       "name": "leak_tracker_testing",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_testing-3.0.1",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_testing-3.0.2",
       "packageUri": "lib/",
       "languageVersion": "3.2"
     },
+    {
+      "name": "lints",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/lints-4.0.0",
+      "packageUri": "lib/",
+      "languageVersion": "3.1"
+    },
     {
       "name": "logging",
       "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/logging-1.3.0",
@@ -689,7 +671,7 @@
       "name": "sky_engine",
       "rootUri": "file:///home/matth/flutter/bin/cache/pkg/sky_engine",
       "packageUri": "lib/",
-      "languageVersion": "3.7"
+      "languageVersion": "3.8"
     },
     {
       "name": "source_gen",
@@ -765,7 +747,7 @@
     },
     {
       "name": "test_api",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/test_api-0.7.4",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/test_api-0.7.6",
       "packageUri": "lib/",
       "languageVersion": "3.5"
     },
@@ -837,9 +819,9 @@
     },
     {
       "name": "vector_math",
-      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4",
+      "rootUri": "file:///home/matth/.pub-cache/hosted/pub.dev/vector_math-2.2.0",
       "packageUri": "lib/",
-      "languageVersion": "2.14"
+      "languageVersion": "3.1"
     },
     {
       "name": "vm_service",
@@ -903,8 +885,8 @@
     }
   ],
   "generator": "pub",
-  "generatorVersion": "3.8.1",
+  "generatorVersion": "3.9.0-333.2.beta",
   "flutterRoot": "file:///home/matth/flutter",
-  "flutterVersion": "3.32.8",
+  "flutterVersion": "3.35.0-0.1.pre",
   "pubCache": "file:///home/matth/.pub-cache"
 }
diff --git a/zen_project1337/.dart_tool/package_config_subset b/zen_project1337/.dart_tool/package_config_subset
deleted file mode 100644
index f51386b..0000000
--- a/zen_project1337/.dart_tool/package_config_subset
+++ /dev/null
@@ -1,601 +0,0 @@
-_fe_analyzer_shared
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/_fe_analyzer_shared-85.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/_fe_analyzer_shared-85.0.0/lib/
-analyzer
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/analyzer-7.7.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/analyzer-7.7.1/lib/
-animations
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/
-file:///home/matth/.pub-cache/hosted/pub.dev/animations-2.0.11/lib/
-archive
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/
-file:///home/matth/.pub-cache/hosted/pub.dev/archive-4.0.7/lib/
-args
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/args-2.7.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/args-2.7.0/lib/
-async
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/async-2.13.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/async-2.13.0/lib/
-audio_session
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/
-file:///home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/lib/
-audioplayers
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers-6.5.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers-6.5.0/lib/
-audioplayers_android
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_android-5.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_android-5.2.1/lib/
-audioplayers_darwin
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_darwin-6.3.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_darwin-6.3.0/lib/
-audioplayers_linux
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_linux-4.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_linux-4.2.1/lib/
-audioplayers_platform_interface
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_platform_interface-7.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_platform_interface-7.1.1/lib/
-audioplayers_web
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_web-5.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_web-5.1.1/lib/
-audioplayers_windows
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_windows-4.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/audioplayers_windows-4.2.1/lib/
-boolean_selector
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/boolean_selector-2.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/boolean_selector-2.1.2/lib/
-build
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/build-3.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/build-3.0.0/lib/
-build_config
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/build_config-1.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/build_config-1.1.2/lib/
-build_daemon
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/build_daemon-4.0.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/build_daemon-4.0.4/lib/
-build_resolvers
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/build_resolvers-3.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/build_resolvers-3.0.0/lib/
-build_runner
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/build_runner-2.6.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/build_runner-2.6.0/lib/
-build_runner_core
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/build_runner_core-9.2.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/build_runner_core-9.2.0/lib/
-built_collection
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/built_collection-5.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/built_collection-5.1.1/lib/
-built_value
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/built_value-8.11.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/built_value-8.11.0/lib/
-characters
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/characters-1.4.0/lib/
-checked_yaml
-3.8
-file:///home/matth/.pub-cache/hosted/pub.dev/checked_yaml-2.0.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/checked_yaml-2.0.4/lib/
-clock
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/clock-1.1.2/lib/
-code_builder
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/code_builder-4.10.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/code_builder-4.10.1/lib/
-collection
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/collection-1.19.1/lib/
-convert
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/convert-3.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/convert-3.1.2/lib/
-cross_file
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/
-file:///home/matth/.pub-cache/hosted/pub.dev/cross_file-0.3.4+2/lib/
-crypto
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/
-file:///home/matth/.pub-cache/hosted/pub.dev/crypto-3.0.6/lib/
-dart_style
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/dart_style-3.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/dart_style-3.1.1/lib/
-dbus
-2.17
-file:///home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/
-file:///home/matth/.pub-cache/hosted/pub.dev/dbus-0.7.11/lib/
-fake_async
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/fake_async-1.3.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/fake_async-1.3.3/lib/
-ffi
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/ffi-2.1.4/lib/
-file
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/file-7.0.1/lib/
-fixnum
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/fixnum-1.1.1/lib/
-flutter_dotenv
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_dotenv-5.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_dotenv-5.2.1/lib/
-flutter_local_notifications
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/lib/
-flutter_local_notifications_linux
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/lib/
-flutter_local_notifications_platform_interface
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_platform_interface-9.1.0/lib/
-flutter_local_notifications_windows
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/lib/
-flutter_secure_storage
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/
-flutter_secure_storage_linux
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_linux-1.2.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_linux-1.2.3/lib/
-flutter_secure_storage_macos
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_macos-3.1.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_macos-3.1.3/lib/
-flutter_secure_storage_platform_interface
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_platform_interface-1.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_platform_interface-1.1.2/lib/
-flutter_secure_storage_web
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_web-1.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_web-1.2.1/lib/
-flutter_secure_storage_windows
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/lib/
-flutter_svg
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/flutter_svg-2.2.0/lib/
-frontend_server_client
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/frontend_server_client-4.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/frontend_server_client-4.0.0/lib/
-glob
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/glob-2.1.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/glob-2.1.3/lib/
-graphs
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/graphs-2.3.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/graphs-2.3.2/lib/
-http
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/http-1.4.0/lib/
-http_multi_server
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/http_multi_server-3.2.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/http_multi_server-3.2.2/lib/
-http_parser
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/http_parser-4.1.2/lib/
-intl
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/intl-0.20.2/lib/
-io
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/io-1.0.5/
-file:///home/matth/.pub-cache/hosted/pub.dev/io-1.0.5/lib/
-js
-2.19
-file:///home/matth/.pub-cache/hosted/pub.dev/js-0.6.7/
-file:///home/matth/.pub-cache/hosted/pub.dev/js-0.6.7/lib/
-json_annotation
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/json_annotation-4.9.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/json_annotation-4.9.0/lib/
-json_serializable
-3.8
-file:///home/matth/.pub-cache/hosted/pub.dev/json_serializable-6.10.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/json_serializable-6.10.0/lib/
-just_audio
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/lib/
-just_audio_platform_interface
-2.17
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio_platform_interface-4.5.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio_platform_interface-4.5.0/lib/
-just_audio_web
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio_web-0.4.16/
-file:///home/matth/.pub-cache/hosted/pub.dev/just_audio_web-0.4.16/lib/
-leak_tracker
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker-10.0.9/
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker-10.0.9/lib/
-leak_tracker_flutter_testing
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.9/
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.9/lib/
-leak_tracker_testing
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_testing-3.0.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/leak_tracker_testing-3.0.1/lib/
-logging
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/logging-1.3.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/logging-1.3.0/lib/
-lottie
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/lottie-3.3.1/lib/
-matcher
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/matcher-0.12.17/
-file:///home/matth/.pub-cache/hosted/pub.dev/matcher-0.12.17/lib/
-material_color_utilities
-2.17
-file:///home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/
-meta
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/meta-1.16.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/meta-1.16.0/lib/
-mime
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/mime-2.0.0/lib/
-nested
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/nested-1.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/nested-1.0.0/lib/
-package_config
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/package_config-2.2.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/package_config-2.2.0/lib/
-path
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/path-1.9.1/lib/
-path_parsing
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/path_parsing-1.1.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_parsing-1.1.0/lib/
-path_provider
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider-2.1.5/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider-2.1.5/lib/
-path_provider_android
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/lib/
-path_provider_foundation
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/lib/
-path_provider_linux
-2.19
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/lib/
-path_provider_platform_interface
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib/
-path_provider_windows
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/lib/
-pedantic
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/pedantic-1.11.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/pedantic-1.11.1/lib/
-permission_handler
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler-11.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler-11.4.0/lib/
-permission_handler_android
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_android-12.1.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_android-12.1.0/lib/
-permission_handler_apple
-2.18
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_apple-9.4.7/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_apple-9.4.7/lib/
-permission_handler_html
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_html-0.1.3+5/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_html-0.1.3+5/lib/
-permission_handler_platform_interface
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_platform_interface-4.3.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_platform_interface-4.3.0/lib/
-permission_handler_windows
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_windows-0.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/permission_handler_windows-0.2.1/lib/
-petitparser
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/petitparser-6.1.0/lib/
-platform
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/
-file:///home/matth/.pub-cache/hosted/pub.dev/platform-3.1.6/lib/
-plugin_platform_interface
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/plugin_platform_interface-2.1.8/
-file:///home/matth/.pub-cache/hosted/pub.dev/plugin_platform_interface-2.1.8/lib/
-pool
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/pool-1.5.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/pool-1.5.1/lib/
-posix
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/posix-6.0.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/posix-6.0.3/lib/
-provider
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/
-file:///home/matth/.pub-cache/hosted/pub.dev/provider-6.1.5/lib/
-pub_semver
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/pub_semver-2.2.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/pub_semver-2.2.0/lib/
-pubspec_parse
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/pubspec_parse-1.5.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/pubspec_parse-1.5.0/lib/
-rxdart
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/rxdart-0.28.0/lib/
-screenshot
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/screenshot-3.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/screenshot-3.0.0/lib/
-share_plus
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/lib/
-share_plus_platform_interface
-2.18
-file:///home/matth/.pub-cache/hosted/pub.dev/share_plus_platform_interface-6.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/share_plus_platform_interface-6.0.0/lib/
-shared_preferences
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences-2.5.3/lib/
-shared_preferences_android
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib/
-shared_preferences_foundation
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib/
-shared_preferences_linux
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_linux-2.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_linux-2.4.1/lib/
-shared_preferences_platform_interface
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib/
-shared_preferences_web
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_web-2.4.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_web-2.4.3/lib/
-shared_preferences_windows
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_windows-2.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/shared_preferences_windows-2.4.1/lib/
-shelf
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/shelf-1.4.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/shelf-1.4.2/lib/
-shelf_web_socket
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/shelf_web_socket-3.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/shelf_web_socket-3.0.0/lib/
-source_gen
-3.7
-file:///home/matth/.pub-cache/hosted/pub.dev/source_gen-3.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/source_gen-3.0.0/lib/
-source_helper
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/source_helper-1.3.6/
-file:///home/matth/.pub-cache/hosted/pub.dev/source_helper-1.3.6/lib/
-source_span
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/source_span-1.10.1/lib/
-speech_to_text
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/lib/
-speech_to_text_platform_interface
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/speech_to_text_platform_interface-2.3.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/speech_to_text_platform_interface-2.3.0/lib/
-sprintf
-2.12
-file:///home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/sprintf-7.0.0/lib/
-stack_trace
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/stack_trace-1.12.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/stack_trace-1.12.1/lib/
-stream_channel
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/stream_channel-2.1.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/stream_channel-2.1.4/lib/
-stream_transform
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/stream_transform-2.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/stream_transform-2.1.1/lib/
-string_scanner
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/string_scanner-1.4.1/lib/
-synchronized
-3.8
-file:///home/matth/.pub-cache/hosted/pub.dev/synchronized-3.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/synchronized-3.4.0/lib/
-term_glyph
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/term_glyph-1.2.2/lib/
-test_api
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/test_api-0.7.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/test_api-0.7.4/lib/
-timezone
-2.19
-file:///home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/timezone-0.10.1/lib/
-timing
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/timing-1.0.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/timing-1.0.2/lib/
-typed_data
-3.5
-file:///home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/typed_data-1.4.0/lib/
-url_launcher_linux
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/lib/
-url_launcher_platform_interface
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib/
-url_launcher_web
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_web-2.4.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_web-2.4.1/lib/
-url_launcher_windows
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/lib/
-uuid
-3.0
-file:///home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/uuid-4.5.1/lib/
-vector_graphics
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics-1.1.19/lib/
-vector_graphics_codec
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics_codec-1.1.13/
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics_codec-1.1.13/lib/
-vector_graphics_compiler
-3.6
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_graphics_compiler-1.1.17/lib/
-vector_math
-2.14
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/
-file:///home/matth/.pub-cache/hosted/pub.dev/vector_math-2.1.4/lib/
-vm_service
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/vm_service-15.0.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/vm_service-15.0.0/lib/
-watcher
-3.1
-file:///home/matth/.pub-cache/hosted/pub.dev/watcher-1.1.2/
-file:///home/matth/.pub-cache/hosted/pub.dev/watcher-1.1.2/lib/
-web
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/web-1.1.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/web-1.1.1/lib/
-web_socket
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/web_socket-1.0.1/
-file:///home/matth/.pub-cache/hosted/pub.dev/web_socket-1.0.1/lib/
-web_socket_channel
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/web_socket_channel-3.0.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/web_socket_channel-3.0.3/lib/
-win32
-3.8
-file:///home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/win32-5.14.0/lib/
-xdg_directories
-3.3
-file:///home/matth/.pub-cache/hosted/pub.dev/xdg_directories-1.1.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/xdg_directories-1.1.0/lib/
-xml
-3.2
-file:///home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/
-file:///home/matth/.pub-cache/hosted/pub.dev/xml-6.5.0/lib/
-yaml
-3.4
-file:///home/matth/.pub-cache/hosted/pub.dev/yaml-3.1.3/
-file:///home/matth/.pub-cache/hosted/pub.dev/yaml-3.1.3/lib/
-sky_engine
-3.7
-file:///home/matth/flutter/bin/cache/pkg/sky_engine/
-file:///home/matth/flutter/bin/cache/pkg/sky_engine/lib/
-flutter
-3.7
-file:///home/matth/flutter/packages/flutter/
-file:///home/matth/flutter/packages/flutter/lib/
-flutter_localizations
-3.7
-file:///home/matth/flutter/packages/flutter_localizations/
-file:///home/matth/flutter/packages/flutter_localizations/lib/
-flutter_test
-3.7
-file:///home/matth/flutter/packages/flutter_test/
-file:///home/matth/flutter/packages/flutter_test/lib/
-flutter_web_plugins
-3.7
-file:///home/matth/flutter/packages/flutter_web_plugins/
-file:///home/matth/flutter/packages/flutter_web_plugins/lib/
-zenyourself
-2.17
-file:///home/matth/zen_project1337/
-file:///home/matth/zen_project1337/lib/
-2
diff --git a/zen_project1337/.dart_tool/package_graph.json b/zen_project1337/.dart_tool/package_graph.json
index 9b2de54..e9509ab 100644
--- a/zen_project1337/.dart_tool/package_graph.json
+++ b/zen_project1337/.dart_tool/package_graph.json
@@ -8,7 +8,8 @@
       "version": "1.0.0+1",
       "dependencies": [
         "animations",
-        "audioplayers",
+        "collection",
+        "fl_chart",
         "flutter",
         "flutter_dotenv",
         "flutter_local_notifications",
@@ -16,6 +17,7 @@
         "flutter_secure_storage",
         "flutter_svg",
         "http",
+        "intl",
         "json_annotation",
         "just_audio",
         "lottie",
@@ -25,14 +27,23 @@
         "screenshot",
         "share_plus",
         "shared_preferences",
-        "speech_to_text"
+        "speech_to_text",
+        "uuid"
       ],
       "devDependencies": [
         "build_runner",
+        "flutter_lints",
         "flutter_test",
         "json_serializable"
       ]
     },
+    {
+      "name": "flutter_lints",
+      "version": "4.0.0",
+      "dependencies": [
+        "lints"
+      ]
+    },
     {
       "name": "json_serializable",
       "version": "6.10.0",
@@ -87,85 +98,115 @@
       "name": "flutter_test",
       "version": "0.0.0",
       "dependencies": [
-        "async",
-        "boolean_selector",
-        "characters",
         "clock",
         "collection",
         "fake_async",
         "flutter",
-        "leak_tracker",
         "leak_tracker_flutter_testing",
-        "leak_tracker_testing",
         "matcher",
-        "material_color_utilities",
         "meta",
         "path",
-        "source_span",
         "stack_trace",
         "stream_channel",
-        "string_scanner",
-        "term_glyph",
         "test_api",
-        "vector_math",
-        "vm_service"
+        "vector_math"
       ]
     },
     {
-      "name": "flutter_localizations",
-      "version": "0.0.0",
+      "name": "intl",
+      "version": "0.20.2",
       "dependencies": [
-        "characters",
         "clock",
-        "collection",
-        "flutter",
-        "intl",
-        "material_color_utilities",
         "meta",
-        "path",
-        "vector_math"
+        "path"
       ]
     },
     {
-      "name": "animations",
-      "version": "2.0.11",
+      "name": "collection",
+      "version": "1.19.1",
+      "dependencies": []
+    },
+    {
+      "name": "uuid",
+      "version": "4.5.1",
+      "dependencies": [
+        "crypto",
+        "fixnum",
+        "meta",
+        "sprintf"
+      ]
+    },
+    {
+      "name": "screenshot",
+      "version": "3.0.0",
       "dependencies": [
         "flutter"
       ]
     },
     {
-      "name": "flutter_svg",
-      "version": "2.2.0",
+      "name": "flutter_dotenv",
+      "version": "5.2.1",
+      "dependencies": [
+        "flutter"
+      ]
+    },
+    {
+      "name": "speech_to_text",
+      "version": "7.2.0",
       "dependencies": [
+        "clock",
         "flutter",
-        "http",
-        "vector_graphics",
-        "vector_graphics_codec",
-        "vector_graphics_compiler"
+        "flutter_web_plugins",
+        "json_annotation",
+        "meta",
+        "pedantic",
+        "speech_to_text_platform_interface",
+        "web"
       ]
     },
     {
-      "name": "lottie",
-      "version": "3.3.1",
+      "name": "share_plus",
+      "version": "11.0.0",
       "dependencies": [
-        "archive",
+        "cross_file",
+        "ffi",
+        "file",
         "flutter",
-        "http",
-        "path",
-        "vector_math"
+        "flutter_web_plugins",
+        "meta",
+        "mime",
+        "share_plus_platform_interface",
+        "url_launcher_linux",
+        "url_launcher_platform_interface",
+        "url_launcher_web",
+        "url_launcher_windows",
+        "web",
+        "win32"
       ]
     },
     {
-      "name": "flutter_secure_storage",
-      "version": "9.2.4",
+      "name": "flutter_local_notifications",
+      "version": "19.4.0",
       "dependencies": [
+        "clock",
         "flutter",
-        "flutter_secure_storage_linux",
-        "flutter_secure_storage_macos",
-        "flutter_secure_storage_platform_interface",
-        "flutter_secure_storage_web",
-        "flutter_secure_storage_windows",
-        "meta"
+        "flutter_local_notifications_linux",
+        "flutter_local_notifications_platform_interface",
+        "flutter_local_notifications_windows",
+        "timezone"
+      ]
+    },
+    {
+      "name": "permission_handler",
+      "version": "11.4.0",
+      "dependencies": [
+        "flutter",
+        "meta",
+        "permission_handler_android",
+        "permission_handler_apple",
+        "permission_handler_html",
+        "permission_handler_platform_interface",
+        "permission_handler_windows"
       ]
     },
     {
@@ -186,62 +227,50 @@
       ]
     },
     {
-      "name": "audioplayers",
-      "version": "6.5.0",
+      "name": "fl_chart",
+      "version": "1.0.0",
       "dependencies": [
-        "audioplayers_android",
-        "audioplayers_darwin",
-        "audioplayers_linux",
-        "audioplayers_platform_interface",
-        "audioplayers_web",
-        "audioplayers_windows",
-        "file",
+        "equatable",
         "flutter",
-        "http",
-        "meta",
-        "path_provider",
-        "synchronized",
-        "uuid"
+        "vector_math"
       ]
     },
     {
-      "name": "permission_handler",
-      "version": "11.4.0",
+      "name": "animations",
+      "version": "2.0.11",
       "dependencies": [
-        "flutter",
-        "meta",
-        "permission_handler_android",
-        "permission_handler_apple",
-        "permission_handler_html",
-        "permission_handler_platform_interface",
-        "permission_handler_windows"
+        "flutter"
       ]
     },
     {
-      "name": "screenshot",
-      "version": "3.0.0",
+      "name": "lottie",
+      "version": "3.3.1",
       "dependencies": [
-        "flutter"
+        "archive",
+        "flutter",
+        "http",
+        "path",
+        "vector_math"
       ]
     },
     {
-      "name": "flutter_dotenv",
-      "version": "5.2.1",
+      "name": "flutter_svg",
+      "version": "2.2.0",
       "dependencies": [
-        "flutter"
+        "flutter",
+        "http",
+        "vector_graphics",
+        "vector_graphics_codec",
+        "vector_graphics_compiler"
       ]
     },
     {
-      "name": "shared_preferences",
-      "version": "2.5.3",
+      "name": "flutter_localizations",
+      "version": "0.0.0",
       "dependencies": [
         "flutter",
-        "shared_preferences_android",
-        "shared_preferences_foundation",
-        "shared_preferences_linux",
-        "shared_preferences_platform_interface",
-        "shared_preferences_web",
-        "shared_preferences_windows"
+        "intl",
+        "path"
       ]
     },
     {
@@ -251,18 +280,6 @@
         "meta"
       ]
     },
-    {
-      "name": "flutter_local_notifications",
-      "version": "19.4.0",
-      "dependencies": [
-        "clock",
-        "flutter",
-        "flutter_local_notifications_linux",
-        "flutter_local_notifications_platform_interface",
-        "flutter_local_notifications_windows",
-        "timezone"
-      ]
-    },
     {
       "name": "http",
       "version": "1.4.0",
@@ -274,37 +291,29 @@
       ]
     },
     {
-      "name": "speech_to_text",
-      "version": "7.2.0",
+      "name": "flutter_secure_storage",
+      "version": "9.2.4",
       "dependencies": [
-        "clock",
         "flutter",
-        "flutter_web_plugins",
-        "json_annotation",
-        "meta",
-        "pedantic",
-        "speech_to_text_platform_interface",
-        "web"
+        "flutter_secure_storage_linux",
+        "flutter_secure_storage_macos",
+        "flutter_secure_storage_platform_interface",
+        "flutter_secure_storage_web",
+        "flutter_secure_storage_windows",
+        "meta"
       ]
     },
     {
-      "name": "share_plus",
-      "version": "11.0.0",
+      "name": "shared_preferences",
+      "version": "2.5.3",
       "dependencies": [
-        "cross_file",
-        "ffi",
-        "file",
         "flutter",
-        "flutter_web_plugins",
-        "meta",
-        "mime",
-        "share_plus_platform_interface",
-        "url_launcher_linux",
-        "url_launcher_platform_interface",
-        "url_launcher_web",
-        "url_launcher_windows",
-        "web",
-        "win32"
+        "shared_preferences_android",
+        "shared_preferences_foundation",
+        "shared_preferences_linux",
+        "shared_preferences_platform_interface",
+        "shared_preferences_web",
+        "shared_preferences_windows"
       ]
     },
     {
@@ -340,6 +349,11 @@
         "vector_math"
       ]
     },
+    {
+      "name": "lints",
+      "version": "4.0.0",
+      "dependencies": []
+    },
     {
       "name": "source_helper",
       "version": "1.3.6",
@@ -640,23 +654,6 @@
       "version": "2.7.0",
       "dependencies": []
     },
-    {
-      "name": "vm_service",
-      "version": "15.0.0",
-      "dependencies": []
-    },
-    {
-      "name": "term_glyph",
-      "version": "1.2.2",
-      "dependencies": []
-    },
-    {
-      "name": "string_scanner",
-      "version": "1.4.1",
-      "dependencies": [
-        "source_span"
-      ]
-    },
     {
       "name": "stream_channel",
       "version": "2.1.4",
@@ -665,62 +662,8 @@
       ]
     },
     {
-      "name": "source_span",
-      "version": "1.10.1",
-      "dependencies": [
-        "collection",
-        "path",
-        "term_glyph"
-      ]
-    },
-    {
-      "name": "material_color_utilities",
-      "version": "0.11.1",
-      "dependencies": [
-        "collection"
-      ]
-    },
-    {
-      "name": "leak_tracker_testing",
-      "version": "3.0.1",
-      "dependencies": [
-        "leak_tracker",
-        "matcher",
-        "meta"
-      ]
-    },
-    {
-      "name": "leak_tracker",
-      "version": "10.0.9",
-      "dependencies": [
-        "clock",
-        "collection",
-        "meta",
-        "path",
-        "vm_service"
-      ]
-    },
-    {
-      "name": "collection",
-      "version": "1.19.1",
-      "dependencies": []
-    },
-    {
-      "name": "characters",
-      "version": "1.4.0",
-      "dependencies": []
-    },
-    {
-      "name": "boolean_selector",
-      "version": "2.1.2",
-      "dependencies": [
-        "source_span",
-        "string_scanner"
-      ]
-    },
-    {
-      "name": "leak_tracker_flutter_testing",
-      "version": "3.0.9",
+      "name": "leak_tracker_flutter_testing",
+      "version": "3.0.10",
       "dependencies": [
         "flutter",
         "leak_tracker",
@@ -731,7 +674,7 @@
     },
     {
       "name": "vector_math",
-      "version": "2.1.4",
+      "version": "2.2.0",
       "dependencies": []
     },
     {
@@ -760,7 +703,7 @@
     },
     {
       "name": "test_api",
-      "version": "0.7.4",
+      "version": "0.7.6",
       "dependencies": [
         "async",
         "boolean_selector",
@@ -774,144 +717,87 @@
       ]
     },
     {
-      "name": "intl",
-      "version": "0.20.2",
-      "dependencies": [
-        "clock",
-        "meta",
-        "path"
-      ]
+      "name": "fixnum",
+      "version": "1.1.1",
+      "dependencies": []
     },
     {
-      "name": "vector_graphics_compiler",
-      "version": "1.1.17",
-      "dependencies": [
-        "args",
-        "meta",
-        "path",
-        "path_parsing",
-        "vector_graphics_codec",
-        "xml"
-      ]
+      "name": "sprintf",
+      "version": "7.0.0",
+      "dependencies": []
     },
     {
-      "name": "vector_graphics_codec",
-      "version": "1.1.13",
+      "name": "web",
+      "version": "1.1.1",
       "dependencies": []
     },
     {
-      "name": "vector_graphics",
-      "version": "1.1.19",
+      "name": "flutter_web_plugins",
+      "version": "0.0.0",
       "dependencies": [
-        "flutter",
-        "http",
-        "vector_graphics_codec"
+        "flutter"
       ]
     },
     {
-      "name": "archive",
-      "version": "4.0.7",
-      "dependencies": [
-        "crypto",
-        "path",
-        "posix"
-      ]
+      "name": "pedantic",
+      "version": "1.11.1",
+      "dependencies": []
     },
     {
-      "name": "flutter_secure_storage_windows",
-      "version": "3.1.2",
+      "name": "speech_to_text_platform_interface",
+      "version": "2.3.0",
       "dependencies": [
-        "ffi",
         "flutter",
-        "flutter_secure_storage_platform_interface",
-        "path",
-        "path_provider",
-        "win32"
+        "meta",
+        "plugin_platform_interface"
       ]
     },
     {
-      "name": "flutter_secure_storage_web",
-      "version": "1.2.1",
+      "name": "win32",
+      "version": "5.14.0",
       "dependencies": [
-        "flutter",
-        "flutter_secure_storage_platform_interface",
-        "flutter_web_plugins",
-        "js"
+        "ffi"
       ]
     },
     {
-      "name": "flutter_secure_storage_platform_interface",
-      "version": "1.1.2",
-      "dependencies": [
-        "flutter",
-        "plugin_platform_interface"
-      ]
+      "name": "ffi",
+      "version": "2.1.4",
+      "dependencies": []
     },
     {
-      "name": "flutter_secure_storage_macos",
-      "version": "3.1.3",
+      "name": "url_launcher_platform_interface",
+      "version": "2.3.2",
       "dependencies": [
         "flutter",
-        "flutter_secure_storage_platform_interface"
+        "plugin_platform_interface"
       ]
     },
     {
-      "name": "flutter_secure_storage_linux",
-      "version": "1.2.3",
+      "name": "url_launcher_linux",
+      "version": "3.2.1",
       "dependencies": [
         "flutter",
-        "flutter_secure_storage_platform_interface"
-      ]
-    },
-    {
-      "name": "uuid",
-      "version": "4.5.1",
-      "dependencies": [
-        "crypto",
-        "fixnum",
-        "meta",
-        "sprintf"
+        "url_launcher_platform_interface"
       ]
     },
     {
-      "name": "rxdart",
-      "version": "0.28.0",
-      "dependencies": []
-    },
-    {
-      "name": "audio_session",
-      "version": "0.1.25",
+      "name": "url_launcher_windows",
+      "version": "3.1.4",
       "dependencies": [
         "flutter",
-        "flutter_web_plugins",
-        "meta",
-        "rxdart"
+        "url_launcher_platform_interface"
       ]
     },
     {
-      "name": "just_audio_web",
-      "version": "0.4.16",
+      "name": "url_launcher_web",
+      "version": "2.4.1",
       "dependencies": [
         "flutter",
         "flutter_web_plugins",
-        "just_audio_platform_interface",
-        "synchronized",
+        "url_launcher_platform_interface",
         "web"
       ]
     },
-    {
-      "name": "just_audio_platform_interface",
-      "version": "4.5.0",
-      "dependencies": [
-        "flutter",
-        "plugin_platform_interface"
-      ]
-    },
-    {
-      "name": "synchronized",
-      "version": "3.4.0",
-      "dependencies": []
-    },
     {
       "name": "file",
       "version": "7.0.1",
@@ -921,55 +807,63 @@
       ]
     },
     {
-      "name": "audioplayers_windows",
-      "version": "4.2.1",
+      "name": "share_plus_platform_interface",
+      "version": "6.0.0",
       "dependencies": [
-        "audioplayers_platform_interface",
-        "flutter"
+        "cross_file",
+        "flutter",
+        "meta",
+        "mime",
+        "path_provider",
+        "plugin_platform_interface",
+        "uuid"
       ]
     },
     {
-      "name": "audioplayers_web",
-      "version": "5.1.1",
+      "name": "cross_file",
+      "version": "0.3.4+2",
       "dependencies": [
-        "audioplayers_platform_interface",
-        "flutter",
-        "flutter_web_plugins",
+        "meta",
         "web"
       ]
     },
     {
-      "name": "audioplayers_platform_interface",
-      "version": "7.1.1",
+      "name": "timezone",
+      "version": "0.10.1",
       "dependencies": [
-        "collection",
-        "flutter",
-        "meta",
-        "plugin_platform_interface"
+        "http",
+        "path"
       ]
     },
     {
-      "name": "audioplayers_linux",
-      "version": "4.2.1",
+      "name": "flutter_local_notifications_platform_interface",
+      "version": "9.1.0",
       "dependencies": [
-        "audioplayers_platform_interface",
-        "flutter"
+        "plugin_platform_interface"
       ]
     },
     {
-      "name": "audioplayers_darwin",
-      "version": "6.3.0",
+      "name": "flutter_local_notifications_windows",
+      "version": "1.0.2",
       "dependencies": [
-        "audioplayers_platform_interface",
-        "flutter"
+        "ffi",
+        "flutter",
+        "flutter_local_notifications_platform_interface",
+        "meta",
+        "timezone",
+        "xml"
       ]
     },
     {
-      "name": "audioplayers_android",
-      "version": "5.2.1",
+      "name": "flutter_local_notifications_linux",
+      "version": "6.0.0",
       "dependencies": [
-        "audioplayers_platform_interface",
-        "flutter"
+        "dbus",
+        "ffi",
+        "flutter",
+        "flutter_local_notifications_platform_interface",
+        "path",
+        "xdg_directories"
       ]
     },
     {
@@ -1016,107 +910,82 @@
       ]
     },
     {
-      "name": "shared_preferences_windows",
-      "version": "2.4.1",
-      "dependencies": [
-        "file",
-        "flutter",
-        "path",
-        "path_provider_platform_interface",
-        "path_provider_windows",
-        "shared_preferences_platform_interface"
-      ]
+      "name": "rxdart",
+      "version": "0.28.0",
+      "dependencies": []
     },
     {
-      "name": "shared_preferences_web",
-      "version": "2.4.3",
+      "name": "audio_session",
+      "version": "0.1.25",
       "dependencies": [
         "flutter",
         "flutter_web_plugins",
-        "shared_preferences_platform_interface",
-        "web"
-      ]
-    },
-    {
-      "name": "shared_preferences_platform_interface",
-      "version": "2.4.1",
-      "dependencies": [
-        "flutter",
-        "plugin_platform_interface"
-      ]
-    },
-    {
-      "name": "shared_preferences_linux",
-      "version": "2.4.1",
-      "dependencies": [
-        "file",
-        "flutter",
-        "path",
-        "path_provider_linux",
-        "path_provider_platform_interface",
-        "shared_preferences_platform_interface"
+        "meta",
+        "rxdart"
       ]
     },
     {
-      "name": "shared_preferences_foundation",
-      "version": "2.5.4",
+      "name": "just_audio_web",
+      "version": "0.4.16",
       "dependencies": [
         "flutter",
-        "shared_preferences_platform_interface"
+        "flutter_web_plugins",
+        "just_audio_platform_interface",
+        "synchronized",
+        "web"
       ]
     },
     {
-      "name": "shared_preferences_android",
-      "version": "2.4.10",
+      "name": "just_audio_platform_interface",
+      "version": "4.5.0",
       "dependencies": [
         "flutter",
-        "shared_preferences_platform_interface"
-      ]
-    },
-    {
-      "name": "timezone",
-      "version": "0.10.1",
-      "dependencies": [
-        "http",
-        "path"
+        "plugin_platform_interface"
       ]
     },
     {
-      "name": "flutter_local_notifications_platform_interface",
-      "version": "9.1.0",
+      "name": "equatable",
+      "version": "2.0.7",
       "dependencies": [
-        "plugin_platform_interface"
+        "collection",
+        "meta"
       ]
     },
     {
-      "name": "flutter_local_notifications_windows",
-      "version": "1.0.2",
+      "name": "archive",
+      "version": "4.0.7",
       "dependencies": [
-        "ffi",
-        "flutter",
-        "flutter_local_notifications_platform_interface",
-        "meta",
-        "timezone",
-        "xml"
+        "crypto",
+        "path",
+        "posix"
       ]
     },
     {
-      "name": "flutter_local_notifications_linux",
-      "version": "6.0.0",
+      "name": "vector_graphics_compiler",
+      "version": "1.1.17",
       "dependencies": [
-        "dbus",
-        "ffi",
-        "flutter",
-        "flutter_local_notifications_platform_interface",
+        "args",
+        "meta",
         "path",
-        "xdg_directories"
+        "path_parsing",
+        "vector_graphics_codec",
+        "xml"
       ]
     },
     {
-      "name": "web",
-      "version": "1.1.1",
+      "name": "vector_graphics_codec",
+      "version": "1.1.13",
       "dependencies": []
     },
+    {
+      "name": "vector_graphics",
+      "version": "1.1.19",
+      "dependencies": [
+        "flutter",
+        "http",
+        "vector_graphics_codec"
+      ]
+    },
     {
       "name": "http_parser",
       "version": "4.1.2",
@@ -1128,96 +997,107 @@
       ]
     },
     {
-      "name": "flutter_web_plugins",
-      "version": "0.0.0",
+      "name": "flutter_secure_storage_windows",
+      "version": "3.1.2",
       "dependencies": [
-        "characters",
-        "collection",
+        "ffi",
         "flutter",
-        "material_color_utilities",
-        "meta",
-        "vector_math"
+        "flutter_secure_storage_platform_interface",
+        "path",
+        "path_provider",
+        "win32"
       ]
     },
     {
-      "name": "pedantic",
-      "version": "1.11.1",
-      "dependencies": []
+      "name": "flutter_secure_storage_web",
+      "version": "1.2.1",
+      "dependencies": [
+        "flutter",
+        "flutter_secure_storage_platform_interface",
+        "flutter_web_plugins",
+        "js"
+      ]
     },
     {
-      "name": "speech_to_text_platform_interface",
-      "version": "2.3.0",
+      "name": "flutter_secure_storage_platform_interface",
+      "version": "1.1.2",
       "dependencies": [
         "flutter",
-        "meta",
         "plugin_platform_interface"
       ]
     },
     {
-      "name": "win32",
-      "version": "5.14.0",
+      "name": "flutter_secure_storage_macos",
+      "version": "3.1.3",
       "dependencies": [
-        "ffi"
+        "flutter",
+        "flutter_secure_storage_platform_interface"
       ]
     },
     {
-      "name": "ffi",
-      "version": "2.1.4",
-      "dependencies": []
+      "name": "flutter_secure_storage_linux",
+      "version": "1.2.3",
+      "dependencies": [
+        "flutter",
+        "flutter_secure_storage_platform_interface"
+      ]
     },
     {
-      "name": "url_launcher_platform_interface",
-      "version": "2.3.2",
+      "name": "shared_preferences_windows",
+      "version": "2.4.1",
       "dependencies": [
+        "file",
         "flutter",
-        "plugin_platform_interface"
+        "path",
+        "path_provider_platform_interface",
+        "path_provider_windows",
+        "shared_preferences_platform_interface"
       ]
     },
     {
-      "name": "url_launcher_linux",
-      "version": "3.2.1",
+      "name": "shared_preferences_web",
+      "version": "2.4.3",
       "dependencies": [
         "flutter",
-        "url_launcher_platform_interface"
+        "flutter_web_plugins",
+        "shared_preferences_platform_interface",
+        "web"
       ]
     },
     {
-      "name": "url_launcher_windows",
-      "version": "3.1.4",
+      "name": "shared_preferences_platform_interface",
+      "version": "2.4.1",
       "dependencies": [
         "flutter",
-        "url_launcher_platform_interface"
+        "plugin_platform_interface"
       ]
     },
     {
-      "name": "url_launcher_web",
+      "name": "shared_preferences_linux",
       "version": "2.4.1",
       "dependencies": [
+        "file",
         "flutter",
-        "flutter_web_plugins",
-        "url_launcher_platform_interface",
-        "web"
+        "path",
+        "path_provider_linux",
+        "path_provider_platform_interface",
+        "shared_preferences_platform_interface"
       ]
     },
     {
-      "name": "share_plus_platform_interface",
-      "version": "6.0.0",
+      "name": "shared_preferences_foundation",
+      "version": "2.5.4",
       "dependencies": [
-        "cross_file",
         "flutter",
-        "meta",
-        "mime",
-        "path_provider",
-        "plugin_platform_interface",
-        "uuid"
+        "shared_preferences_platform_interface"
       ]
     },
     {
-      "name": "cross_file",
-      "version": "0.3.4+2",
+      "name": "shared_preferences_android",
+      "version": "2.4.10",
       "dependencies": [
-        "meta",
-        "web"
+        "flutter",
+        "shared_preferences_platform_interface"
       ]
     },
     {
@@ -1278,6 +1158,18 @@
       "version": "0.0.0",
       "dependencies": []
     },
+    {
+      "name": "material_color_utilities",
+      "version": "0.11.1",
+      "dependencies": [
+        "collection"
+      ]
+    },
+    {
+      "name": "characters",
+      "version": "1.4.0",
+      "dependencies": []
+    },
     {
       "name": "yaml",
       "version": "3.1.3",
@@ -1287,6 +1179,15 @@
         "string_scanner"
       ]
     },
+    {
+      "name": "source_span",
+      "version": "1.10.1",
+      "dependencies": [
+        "collection",
+        "path",
+        "term_glyph"
+      ]
+    },
     {
       "name": "checked_yaml",
       "version": "2.0.4",
@@ -1339,6 +1240,13 @@
         "web"
       ]
     },
+    {
+      "name": "string_scanner",
+      "version": "1.4.1",
+      "dependencies": [
+        "source_span"
+      ]
+    },
     {
       "name": "typed_data",
       "version": "1.4.0",
@@ -1372,36 +1280,36 @@
       ]
     },
     {
-      "name": "xml",
-      "version": "6.5.0",
+      "name": "leak_tracker_testing",
+      "version": "3.0.2",
       "dependencies": [
-        "collection",
-        "meta",
-        "petitparser"
+        "leak_tracker",
+        "matcher",
+        "meta"
       ]
     },
     {
-      "name": "path_parsing",
-      "version": "1.1.0",
+      "name": "leak_tracker",
+      "version": "11.0.1",
       "dependencies": [
+        "clock",
+        "collection",
         "meta",
-        "vector_math"
+        "path",
+        "vm_service"
       ]
     },
     {
-      "name": "posix",
-      "version": "6.0.3",
-      "dependencies": [
-        "ffi",
-        "meta",
-        "path"
-      ]
+      "name": "term_glyph",
+      "version": "1.2.2",
+      "dependencies": []
     },
     {
-      "name": "js",
-      "version": "0.6.7",
+      "name": "boolean_selector",
+      "version": "2.1.2",
       "dependencies": [
-        "meta"
+        "source_span",
+        "string_scanner"
       ]
     },
     {
@@ -1412,14 +1320,13 @@
       ]
     },
     {
-      "name": "fixnum",
-      "version": "1.1.1",
-      "dependencies": []
-    },
-    {
-      "name": "sprintf",
-      "version": "7.0.0",
-      "dependencies": []
+      "name": "xml",
+      "version": "6.5.0",
+      "dependencies": [
+        "collection",
+        "meta",
+        "petitparser"
+      ]
     },
     {
       "name": "xdg_directories",
@@ -1439,11 +1346,45 @@
         "xml"
       ]
     },
+    {
+      "name": "synchronized",
+      "version": "3.4.0",
+      "dependencies": []
+    },
+    {
+      "name": "posix",
+      "version": "6.0.3",
+      "dependencies": [
+        "ffi",
+        "meta",
+        "path"
+      ]
+    },
+    {
+      "name": "path_parsing",
+      "version": "1.1.0",
+      "dependencies": [
+        "meta",
+        "vector_math"
+      ]
+    },
+    {
+      "name": "js",
+      "version": "0.6.7",
+      "dependencies": [
+        "meta"
+      ]
+    },
     {
       "name": "platform",
       "version": "3.1.6",
       "dependencies": []
     },
+    {
+      "name": "vm_service",
+      "version": "15.0.0",
+      "dependencies": []
+    },
     {
       "name": "petitparser",
       "version": "6.1.0",
diff --git a/zen_project1337/.dart_tool/version b/zen_project1337/.dart_tool/version
index 4fe56a2..ef92221 100644
--- a/zen_project1337/.dart_tool/version
+++ b/zen_project1337/.dart_tool/version
@@ -1 +1 @@
-3.32.8
\ No newline at end of file
+3.35.0-0.1.pre
\ No newline at end of file
diff --git a/zen_project1337/.flutter-plugins-dependencies b/zen_project1337/.flutter-plugins-dependencies
index 465d013..587ba79 100644
--- a/zen_project1337/.flutter-plugins-dependencies
+++ b/zen_project1337/.flutter-plugins-dependencies
@@ -1 +1 @@
-{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"audioplayers_darwin","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_darwin-6.3.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","shared_darwin_source":true,"native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_apple","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_apple-9.4.7/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false}],"android":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"audioplayers_android","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_android-5.2.1/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_android","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_android","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_android-12.1.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_android","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","native_build":true,"dependencies":[],"dev_dependency":false}],"macos":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"audioplayers_darwin","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_darwin-6.3.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_macos","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_macos-3.1.3/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","shared_darwin_source":true,"native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false}],"linux":[{"name":"audioplayers_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_linux-4.2.1/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_linux-1.2.3/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"path_provider_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":false,"dependencies":["url_launcher_linux"],"dev_dependency":false},{"name":"shared_preferences_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_linux-2.4.1/","native_build":false,"dependencies":["path_provider_linux"],"dev_dependency":false},{"name":"url_launcher_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/","native_build":true,"dependencies":[],"dev_dependency":false}],"windows":[{"name":"audioplayers_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_windows-4.2.1/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"path_provider_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_windows-0.2.1/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":["url_launcher_windows"],"dev_dependency":false},{"name":"shared_preferences_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_windows-2.4.1/","native_build":false,"dependencies":["path_provider_windows"],"dev_dependency":false},{"name":"url_launcher_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/","native_build":true,"dependencies":[],"dev_dependency":false}],"web":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","dependencies":[],"dev_dependency":false},{"name":"audioplayers_web","path":"/home/matth/.pub-cache/hosted/pub.dev/audioplayers_web-5.1.1/","dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_web","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_web-1.2.1/","dependencies":[],"dev_dependency":false},{"name":"just_audio_web","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio_web-0.4.16/","dependencies":[],"dev_dependency":false},{"name":"permission_handler_html","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_html-0.1.3+5/","dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","dependencies":["url_launcher_web"],"dev_dependency":false},{"name":"shared_preferences_web","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_web-2.4.3/","dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","dependencies":[],"dev_dependency":false},{"name":"url_launcher_web","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_web-2.4.1/","dependencies":[],"dev_dependency":false}]},"dependencyGraph":[{"name":"audio_session","dependencies":[]},{"name":"audioplayers","dependencies":["audioplayers_android","audioplayers_darwin","audioplayers_linux","audioplayers_web","audioplayers_windows","path_provider"]},{"name":"audioplayers_android","dependencies":[]},{"name":"audioplayers_darwin","dependencies":[]},{"name":"audioplayers_linux","dependencies":[]},{"name":"audioplayers_web","dependencies":[]},{"name":"audioplayers_windows","dependencies":[]},{"name":"flutter_local_notifications","dependencies":["flutter_local_notifications_linux","flutter_local_notifications_windows"]},{"name":"flutter_local_notifications_linux","dependencies":[]},{"name":"flutter_local_notifications_windows","dependencies":[]},{"name":"flutter_secure_storage","dependencies":["flutter_secure_storage_linux","flutter_secure_storage_macos","flutter_secure_storage_web","flutter_secure_storage_windows"]},{"name":"flutter_secure_storage_linux","dependencies":[]},{"name":"flutter_secure_storage_macos","dependencies":[]},{"name":"flutter_secure_storage_web","dependencies":[]},{"name":"flutter_secure_storage_windows","dependencies":["path_provider"]},{"name":"just_audio","dependencies":["just_audio_web","audio_session","path_provider"]},{"name":"just_audio_web","dependencies":[]},{"name":"path_provider","dependencies":["path_provider_android","path_provider_foundation","path_provider_linux","path_provider_windows"]},{"name":"path_provider_android","dependencies":[]},{"name":"path_provider_foundation","dependencies":[]},{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"permission_handler","dependencies":["permission_handler_android","permission_handler_apple","permission_handler_html","permission_handler_windows"]},{"name":"permission_handler_android","dependencies":[]},{"name":"permission_handler_apple","dependencies":[]},{"name":"permission_handler_html","dependencies":[]},{"name":"permission_handler_windows","dependencies":[]},{"name":"share_plus","dependencies":["url_launcher_web","url_launcher_windows","url_launcher_linux"]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]},{"name":"speech_to_text","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2025-08-03 15:30:43.505234","version":"3.32.8","swift_package_manager_enabled":{"ios":false,"macos":false}}
\ No newline at end of file
+{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","shared_darwin_source":true,"native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_apple","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_apple-9.4.7/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false}],"android":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_android","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_android-2.2.17/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_android","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_android-12.1.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_android","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_android-2.4.10/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","native_build":true,"dependencies":[],"dev_dependency":false}],"macos":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_local_notifications","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications-19.4.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_macos","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_macos-3.1.3/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"just_audio","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio-0.9.46/","shared_darwin_source":true,"native_build":true,"dependencies":["audio_session"],"dev_dependency":false},{"name":"path_provider_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_foundation-2.4.1/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"shared_preferences_foundation","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","shared_darwin_source":true,"native_build":true,"dependencies":[],"dev_dependency":false}],"linux":[{"name":"flutter_local_notifications_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_linux-6.0.0/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_linux-1.2.3/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"path_provider_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_linux-2.2.1/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":false,"dependencies":["url_launcher_linux"],"dev_dependency":false},{"name":"shared_preferences_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_linux-2.4.1/","native_build":false,"dependencies":["path_provider_linux"],"dev_dependency":false},{"name":"url_launcher_linux","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_linux-3.2.1/","native_build":true,"dependencies":[],"dev_dependency":false}],"windows":[{"name":"flutter_local_notifications_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_local_notifications_windows-1.0.2/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_windows-3.1.2/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"path_provider_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/path_provider_windows-2.3.0/","native_build":false,"dependencies":[],"dev_dependency":false},{"name":"permission_handler_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_windows-0.2.1/","native_build":true,"dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","native_build":true,"dependencies":["url_launcher_windows"],"dev_dependency":false},{"name":"shared_preferences_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_windows-2.4.1/","native_build":false,"dependencies":["path_provider_windows"],"dev_dependency":false},{"name":"url_launcher_windows","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_windows-3.1.4/","native_build":true,"dependencies":[],"dev_dependency":false}],"web":[{"name":"audio_session","path":"/home/matth/.pub-cache/hosted/pub.dev/audio_session-0.1.25/","dependencies":[],"dev_dependency":false},{"name":"flutter_secure_storage_web","path":"/home/matth/.pub-cache/hosted/pub.dev/flutter_secure_storage_web-1.2.1/","dependencies":[],"dev_dependency":false},{"name":"just_audio_web","path":"/home/matth/.pub-cache/hosted/pub.dev/just_audio_web-0.4.16/","dependencies":[],"dev_dependency":false},{"name":"permission_handler_html","path":"/home/matth/.pub-cache/hosted/pub.dev/permission_handler_html-0.1.3+5/","dependencies":[],"dev_dependency":false},{"name":"share_plus","path":"/home/matth/.pub-cache/hosted/pub.dev/share_plus-11.0.0/","dependencies":["url_launcher_web"],"dev_dependency":false},{"name":"shared_preferences_web","path":"/home/matth/.pub-cache/hosted/pub.dev/shared_preferences_web-2.4.3/","dependencies":[],"dev_dependency":false},{"name":"speech_to_text","path":"/home/matth/.pub-cache/hosted/pub.dev/speech_to_text-7.2.0/","dependencies":[],"dev_dependency":false},{"name":"url_launcher_web","path":"/home/matth/.pub-cache/hosted/pub.dev/url_launcher_web-2.4.1/","dependencies":[],"dev_dependency":false}]},"dependencyGraph":[{"name":"audio_session","dependencies":[]},{"name":"flutter_local_notifications","dependencies":["flutter_local_notifications_linux","flutter_local_notifications_windows"]},{"name":"flutter_local_notifications_linux","dependencies":[]},{"name":"flutter_local_notifications_windows","dependencies":[]},{"name":"flutter_secure_storage","dependencies":["flutter_secure_storage_linux","flutter_secure_storage_macos","flutter_secure_storage_web","flutter_secure_storage_windows"]},{"name":"flutter_secure_storage_linux","dependencies":[]},{"name":"flutter_secure_storage_macos","dependencies":[]},{"name":"flutter_secure_storage_web","dependencies":[]},{"name":"flutter_secure_storage_windows","dependencies":["path_provider"]},{"name":"just_audio","dependencies":["just_audio_web","audio_session","path_provider"]},{"name":"just_audio_web","dependencies":[]},{"name":"path_provider","dependencies":["path_provider_android","path_provider_foundation","path_provider_linux","path_provider_windows"]},{"name":"path_provider_android","dependencies":[]},{"name":"path_provider_foundation","dependencies":[]},{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"permission_handler","dependencies":["permission_handler_android","permission_handler_apple","permission_handler_html","permission_handler_windows"]},{"name":"permission_handler_android","dependencies":[]},{"name":"permission_handler_apple","dependencies":[]},{"name":"permission_handler_html","dependencies":[]},{"name":"permission_handler_windows","dependencies":[]},{"name":"share_plus","dependencies":["url_launcher_web","url_launcher_windows","url_launcher_linux"]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]},{"name":"speech_to_text","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2025-09-04 13:33:12.053471","version":"3.35.0-0.1.pre","swift_package_manager_enabled":{"ios":false,"macos":false}}
\ No newline at end of file
diff --git a/zen_project1337/.idea/.gitignore b/zen_project1337/.idea/.gitignore
index 26d3352..7c4360c 100644
--- a/zen_project1337/.idea/.gitignore
+++ b/zen_project1337/.idea/.gitignore
@@ -1,3 +1,4 @@
 # Default ignored files
 /shelf/
 /workspace.xml
+lib/env_config.dart
\ No newline at end of file
diff --git a/zen_project1337/android/app/src/main/AndroidManifest.xml b/zen_project1337/android/app/src/main/AndroidManifest.xml
index 895fc80..3d9eb71 100644
--- a/zen_project1337/android/app/src/main/AndroidManifest.xml
+++ b/zen_project1337/android/app/src/main/AndroidManifest.xml
@@ -1,38 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.example.zenyourself_complete_ui_final">
 
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
+    <!-- Netzwerk & Spracheingabe -->
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
+
+    <!-- Optional (Android 13+): Nur nötig, wenn ihr eigene Notifications zeigt -->
+    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
+
+    <!-- App funktioniert auch ohne physisches Mikrofon (z. B. Emulator/Desktop) -->
+    <uses-feature
+        android:name="android.hardware.microphone"
+        android:required="false" />
 
     <application
-        android:label="zenyourself_complete_ui_final"
         android:name="${applicationName}"
-        android:icon="@mipmap/ic_launcher">
+        android:label="ZenYourself"
+        android:icon="@mipmap/ic_launcher"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:allowBackup="false"
+        android:supportsRtl="true"
+        android:usesCleartextTraffic="false">
+
         <activity
             android:name=".MainActivity"
             android:exported="true"
             android:launchMode="singleTop"
             android:theme="@style/LaunchTheme"
-            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
             android:hardwareAccelerated="true"
-            android:windowSoftInputMode="adjustResize">
+            android:windowSoftInputMode="adjustResize"
+            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode">
+
+            <!-- Hell/Dunkel-Theme, während Flutter startet -->
             <meta-data
-              android:name="io.flutter.embedding.android.NormalTheme"
-              android:resource="@style/NormalTheme"
-              />
+                android:name="io.flutter.embedding.android.NormalTheme"
+                android:resource="@style/NormalTheme" />
+
             <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
         <meta-data
             android:name="flutterEmbedding"
             android:value="2" />
     </application>
+
+    <!-- Optional: Erlaubt das Teilen/Verarbeiten von markiertem Text mit anderen Apps -->
     <queries>
         <intent>
-            <action android:name="android.intent.action.PROCESS_TEXT"/>
-            <data android:mimeType="text/plain"/>
+            <action android:name="android.intent.action.PROCESS_TEXT" />
+            <data android:mimeType="text/plain" />
         </intent>
     </queries>
 </manifest>
diff --git a/zen_project1337/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java b/zen_project1337/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
index 97077ac..a75e8bf 100644
--- a/zen_project1337/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
+++ b/zen_project1337/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
@@ -20,11 +20,6 @@ public final class GeneratedPluginRegistrant {
     } catch (Exception e) {
       Log.e(TAG, "Error registering plugin audio_session, com.ryanheise.audio_session.AudioSessionPlugin", e);
     }
-    try {
-      flutterEngine.getPlugins().add(new xyz.luan.audioplayers.AudioplayersPlugin());
-    } catch (Exception e) {
-      Log.e(TAG, "Error registering plugin audioplayers_android, xyz.luan.audioplayers.AudioplayersPlugin", e);
-    }
     try {
       flutterEngine.getPlugins().add(new com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin());
     } catch (Exception e) {
diff --git a/zen_project1337/build/.last_build_id b/zen_project1337/build/.last_build_id
index 376c07a..328112d 100644
--- a/zen_project1337/build/.last_build_id
+++ b/zen_project1337/build/.last_build_id
@@ -1 +1 @@
-e791bbfce813ca1e2bc96be98e87b603
\ No newline at end of file
+927e2a04cf4c2c7a3b47eb149846161a
\ No newline at end of file
diff --git a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/_composite.stamp b/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/_composite.stamp
deleted file mode 100644
index 1b2d28c..0000000
--- a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/_composite.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":[],"outputs":[]}
\ No newline at end of file
diff --git a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_dart_plugin_registrant.stamp b/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_dart_plugin_registrant.stamp
deleted file mode 100644
index a5bbede..0000000
--- a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_dart_plugin_registrant.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":["/home/matth/zen_project1337/.dart_tool/package_config_subset"],"outputs":["/home/matth/zen_project1337/.dart_tool/flutter_build/dart_plugin_registrant.dart"]}
\ No newline at end of file
diff --git a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_localizations.stamp b/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_localizations.stamp
deleted file mode 100644
index 1b2d28c..0000000
--- a/zen_project1337/build/889df4a43a0ba2edaee3739f0a60e2ea/gen_localizations.stamp
+++ /dev/null
@@ -1 +0,0 @@
-{"inputs":[],"outputs":[]}
\ No newline at end of file
diff --git a/zen_project1337/build/linux/x64/debug/CMakeCache.txt b/zen_project1337/build/linux/x64/debug/CMakeCache.txt
index e714a9a..6f22c2b 100644
--- a/zen_project1337/build/linux/x64/debug/CMakeCache.txt
+++ b/zen_project1337/build/linux/x64/debug/CMakeCache.txt
@@ -187,19 +187,6 @@ CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND
 // Studio IDE projects all commands are done without /nologo.
 CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
 
-//Directory under which to collect all populated content
-FETCHCONTENT_BASE_DIR:PATH=/home/matth/zen_project1337/build/linux/x64/debug/_deps
-
-//Disables all attempts to download or update content and assumes
-// source dirs already exist
-FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF
-
-//Enables QUIET option for all content population
-FETCHCONTENT_QUIET:BOOL=ON
-
-//Enables UPDATE_DISCONNECTED behavior for all content population
-FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF
-
 //No help, variable specified on the command line.
 FLUTTER_TARGET_PLATFORM:UNINITIALIZED=linux-x64
 
@@ -209,18 +196,6 @@ PKG_CONFIG_ARGN:STRING=
 //pkg-config executable
 PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config
 
-//Value Computed by CMake
-audioplayers_linux_BINARY_DIR:STATIC=/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux
-
-//Value Computed by CMake
-audioplayers_linux_IS_TOP_LEVEL:STATIC=OFF
-
-//Value Computed by CMake
-audioplayers_linux_SOURCE_DIR:STATIC=/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux
-
-//Dependencies for the target
-audioplayers_linux_plugin_LIB_DEPENDS:STATIC=general;gstapp-1.0;general;gstbase-1.0;general;gstreamer-1.0;general;gobject-2.0;general;glib-2.0;general;glib-2.0;
-
 //Value Computed by CMake
 flutter_secure_storage_linux_BINARY_DIR:STATIC=/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux
 
@@ -242,45 +217,6 @@ pkgcfg_lib_GIO_gobject-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgobject-2.0.so
 //Path to a library.
 pkgcfg_lib_GLIB_glib-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libglib-2.0.so
 
-//Path to a library.
-pkgcfg_lib_GSTREAMER-AUDIO_glib-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libglib-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER-AUDIO_gobject-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgobject-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER-AUDIO_gstaudio-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstaudio-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER-AUDIO_gstbase-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstbase-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER-AUDIO_gstreamer-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER_glib-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libglib-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER_gobject-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgobject-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GSTREAMER_gstreamer-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GST_APP_glib-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libglib-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GST_APP_gobject-2.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgobject-2.0.so
-
-//Path to a library.
-pkgcfg_lib_GST_APP_gstapp-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstapp-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GST_APP_gstbase-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstbase-1.0.so
-
-//Path to a library.
-pkgcfg_lib_GST_APP_gstreamer-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
-
 //Path to a library.
 pkgcfg_lib_GTK_atk-1.0:FILEPATH=/usr/lib/x86_64-linux-gnu/libatk-1.0.so
 
@@ -439,7 +375,7 @@ CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_NM
 CMAKE_NM-ADVANCED:INTERNAL=1
 //number of local generators
-CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=5
+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=4
 //ADVANCED property for variable: CMAKE_OBJCOPY
 CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_OBJDUMP
@@ -556,111 +492,6 @@ GLIB_glib-2.0_INCLUDEDIR:INTERNAL=
 GLIB_glib-2.0_LIBDIR:INTERNAL=
 GLIB_glib-2.0_PREFIX:INTERNAL=
 GLIB_glib-2.0_VERSION:INTERNAL=
-GSTREAMER-AUDIO_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-I/usr/include/x86_64-linux-gnu;-pthread;-I/usr/include/orc-0.4
-GSTREAMER-AUDIO_CFLAGS_I:INTERNAL=
-GSTREAMER-AUDIO_CFLAGS_OTHER:INTERNAL=-pthread
-GSTREAMER-AUDIO_FOUND:INTERNAL=1
-GSTREAMER-AUDIO_INCLUDEDIR:INTERNAL=/usr/include
-GSTREAMER-AUDIO_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu;/usr/include/orc-0.4
-GSTREAMER-AUDIO_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstaudio-1.0;-lgstbase-1.0;-lgstreamer-1.0;-lgobject-2.0;-lglib-2.0
-GSTREAMER-AUDIO_LDFLAGS_OTHER:INTERNAL=
-GSTREAMER-AUDIO_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
-GSTREAMER-AUDIO_LIBRARIES:INTERNAL=gstaudio-1.0;gstbase-1.0;gstreamer-1.0;gobject-2.0;glib-2.0
-GSTREAMER-AUDIO_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu
-GSTREAMER-AUDIO_LIBS:INTERNAL=
-GSTREAMER-AUDIO_LIBS_L:INTERNAL=
-GSTREAMER-AUDIO_LIBS_OTHER:INTERNAL=
-GSTREAMER-AUDIO_LIBS_PATHS:INTERNAL=
-GSTREAMER-AUDIO_MODULE_NAME:INTERNAL=gstreamer-audio-1.0
-GSTREAMER-AUDIO_PREFIX:INTERNAL=/usr
-GSTREAMER-AUDIO_STATIC_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-I/usr/include/x86_64-linux-gnu;-pthread;-I/usr/include/orc-0.4;-DLZMA_API_STATIC;-DLZMA_API_STATIC;-DLZMA_API_STATIC;-DLZMA_API_STATIC
-GSTREAMER-AUDIO_STATIC_CFLAGS_I:INTERNAL=
-GSTREAMER-AUDIO_STATIC_CFLAGS_OTHER:INTERNAL=-pthread;-DLZMA_API_STATIC;-DLZMA_API_STATIC;-DLZMA_API_STATIC;-DLZMA_API_STATIC
-GSTREAMER-AUDIO_STATIC_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu;/usr/include/orc-0.4
-GSTREAMER-AUDIO_STATIC_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstaudio-1.0;-lm;-lm;-ldl;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-lgmodule-2.0;-pthread;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lbz2;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-L/usr/lib;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-pthread;-lgstbase-1.0;-lgstreamer-1.0;-lm;-ldl;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-pthread;-L/usr/lib/x86_64-linux-gnu;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lbz2;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-pthread;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lm;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-lgmodule-2.0;-pthread;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-L/usr/lib/x86_64-linux-gnu;-lgsttag-1.0;-lm;-L/usr/lib/x86_64-linux-gnu;-lgstreamer-1.0;-lm;-ldl;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-lgmodule-2.0;-pthread;-L/usr/lib/x86_64-linux-gnu;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lbz2;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-pthread;-L/usr/lib/x86_64-linux-gnu;-lgstbase-1.0;-L/usr/lib/x86_64-linux-gnu;-lgstreamer-1.0;-lm;-ldl;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-pthread;-L/usr/lib/x86_64-linux-gnu;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lunwind;-ldw;-lbz2;-lelf;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-llzma;-pthread;-lpthread;-lzstd;-pthread;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lgobject-2.0;-lm;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-lgmodule-2.0;-pthread;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lz;-lorc-0.4;-lm;-pthread
-GSTREAMER-AUDIO_STATIC_LDFLAGS_OTHER:INTERNAL=-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread
-GSTREAMER-AUDIO_STATIC_LIBDIR:INTERNAL=
-GSTREAMER-AUDIO_STATIC_LIBRARIES:INTERNAL=gstaudio-1.0;m;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;gmodule-2.0;m;pcre2-8;bz2;z;z;lzma;pthread;gstbase-1.0;gstreamer-1.0;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;glib-2.0;m;pcre2-8;bz2;z;z;lzma;pthread;m;pcre2-8;m;pcre2-8;ffi;gmodule-2.0;glib-2.0;m;pcre2-8;gsttag-1.0;m;gstreamer-1.0;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;gmodule-2.0;glib-2.0;m;pcre2-8;bz2;z;z;lzma;pthread;gstbase-1.0;gstreamer-1.0;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;glib-2.0;m;pcre2-8;unwind;dw;bz2;elf;z;lzma;pthread;zstd;m;pcre2-8;gobject-2.0;m;pcre2-8;ffi;gmodule-2.0;glib-2.0;m;pcre2-8;z;orc-0.4;m
-GSTREAMER-AUDIO_STATIC_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu
-GSTREAMER-AUDIO_STATIC_LIBS:INTERNAL=
-GSTREAMER-AUDIO_STATIC_LIBS_L:INTERNAL=
-GSTREAMER-AUDIO_STATIC_LIBS_OTHER:INTERNAL=
-GSTREAMER-AUDIO_STATIC_LIBS_PATHS:INTERNAL=
-GSTREAMER-AUDIO_VERSION:INTERNAL=1.24.2
-GSTREAMER-AUDIO_gstreamer-audio-1.0_INCLUDEDIR:INTERNAL=
-GSTREAMER-AUDIO_gstreamer-audio-1.0_LIBDIR:INTERNAL=
-GSTREAMER-AUDIO_gstreamer-audio-1.0_PREFIX:INTERNAL=
-GSTREAMER-AUDIO_gstreamer-audio-1.0_VERSION:INTERNAL=
-GSTREAMER_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-pthread;-I/usr/include/x86_64-linux-gnu
-GSTREAMER_CFLAGS_I:INTERNAL=
-GSTREAMER_CFLAGS_OTHER:INTERNAL=-pthread
-GSTREAMER_FOUND:INTERNAL=1
-GSTREAMER_INCLUDEDIR:INTERNAL=/usr/include
-GSTREAMER_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu
-GSTREAMER_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstreamer-1.0;-lgobject-2.0;-lglib-2.0
-GSTREAMER_LDFLAGS_OTHER:INTERNAL=
-GSTREAMER_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
-GSTREAMER_LIBRARIES:INTERNAL=gstreamer-1.0;gobject-2.0;glib-2.0
-GSTREAMER_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu
-GSTREAMER_LIBS:INTERNAL=
-GSTREAMER_LIBS_L:INTERNAL=
-GSTREAMER_LIBS_OTHER:INTERNAL=
-GSTREAMER_LIBS_PATHS:INTERNAL=
-GSTREAMER_MODULE_NAME:INTERNAL=gstreamer-1.0
-GSTREAMER_PREFIX:INTERNAL=/usr
-GSTREAMER_STATIC_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-pthread;-I/usr/include/x86_64-linux-gnu;-DLZMA_API_STATIC
-GSTREAMER_STATIC_CFLAGS_I:INTERNAL=
-GSTREAMER_STATIC_CFLAGS_OTHER:INTERNAL=-pthread;-DLZMA_API_STATIC
-GSTREAMER_STATIC_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu
-GSTREAMER_STATIC_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstreamer-1.0;-lm;-ldl;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lgobject-2.0;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-lgmodule-2.0;-pthread;-L/usr/lib/x86_64-linux-gnu;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lunwind;-ldw;-lbz2;-lelf;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-L/usr/lib;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-lzstd;-pthread
-GSTREAMER_STATIC_LDFLAGS_OTHER:INTERNAL=-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread
-GSTREAMER_STATIC_LIBDIR:INTERNAL=
-GSTREAMER_STATIC_LIBRARIES:INTERNAL=gstreamer-1.0;m;dl;m;pcre2-8;gobject-2.0;glib-2.0;m;pcre2-8;ffi;gmodule-2.0;glib-2.0;m;pcre2-8;unwind;dw;bz2;elf;z;z;lzma;pthread;zstd
-GSTREAMER_STATIC_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu
-GSTREAMER_STATIC_LIBS:INTERNAL=
-GSTREAMER_STATIC_LIBS_L:INTERNAL=
-GSTREAMER_STATIC_LIBS_OTHER:INTERNAL=
-GSTREAMER_STATIC_LIBS_PATHS:INTERNAL=
-GSTREAMER_VERSION:INTERNAL=1.24.2
-GSTREAMER_gstreamer-1.0_INCLUDEDIR:INTERNAL=
-GSTREAMER_gstreamer-1.0_LIBDIR:INTERNAL=
-GSTREAMER_gstreamer-1.0_PREFIX:INTERNAL=
-GSTREAMER_gstreamer-1.0_VERSION:INTERNAL=
-GST_APP_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-I/usr/include/x86_64-linux-gnu;-pthread
-GST_APP_CFLAGS_I:INTERNAL=
-GST_APP_CFLAGS_OTHER:INTERNAL=-pthread
-GST_APP_FOUND:INTERNAL=1
-GST_APP_INCLUDEDIR:INTERNAL=/usr/include
-GST_APP_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu
-GST_APP_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstapp-1.0;-lgstbase-1.0;-lgstreamer-1.0;-lgobject-2.0;-lglib-2.0
-GST_APP_LDFLAGS_OTHER:INTERNAL=
-GST_APP_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
-GST_APP_LIBRARIES:INTERNAL=gstapp-1.0;gstbase-1.0;gstreamer-1.0;gobject-2.0;glib-2.0
-GST_APP_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu
-GST_APP_LIBS:INTERNAL=
-GST_APP_LIBS_L:INTERNAL=
-GST_APP_LIBS_OTHER:INTERNAL=
-GST_APP_LIBS_PATHS:INTERNAL=
-GST_APP_MODULE_NAME:INTERNAL=gstreamer-app-1.0
-GST_APP_PREFIX:INTERNAL=/usr
-GST_APP_STATIC_CFLAGS:INTERNAL=-I/usr/include/gstreamer-1.0;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include;-I/usr/include/x86_64-linux-gnu;-pthread;-DLZMA_API_STATIC;-DLZMA_API_STATIC
-GST_APP_STATIC_CFLAGS_I:INTERNAL=
-GST_APP_STATIC_CFLAGS_OTHER:INTERNAL=-pthread;-DLZMA_API_STATIC;-DLZMA_API_STATIC
-GST_APP_STATIC_INCLUDE_DIRS:INTERNAL=/usr/include/gstreamer-1.0;/usr/include/glib-2.0;/usr/lib/x86_64-linux-gnu/glib-2.0/include;/usr/include;/usr/include/x86_64-linux-gnu
-GST_APP_STATIC_LDFLAGS:INTERNAL=-L/usr/lib/x86_64-linux-gnu;-lgstapp-1.0;-lm;-ldl;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-lgmodule-2.0;-pthread;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lbz2;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-L/usr/lib;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-pthread;-lgstbase-1.0;-lgstreamer-1.0;-lm;-ldl;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-L/usr/lib/x86_64-linux-gnu;-pthread;-L/usr/lib/x86_64-linux-gnu;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lunwind;-ldw;-lbz2;-lelf;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-pthread;-L/usr/lib/x86_64-linux-gnu;-L/usr/lib/x86_64-linux-gnu;-lz;-llzma;-pthread;-lpthread;-lzstd;-pthread;-L/usr/lib/x86_64-linux-gnu;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lgobject-2.0;-lm;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8;-lffi;-lgmodule-2.0;-pthread;-lglib-2.0;-lm;-pthread;-L/usr/lib/x86_64-linux-gnu;-lpcre2-8
-GST_APP_STATIC_LDFLAGS_OTHER:INTERNAL=-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread;-pthread
-GST_APP_STATIC_LIBDIR:INTERNAL=
-GST_APP_STATIC_LIBRARIES:INTERNAL=gstapp-1.0;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;gmodule-2.0;m;pcre2-8;bz2;z;z;lzma;pthread;gstbase-1.0;gstreamer-1.0;m;dl;m;pcre2-8;glib-2.0;m;pcre2-8;ffi;glib-2.0;m;pcre2-8;unwind;dw;bz2;elf;z;z;lzma;pthread;zstd;m;pcre2-8;gobject-2.0;m;pcre2-8;ffi;gmodule-2.0;glib-2.0;m;pcre2-8
-GST_APP_STATIC_LIBRARY_DIRS:INTERNAL=/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu;/usr/lib/x86_64-linux-gnu
-GST_APP_STATIC_LIBS:INTERNAL=
-GST_APP_STATIC_LIBS_L:INTERNAL=
-GST_APP_STATIC_LIBS_OTHER:INTERNAL=
-GST_APP_STATIC_LIBS_PATHS:INTERNAL=
-GST_APP_VERSION:INTERNAL=1.24.2
-GST_APP_gstreamer-app-1.0_INCLUDEDIR:INTERNAL=
-GST_APP_gstreamer-app-1.0_LIBDIR:INTERNAL=
-GST_APP_gstreamer-app-1.0_PREFIX:INTERNAL=
-GST_APP_gstreamer-app-1.0_VERSION:INTERNAL=
 GTK_CFLAGS:INTERNAL=-I/usr/include/gtk-3.0;-I/usr/include/pango-1.0;-I/usr/include;-I/usr/include/glib-2.0;-I/usr/lib/x86_64-linux-gnu/glib-2.0/include;-I/usr/include/harfbuzz;-I/usr/include/freetype2;-I/usr/include/libpng16;-I/usr/include/libmount;-I/usr/include/blkid;-I/usr/include/fribidi;-I/usr/include/cairo;-I/usr/include/pixman-1;-I/usr/include/gdk-pixbuf-2.0;-I/usr/include/x86_64-linux-gnu;-I/usr/include/webp;-I/usr/include/gio-unix-2.0;-I/usr/include/atk-1.0;-I/usr/include/at-spi2-atk/2.0;-I/usr/include/at-spi-2.0;-I/usr/include/dbus-1.0;-I/usr/lib/x86_64-linux-gnu/dbus-1.0/include;-pthread
 GTK_CFLAGS_I:INTERNAL=
 GTK_CFLAGS_OTHER:INTERNAL=-pthread
@@ -739,16 +570,10 @@ PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
 _CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED:INTERNAL=TRUE
 __pkg_config_arguments_GIO:INTERNAL=REQUIRED;IMPORTED_TARGET;gio-2.0
 __pkg_config_arguments_GLIB:INTERNAL=REQUIRED;IMPORTED_TARGET;glib-2.0
-__pkg_config_arguments_GSTREAMER:INTERNAL=REQUIRED;gstreamer-1.0
-__pkg_config_arguments_GSTREAMER-AUDIO:INTERNAL=REQUIRED;gstreamer-audio-1.0
-__pkg_config_arguments_GST_APP:INTERNAL=REQUIRED;gstreamer-app-1.0
 __pkg_config_arguments_GTK:INTERNAL=REQUIRED;IMPORTED_TARGET;gtk+-3.0
 __pkg_config_arguments_LIBSECRET:INTERNAL=REQUIRED;IMPORTED_TARGET;libsecret-1>=0.18.4
 __pkg_config_checked_GIO:INTERNAL=1
 __pkg_config_checked_GLIB:INTERNAL=1
-__pkg_config_checked_GSTREAMER:INTERNAL=1
-__pkg_config_checked_GSTREAMER-AUDIO:INTERNAL=1
-__pkg_config_checked_GST_APP:INTERNAL=1
 __pkg_config_checked_GTK:INTERNAL=1
 __pkg_config_checked_LIBSECRET:INTERNAL=1
 //ADVANCED property for variable: pkgcfg_lib_GIO_gio-2.0
@@ -759,32 +584,6 @@ pkgcfg_lib_GIO_glib-2.0-ADVANCED:INTERNAL=1
 pkgcfg_lib_GIO_gobject-2.0-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: pkgcfg_lib_GLIB_glib-2.0
 pkgcfg_lib_GLIB_glib-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER-AUDIO_glib-2.0
-pkgcfg_lib_GSTREAMER-AUDIO_glib-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER-AUDIO_gobject-2.0
-pkgcfg_lib_GSTREAMER-AUDIO_gobject-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER-AUDIO_gstaudio-1.0
-pkgcfg_lib_GSTREAMER-AUDIO_gstaudio-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER-AUDIO_gstbase-1.0
-pkgcfg_lib_GSTREAMER-AUDIO_gstbase-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER-AUDIO_gstreamer-1.0
-pkgcfg_lib_GSTREAMER-AUDIO_gstreamer-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER_glib-2.0
-pkgcfg_lib_GSTREAMER_glib-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER_gobject-2.0
-pkgcfg_lib_GSTREAMER_gobject-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GSTREAMER_gstreamer-1.0
-pkgcfg_lib_GSTREAMER_gstreamer-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GST_APP_glib-2.0
-pkgcfg_lib_GST_APP_glib-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GST_APP_gobject-2.0
-pkgcfg_lib_GST_APP_gobject-2.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GST_APP_gstapp-1.0
-pkgcfg_lib_GST_APP_gstapp-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GST_APP_gstbase-1.0
-pkgcfg_lib_GST_APP_gstbase-1.0-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: pkgcfg_lib_GST_APP_gstreamer-1.0
-pkgcfg_lib_GST_APP_gstreamer-1.0-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: pkgcfg_lib_GTK_atk-1.0
 pkgcfg_lib_GTK_atk-1.0-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: pkgcfg_lib_GTK_cairo
diff --git a/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeConfigureLog.yaml b/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeConfigureLog.yaml
index 5b9149d..80e8938 100644
--- a/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeConfigureLog.yaml
+++ b/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeConfigureLog.yaml
@@ -39,8 +39,8 @@ events:
     checks:
       - "Detecting CXX compiler ABI info"
     directories:
-      source: "/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU"
-      binary: "/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU"
+      source: "/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L"
+      binary: "/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L"
     cmakeVariables:
       CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS-NOTFOUND"
       CMAKE_CXX_FLAGS: ""
@@ -50,10 +50,10 @@ events:
       variable: "CMAKE_CXX_ABI_COMPILED"
       cached: true
       stdout: |
-        Change Dir: '/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU'
+        Change Dir: '/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L'
         
-        Run Build Command(s): /usr/bin/ninja -v cmTC_612f7
-        [1/2] /usr/bin/clang++   -v -MD -MT CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp
+        Run Build Command(s): /usr/bin/ninja -v cmTC_2533a
+        [1/2] /usr/bin/clang++   -v -MD -MT CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp
         Ubuntu clang version 18.1.3 (1ubuntu1)
         Target: x86_64-pc-linux-gnu
         Thread model: posix
@@ -63,7 +63,7 @@ events:
         Candidate multilib: .;@m64
         Selected multilib: .;@m64
          (in-process)
-         "/usr/lib/llvm-18/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=all -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU -v -fcoverage-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU -resource-dir /usr/lib/llvm-18/lib/clang/18 -dependency-file CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o.d -MT CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/x86_64-linux-gnu/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/backward -internal-isystem /usr/lib/llvm-18/lib/clang/18/include -internal-isystem /usr/local/include -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -x c++ /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp
+         "/usr/lib/llvm-18/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=all -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L -v -fcoverage-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L -resource-dir /usr/lib/llvm-18/lib/clang/18 -dependency-file CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o.d -MT CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/x86_64-linux-gnu/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/backward -internal-isystem /usr/lib/llvm-18/lib/clang/18/include -internal-isystem /usr/local/include -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -x c++ /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp
         clang -cc1 version 18.1.3 based upon LLVM 18.1.3 default target x86_64-pc-linux-gnu
         ignoring nonexistent directory "/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include"
         ignoring nonexistent directory "/include"
@@ -77,7 +77,7 @@ events:
          /usr/include/x86_64-linux-gnu
          /usr/include
         End of search list.
-        [2/2] : && /usr/bin/clang++  -v CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_612f7   && :
+        [2/2] : && /usr/bin/clang++  -v CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_2533a   && :
         Ubuntu clang version 18.1.3 (1ubuntu1)
         Target: x86_64-pc-linux-gnu
         Thread model: posix
@@ -86,7 +86,7 @@ events:
         Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/13
         Candidate multilib: .;@m64
         Selected multilib: .;@m64
-         "/usr/bin/ld" -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -pie -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_612f7 /lib/x86_64-linux-gnu/Scrt1.o /lib/x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/lib -L/usr/lib CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtendS.o /lib/x86_64-linux-gnu/crtn.o
+         "/usr/bin/ld" -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -pie -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_2533a /lib/x86_64-linux-gnu/Scrt1.o /lib/x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/lib -L/usr/lib CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtendS.o /lib/x86_64-linux-gnu/crtn.o
         
       exitCode: 0
   -
@@ -126,10 +126,10 @@ events:
     message: |
       Parsed CXX implicit link information:
         link line regex: [^( *|.*[/\\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
-        ignore line: [Change Dir: '/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU']
+        ignore line: [Change Dir: '/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L']
         ignore line: []
-        ignore line: [Run Build Command(s): /usr/bin/ninja -v cmTC_612f7]
-        ignore line: [[1/2] /usr/bin/clang++   -v -MD -MT CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp]
+        ignore line: [Run Build Command(s): /usr/bin/ninja -v cmTC_2533a]
+        ignore line: [[1/2] /usr/bin/clang++   -v -MD -MT CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp]
         ignore line: [Ubuntu clang version 18.1.3 (1ubuntu1)]
         ignore line: [Target: x86_64-pc-linux-gnu]
         ignore line: [Thread model: posix]
@@ -141,7 +141,7 @@ events:
         ignore line: [Selected multilib: .]
         ignore line: [@m64]
         ignore line: [ (in-process)]
-        ignore line: [ "/usr/lib/llvm-18/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=all -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU -v -fcoverage-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-lMrjCU -resource-dir /usr/lib/llvm-18/lib/clang/18 -dependency-file CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o.d -MT CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/x86_64-linux-gnu/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/backward -internal-isystem /usr/lib/llvm-18/lib/clang/18/include -internal-isystem /usr/local/include -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -x c++ /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp]
+        ignore line: [ "/usr/lib/llvm-18/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=all -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L -v -fcoverage-compilation-dir=/home/matth/zen_project1337/build/linux/x64/debug/CMakeFiles/CMakeScratch/TryCompile-Fpzp2L -resource-dir /usr/lib/llvm-18/lib/clang/18 -dependency-file CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o.d -MT CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/x86_64-linux-gnu/c++/13 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/backward -internal-isystem /usr/lib/llvm-18/lib/clang/18/include -internal-isystem /usr/local/include -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -x c++ /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp]
         ignore line: [clang -cc1 version 18.1.3 based upon LLVM 18.1.3 default target x86_64-pc-linux-gnu]
         ignore line: [ignoring nonexistent directory "/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../x86_64-linux-gnu/include"]
         ignore line: [ignoring nonexistent directory "/include"]
@@ -155,7 +155,7 @@ events:
         ignore line: [ /usr/include/x86_64-linux-gnu]
         ignore line: [ /usr/include]
         ignore line: [End of search list.]
-        ignore line: [[2/2] : && /usr/bin/clang++  -v CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_612f7   && :]
+        ignore line: [[2/2] : && /usr/bin/clang++  -v CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_2533a   && :]
         ignore line: [Ubuntu clang version 18.1.3 (1ubuntu1)]
         ignore line: [Target: x86_64-pc-linux-gnu]
         ignore line: [Thread model: posix]
@@ -166,7 +166,7 @@ events:
         ignore line: [@m64]
         ignore line: [Selected multilib: .]
         ignore line: [@m64]
-        link line: [ "/usr/bin/ld" -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -pie -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_612f7 /lib/x86_64-linux-gnu/Scrt1.o /lib/x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/lib -L/usr/lib CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtendS.o /lib/x86_64-linux-gnu/crtn.o]
+        link line: [ "/usr/bin/ld" -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -pie -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_2533a /lib/x86_64-linux-gnu/Scrt1.o /lib/x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/lib -L/usr/lib CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtendS.o /lib/x86_64-linux-gnu/crtn.o]
           arg [/usr/bin/ld] ==> ignore
           arg [-zrelro] ==> ignore
           arg [--hash-style=gnu] ==> ignore
@@ -178,7 +178,7 @@ events:
           arg [-dynamic-linker] ==> ignore
           arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
           arg [-o] ==> ignore
-          arg [cmTC_612f7] ==> ignore
+          arg [cmTC_2533a] ==> ignore
           arg [/lib/x86_64-linux-gnu/Scrt1.o] ==> obj [/lib/x86_64-linux-gnu/Scrt1.o]
           arg [/lib/x86_64-linux-gnu/crti.o] ==> obj [/lib/x86_64-linux-gnu/crti.o]
           arg [/usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o] ==> obj [/usr/bin/../lib/gcc/x86_64-linux-gnu/13/crtbeginS.o]
@@ -190,7 +190,7 @@ events:
           arg [-L/usr/lib/../lib64] ==> dir [/usr/lib/../lib64]
           arg [-L/lib] ==> dir [/lib]
           arg [-L/usr/lib] ==> dir [/usr/lib]
-          arg [CMakeFiles/cmTC_612f7.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
+          arg [CMakeFiles/cmTC_2533a.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
           arg [-lstdc++] ==> lib [stdc++]
           arg [-lm] ==> lib [m]
           arg [-lgcc_s] ==> lib [gcc_s]
diff --git a/zen_project1337/build/linux/x64/debug/CMakeFiles/TargetDirectories.txt b/zen_project1337/build/linux/x64/debug/CMakeFiles/TargetDirectories.txt
index b10ca5e..2d8f1f9 100644
--- a/zen_project1337/build/linux/x64/debug/CMakeFiles/TargetDirectories.txt
+++ b/zen_project1337/build/linux/x64/debug/CMakeFiles/TargetDirectories.txt
@@ -12,13 +12,6 @@
 /home/matth/zen_project1337/build/linux/x64/debug/flutter/CMakeFiles/install.dir
 /home/matth/zen_project1337/build/linux/x64/debug/flutter/CMakeFiles/install/local.dir
 /home/matth/zen_project1337/build/linux/x64/debug/flutter/CMakeFiles/install/strip.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/edit_cache.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/rebuild_cache.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/list_install_components.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/install.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/install/local.dir
-/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/CMakeFiles/install/strip.dir
 /home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux/CMakeFiles/flutter_secure_storage_linux_plugin.dir
 /home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux/CMakeFiles/edit_cache.dir
 /home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux/CMakeFiles/rebuild_cache.dir
diff --git a/zen_project1337/build/linux/x64/debug/CMakeFiles/rules.ninja b/zen_project1337/build/linux/x64/debug/CMakeFiles/rules.ninja
index 29b76ed..0aa4f11 100644
--- a/zen_project1337/build/linux/x64/debug/CMakeFiles/rules.ninja
+++ b/zen_project1337/build/linux/x64/debug/CMakeFiles/rules.ninja
@@ -38,25 +38,6 @@ rule CUSTOM_COMMAND
   description = $DESC
 
 
-#############################################
-# Rule for compiling CXX files.
-
-rule CXX_COMPILER__audioplayers_linux_plugin_unscanned_Debug
-  depfile = $DEP_FILE
-  deps = gcc
-  command = ${LAUNCHER}${CODE_CHECK}/usr/bin/clang++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
-  description = Building CXX object $out
-
-
-#############################################
-# Rule for linking CXX shared library.
-
-rule CXX_SHARED_LIBRARY_LINKER__audioplayers_linux_plugin_Debug
-  command = $PRE_LINK && /usr/bin/clang++ -fPIC $LANGUAGE_COMPILE_FLAGS $ARCH_FLAGS $LINK_FLAGS -shared $SONAME_FLAG$SONAME -o $TARGET_FILE $in $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
-  description = Linking CXX shared library $TARGET_FILE
-  restat = $RESTAT
-
-
 #############################################
 # Rule for compiling CXX files.
 
diff --git a/zen_project1337/build/linux/x64/debug/build.ninja b/zen_project1337/build/linux/x64/debug/build.ninja
index b48c481..397f966 100644
--- a/zen_project1337/build/linux/x64/debug/build.ninja
+++ b/zen_project1337/build/linux/x64/debug/build.ninja
@@ -47,13 +47,13 @@ cmake_ninja_workdir = /home/matth/zen_project1337/build/linux/x64/debug/
 #############################################
 # Order-only phony target for zenyourself_complete_ui_final
 
-build cmake_object_order_depends_target_zenyourself_complete_ui_final: phony || cmake_object_order_depends_target_audioplayers_linux_plugin cmake_object_order_depends_target_flutter_secure_storage_linux_plugin cmake_object_order_depends_target_url_launcher_linux_plugin flutter/flutter_assemble
+build cmake_object_order_depends_target_zenyourself_complete_ui_final: phony || cmake_object_order_depends_target_flutter_secure_storage_linux_plugin cmake_object_order_depends_target_url_launcher_linux_plugin flutter/flutter_assemble
 
 build CMakeFiles/zenyourself_complete_ui_final.dir/main.cc.o: CXX_COMPILER__zenyourself_complete_ui_final_unscanned_Debug /home/matth/zen_project1337/linux/main.cc || cmake_object_order_depends_target_zenyourself_complete_ui_final
   DEFINES = -DAPPLICATION_ID=\"com.example.zenyourself_complete_ui_final\"
   DEP_FILE = CMakeFiles/zenyourself_complete_ui_final.dir/main.cc.o.d
   FLAGS = -g -Wall -Werror -pthread
-  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
+  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
   OBJECT_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   OBJECT_FILE_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   TARGET_COMPILE_PDB = CMakeFiles/zenyourself_complete_ui_final.dir/
@@ -63,7 +63,7 @@ build CMakeFiles/zenyourself_complete_ui_final.dir/my_application.cc.o: CXX_COMP
   DEFINES = -DAPPLICATION_ID=\"com.example.zenyourself_complete_ui_final\"
   DEP_FILE = CMakeFiles/zenyourself_complete_ui_final.dir/my_application.cc.o.d
   FLAGS = -g -Wall -Werror -pthread
-  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
+  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
   OBJECT_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   OBJECT_FILE_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   TARGET_COMPILE_PDB = CMakeFiles/zenyourself_complete_ui_final.dir/
@@ -73,7 +73,7 @@ build CMakeFiles/zenyourself_complete_ui_final.dir/flutter/generated_plugin_regi
   DEFINES = -DAPPLICATION_ID=\"com.example.zenyourself_complete_ui_final\"
   DEP_FILE = CMakeFiles/zenyourself_complete_ui_final.dir/flutter/generated_plugin_registrant.cc.o.d
   FLAGS = -g -Wall -Werror -pthread
-  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
+  INCLUDES = -I/home/matth/zen_project1337/linux/flutter/ephemeral -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/include -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
   OBJECT_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   OBJECT_FILE_DIR = CMakeFiles/zenyourself_complete_ui_final.dir/flutter
   TARGET_COMPILE_PDB = CMakeFiles/zenyourself_complete_ui_final.dir/
@@ -87,9 +87,9 @@ build CMakeFiles/zenyourself_complete_ui_final.dir/flutter/generated_plugin_regi
 #############################################
 # Link the executable intermediates_do_not_run/zenyourself_complete_ui_final
 
-build intermediates_do_not_run/zenyourself_complete_ui_final: CXX_EXECUTABLE_LINKER__zenyourself_complete_ui_final_Debug CMakeFiles/zenyourself_complete_ui_final.dir/main.cc.o CMakeFiles/zenyourself_complete_ui_final.dir/my_application.cc.o CMakeFiles/zenyourself_complete_ui_final.dir/flutter/generated_plugin_registrant.cc.o | plugins/audioplayers_linux/libaudioplayers_linux_plugin.so plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so plugins/url_launcher_linux/liburl_launcher_linux_plugin.so /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so /usr/lib/x86_64-linux-gnu/libgtk-3.so /usr/lib/x86_64-linux-gnu/libgdk-3.so /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so /usr/lib/x86_64-linux-gnu/libpango-1.0.so /usr/lib/x86_64-linux-gnu/libharfbuzz.so /usr/lib/x86_64-linux-gnu/libatk-1.0.so /usr/lib/x86_64-linux-gnu/libcairo-gobject.so /usr/lib/x86_64-linux-gnu/libcairo.so /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so /usr/lib/x86_64-linux-gnu/libgio-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so || flutter/flutter_assemble plugins/audioplayers_linux/libaudioplayers_linux_plugin.so plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so plugins/url_launcher_linux/liburl_launcher_linux_plugin.so
+build intermediates_do_not_run/zenyourself_complete_ui_final: CXX_EXECUTABLE_LINKER__zenyourself_complete_ui_final_Debug CMakeFiles/zenyourself_complete_ui_final.dir/main.cc.o CMakeFiles/zenyourself_complete_ui_final.dir/my_application.cc.o CMakeFiles/zenyourself_complete_ui_final.dir/flutter/generated_plugin_registrant.cc.o | plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so plugins/url_launcher_linux/liburl_launcher_linux_plugin.so /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so /usr/lib/x86_64-linux-gnu/libgtk-3.so /usr/lib/x86_64-linux-gnu/libgdk-3.so /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so /usr/lib/x86_64-linux-gnu/libpango-1.0.so /usr/lib/x86_64-linux-gnu/libharfbuzz.so /usr/lib/x86_64-linux-gnu/libatk-1.0.so /usr/lib/x86_64-linux-gnu/libcairo-gobject.so /usr/lib/x86_64-linux-gnu/libcairo.so /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so /usr/lib/x86_64-linux-gnu/libgio-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so || flutter/flutter_assemble plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so plugins/url_launcher_linux/liburl_launcher_linux_plugin.so
   FLAGS = -g
-  LINK_LIBRARIES = -Wl,-rpath,/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/url_launcher_linux:/home/matth/zen_project1337/linux/flutter/ephemeral:  plugins/audioplayers_linux/libaudioplayers_linux_plugin.so  plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so  plugins/url_launcher_linux/liburl_launcher_linux_plugin.so  -lflutter_linux_gtk  /usr/lib/x86_64-linux-gnu/libgtk-3.so  /usr/lib/x86_64-linux-gnu/libgdk-3.so  /usr/lib/x86_64-linux-gnu/libz.so  /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so  /usr/lib/x86_64-linux-gnu/libpango-1.0.so  /usr/lib/x86_64-linux-gnu/libharfbuzz.so  /usr/lib/x86_64-linux-gnu/libatk-1.0.so  /usr/lib/x86_64-linux-gnu/libcairo-gobject.so  /usr/lib/x86_64-linux-gnu/libcairo.so  /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so  /usr/lib/x86_64-linux-gnu/libgio-2.0.so  /usr/lib/x86_64-linux-gnu/libgobject-2.0.so  /usr/lib/x86_64-linux-gnu/libglib-2.0.so
+  LINK_LIBRARIES = -Wl,-rpath,/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/url_launcher_linux:/home/matth/zen_project1337/linux/flutter/ephemeral:  plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so  plugins/url_launcher_linux/liburl_launcher_linux_plugin.so  -lflutter_linux_gtk  /usr/lib/x86_64-linux-gnu/libgtk-3.so  /usr/lib/x86_64-linux-gnu/libgdk-3.so  /usr/lib/x86_64-linux-gnu/libz.so  /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so  /usr/lib/x86_64-linux-gnu/libpango-1.0.so  /usr/lib/x86_64-linux-gnu/libharfbuzz.so  /usr/lib/x86_64-linux-gnu/libatk-1.0.so  /usr/lib/x86_64-linux-gnu/libcairo-gobject.so  /usr/lib/x86_64-linux-gnu/libcairo.so  /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so  /usr/lib/x86_64-linux-gnu/libgio-2.0.so  /usr/lib/x86_64-linux-gnu/libgobject-2.0.so  /usr/lib/x86_64-linux-gnu/libglib-2.0.so
   LINK_PATH = -L/home/matth/zen_project1337/linux/flutter/ephemeral
   OBJECT_DIR = CMakeFiles/zenyourself_complete_ui_final.dir
   POST_BUILD = :
@@ -250,7 +250,7 @@ build flutter/CMakeFiles/flutter_assemble | ${cmake_ninja_workdir}flutter/CMakeF
 # Custom command for /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so
 
 build /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h flutter/_phony_ | ${cmake_ninja_workdir}flutter/_phony_: CUSTOM_COMMAND
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/flutter && /usr/bin/cmake -E env FLUTTER_ROOT=/home/matth/flutter PROJECT_DIR=/home/matth/zen_project1337 DART_DEFINES=RkxVVFRFUl9WRVJTSU9OPTMuMzIuOA==,RkxVVFRFUl9DSEFOTkVMPXN0YWJsZQ==,RkxVVFRFUl9HSVRfVVJMPWh0dHBzOi8vZ2l0aHViLmNvbS9mbHV0dGVyL2ZsdXR0ZXIuZ2l0,RkxVVFRFUl9GUkFNRVdPUktfUkVWSVNJT049ZWRhZGE3YzU2ZQ==,RkxVVFRFUl9FTkdJTkVfUkVWSVNJT049ZWYwY2QwMDA5MQ==,RkxVVFRFUl9EQVJUX1ZFUlNJT049My44LjE= DART_OBFUSCATION=false TRACK_WIDGET_CREATION=true TREE_SHAKE_ICONS=false PACKAGE_CONFIG=/home/matth/zen_project1337/.dart_tool/package_config.json FLUTTER_TARGET=/home/matth/zen_project1337/lib/main.dart /home/matth/flutter/packages/flutter_tools/bin/tool_backend.sh linux-x64 Debug
+  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/flutter && /usr/bin/cmake -E env FLUTTER_ROOT=/home/matth/flutter PROJECT_DIR=/home/matth/zen_project1337 DART_DEFINES=RkxVVFRFUl9WRVJTSU9OPTMuMzUuMC0wLjEucHJl,RkxVVFRFUl9DSEFOTkVMPWJldGE=,RkxVVFRFUl9HSVRfVVJMPWh0dHBzOi8vZ2l0aHViLmNvbS9mbHV0dGVyL2ZsdXR0ZXIuZ2l0,RkxVVFRFUl9GUkFNRVdPUktfUkVWSVNJT049YzBmMmExZGQ2MA==,RkxVVFRFUl9FTkdJTkVfUkVWSVNJT049MWM5YzIwZTdjMw==,RkxVVFRFUl9EQVJUX1ZFUlNJT049My45LjAgKGJ1aWxkIDMuOS4wLTMzMy4yLmJldGEp DART_OBFUSCATION=false TRACK_WIDGET_CREATION=true TREE_SHAKE_ICONS=false PACKAGE_CONFIG=/home/matth/zen_project1337/.dart_tool/package_config.json FLUTTER_TARGET=/home/matth/zen_project1337/lib/main.dart /home/matth/flutter/packages/flutter_tools/bin/tool_backend.sh linux-x64 Debug
   DESC = Generating /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_engine.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_call.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_method_response.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_value.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_view.h, /home/matth/zen_project1337/linux/flutter/ephemeral/flutter_linux/flutter_linux.h, _phony_
   restat = 1
 
@@ -259,126 +259,6 @@ build /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.s
 # /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake
 # =============================================================================
 
-# =============================================================================
-# Object build statements for SHARED_LIBRARY target audioplayers_linux_plugin
-
-
-#############################################
-# Order-only phony target for audioplayers_linux_plugin
-
-build cmake_object_order_depends_target_audioplayers_linux_plugin: phony || flutter/flutter_assemble
-
-build plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audioplayers_linux_plugin.cc.o: CXX_COMPILER__audioplayers_linux_plugin_unscanned_Debug /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/audioplayers_linux_plugin.cc || cmake_object_order_depends_target_audioplayers_linux_plugin
-  DEFINES = -DAPPLICATION_ID=\"com.example.zenyourself_complete_ui_final\" -DFLUTTER_PLUGIN_IMPL -Daudioplayers_linux_plugin_EXPORTS
-  DEP_FILE = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audioplayers_linux_plugin.cc.o.d
-  FLAGS = -g -fPIC -fvisibility=hidden -Wall -Werror -pthread
-  INCLUDES = -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux -I/home/matth/zen_project1337/linux/flutter/ephemeral -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
-  OBJECT_DIR = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-  OBJECT_FILE_DIR = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-  TARGET_COMPILE_PDB = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/
-  TARGET_PDB = plugins/audioplayers_linux/libaudioplayers_linux_plugin.pdb
-
-build plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audio_player.cc.o: CXX_COMPILER__audioplayers_linux_plugin_unscanned_Debug /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/audio_player.cc || cmake_object_order_depends_target_audioplayers_linux_plugin
-  DEFINES = -DAPPLICATION_ID=\"com.example.zenyourself_complete_ui_final\" -DFLUTTER_PLUGIN_IMPL -Daudioplayers_linux_plugin_EXPORTS
-  DEP_FILE = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audio_player.cc.o.d
-  FLAGS = -g -fPIC -fvisibility=hidden -Wall -Werror -pthread
-  INCLUDES = -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux -I/home/matth/zen_project1337/linux/flutter/ephemeral -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/gtk-3.0 -isystem /usr/include/pango-1.0 -isystem /usr/include/harfbuzz -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/fribidi -isystem /usr/include/cairo -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/webp -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/at-spi2-atk/2.0 -isystem /usr/include/at-spi-2.0 -isystem /usr/include/dbus-1.0 -isystem /usr/lib/x86_64-linux-gnu/dbus-1.0/include
-  OBJECT_DIR = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-  OBJECT_FILE_DIR = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-  TARGET_COMPILE_PDB = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/
-  TARGET_PDB = plugins/audioplayers_linux/libaudioplayers_linux_plugin.pdb
-
-
-# =============================================================================
-# Link build statements for SHARED_LIBRARY target audioplayers_linux_plugin
-
-
-#############################################
-# Link the shared library plugins/audioplayers_linux/libaudioplayers_linux_plugin.so
-
-build plugins/audioplayers_linux/libaudioplayers_linux_plugin.so: CXX_SHARED_LIBRARY_LINKER__audioplayers_linux_plugin_Debug plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audioplayers_linux_plugin.cc.o plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/audio_player.cc.o | /home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so /usr/lib/x86_64-linux-gnu/libgtk-3.so /usr/lib/x86_64-linux-gnu/libgdk-3.so /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so /usr/lib/x86_64-linux-gnu/libpango-1.0.so /usr/lib/x86_64-linux-gnu/libharfbuzz.so /usr/lib/x86_64-linux-gnu/libatk-1.0.so /usr/lib/x86_64-linux-gnu/libcairo-gobject.so /usr/lib/x86_64-linux-gnu/libcairo.so /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so /usr/lib/x86_64-linux-gnu/libgio-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so || flutter/flutter_assemble
-  LANGUAGE_COMPILE_FLAGS = -g
-  LINK_LIBRARIES = -Wl,-rpath,/home/matth/zen_project1337/linux/flutter/ephemeral  -lgstapp-1.0  -lgstbase-1.0  -lgstreamer-1.0  -lgobject-2.0  -lglib-2.0  -lglib-2.0  -lflutter_linux_gtk  /usr/lib/x86_64-linux-gnu/libgtk-3.so  /usr/lib/x86_64-linux-gnu/libgdk-3.so  /usr/lib/x86_64-linux-gnu/libz.so  /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so  /usr/lib/x86_64-linux-gnu/libpango-1.0.so  /usr/lib/x86_64-linux-gnu/libharfbuzz.so  /usr/lib/x86_64-linux-gnu/libatk-1.0.so  /usr/lib/x86_64-linux-gnu/libcairo-gobject.so  /usr/lib/x86_64-linux-gnu/libcairo.so  /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so  /usr/lib/x86_64-linux-gnu/libgio-2.0.so  /usr/lib/x86_64-linux-gnu/libgobject-2.0.so  /usr/lib/x86_64-linux-gnu/libglib-2.0.so
-  LINK_PATH = -L/home/matth/zen_project1337/linux/flutter/ephemeral
-  OBJECT_DIR = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir
-  POST_BUILD = :
-  PRE_LINK = :
-  SONAME = libaudioplayers_linux_plugin.so
-  SONAME_FLAG = -Wl,-soname,
-  TARGET_COMPILE_PDB = plugins/audioplayers_linux/CMakeFiles/audioplayers_linux_plugin.dir/
-  TARGET_FILE = plugins/audioplayers_linux/libaudioplayers_linux_plugin.so
-  TARGET_PDB = plugins/audioplayers_linux/libaudioplayers_linux_plugin.pdb
-
-
-#############################################
-# Utility command for edit_cache
-
-build plugins/audioplayers_linux/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux && /usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
-  DESC = No interactive CMake dialog available...
-  restat = 1
-
-build plugins/audioplayers_linux/edit_cache: phony plugins/audioplayers_linux/CMakeFiles/edit_cache.util
-
-
-#############################################
-# Utility command for rebuild_cache
-
-build plugins/audioplayers_linux/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux && /usr/bin/cmake --regenerate-during-build -S/home/matth/zen_project1337/linux -B/home/matth/zen_project1337/build/linux/x64/debug
-  DESC = Running CMake to regenerate build system...
-  pool = console
-  restat = 1
-
-build plugins/audioplayers_linux/rebuild_cache: phony plugins/audioplayers_linux/CMakeFiles/rebuild_cache.util
-
-
-#############################################
-# Utility command for list_install_components
-
-build plugins/audioplayers_linux/list_install_components: phony
-
-
-#############################################
-# Utility command for install
-
-build plugins/audioplayers_linux/CMakeFiles/install.util: CUSTOM_COMMAND plugins/audioplayers_linux/all
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux && /usr/bin/cmake -P cmake_install.cmake
-  DESC = Install the project...
-  pool = console
-  restat = 1
-
-build plugins/audioplayers_linux/install: phony plugins/audioplayers_linux/CMakeFiles/install.util
-
-
-#############################################
-# Utility command for install/local
-
-build plugins/audioplayers_linux/CMakeFiles/install/local.util: CUSTOM_COMMAND plugins/audioplayers_linux/all
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux && /usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
-  DESC = Installing only the local directory...
-  pool = console
-  restat = 1
-
-build plugins/audioplayers_linux/install/local: phony plugins/audioplayers_linux/CMakeFiles/install/local.util
-
-
-#############################################
-# Utility command for install/strip
-
-build plugins/audioplayers_linux/CMakeFiles/install/strip.util: CUSTOM_COMMAND plugins/audioplayers_linux/all
-  COMMAND = cd /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux && /usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
-  DESC = Installing the project stripped...
-  pool = console
-  restat = 1
-
-build plugins/audioplayers_linux/install/strip: phony plugins/audioplayers_linux/CMakeFiles/install/strip.util
-
-# =============================================================================
-# Write statements declared in CMakeLists.txt:
-# /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake
-# =============================================================================
-
 # =============================================================================
 # Object build statements for SHARED_LIBRARY target flutter_secure_storage_linux_plugin
 
@@ -607,14 +487,10 @@ build plugins/url_launcher_linux/install/strip: phony plugins/url_launcher_linux
 # =============================================================================
 # Target aliases.
 
-build audioplayers_linux_plugin: phony plugins/audioplayers_linux/libaudioplayers_linux_plugin.so
-
 build flutter_assemble: phony flutter/flutter_assemble
 
 build flutter_secure_storage_linux_plugin: phony plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so
 
-build libaudioplayers_linux_plugin.so: phony plugins/audioplayers_linux/libaudioplayers_linux_plugin.so
-
 build libflutter_secure_storage_linux_plugin.so: phony plugins/flutter_secure_storage_linux/libflutter_secure_storage_linux_plugin.so
 
 build liburl_launcher_linux_plugin.so: phony plugins/url_launcher_linux/liburl_launcher_linux_plugin.so
@@ -631,7 +507,7 @@ build zenyourself_complete_ui_final: phony intermediates_do_not_run/zenyourself_
 #############################################
 # Folder: /home/matth/zen_project1337/build/linux/x64/debug
 
-build all: phony intermediates_do_not_run/zenyourself_complete_ui_final flutter/all plugins/audioplayers_linux/all plugins/flutter_secure_storage_linux/all plugins/url_launcher_linux/all
+build all: phony intermediates_do_not_run/zenyourself_complete_ui_final flutter/all plugins/flutter_secure_storage_linux/all plugins/url_launcher_linux/all
 
 # =============================================================================
 
@@ -642,13 +518,6 @@ build flutter/all: phony
 
 # =============================================================================
 
-#############################################
-# Folder: /home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux
-
-build plugins/audioplayers_linux/all: phony plugins/audioplayers_linux/libaudioplayers_linux_plugin.so
-
-# =============================================================================
-
 #############################################
 # Folder: /home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux
 
@@ -668,14 +537,14 @@ build plugins/url_launcher_linux/all: phony plugins/url_launcher_linux/liburl_la
 #############################################
 # Re-run CMake if any of its inputs changed.
 
-build build.ninja: RERUN_CMAKE | /home/matth/zen_project1337/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/generated_config.cmake /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake /usr/share/cmake-3.28/Modules/CMakeCXXCompiler.cmake.in /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp /usr/share/cmake-3.28/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.28/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.28/Modules/CMakeCompilerIdDetection.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompileFeatures.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerABI.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineSystem.cmake /usr/share/cmake-3.28/Modules/CMakeFindBinUtils.cmake /usr/share/cmake-3.28/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.28/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.28/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.28/Modules/CMakeNinjaFindMake.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitIncludeInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitLinkInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseLibraryArchitecture.cmake /usr/share/cmake-3.28/Modules/CMakeSystem.cmake.in /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeTestCompilerCommon.cmake /usr/share/cmake-3.28/Modules/Compiler/ADSP-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMCC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/AppleClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Borland-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-FindBinUtils.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang.cmake /usr/share/cmake-3.28/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Cray-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CrayClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GHS-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU.cmake /usr/share/cmake-3.28/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IAR-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Intel-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/MSVC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVHPC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OrangeC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PGI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PathScale-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SCO-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/TI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Tasking-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Watcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/ExternalProject/shared_internal_commands.cmake /usr/share/cmake-3.28/Modules/FetchContent.cmake /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.28/Modules/FindPackageMessage.cmake /usr/share/cmake-3.28/Modules/FindPkgConfig.cmake /usr/share/cmake-3.28/Modules/Internal/FeatureTesting.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Determine-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake-3.28/Modules/Platform/Linux.cmake /usr/share/cmake-3.28/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake
+build build.ninja: RERUN_CMAKE | /home/matth/zen_project1337/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/generated_config.cmake /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake /usr/share/cmake-3.28/Modules/CMakeCXXCompiler.cmake.in /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp /usr/share/cmake-3.28/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.28/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.28/Modules/CMakeCompilerIdDetection.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompileFeatures.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerABI.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineSystem.cmake /usr/share/cmake-3.28/Modules/CMakeFindBinUtils.cmake /usr/share/cmake-3.28/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.28/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.28/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.28/Modules/CMakeNinjaFindMake.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitIncludeInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitLinkInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseLibraryArchitecture.cmake /usr/share/cmake-3.28/Modules/CMakeSystem.cmake.in /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeTestCompilerCommon.cmake /usr/share/cmake-3.28/Modules/Compiler/ADSP-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMCC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/AppleClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Borland-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-FindBinUtils.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang.cmake /usr/share/cmake-3.28/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Cray-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CrayClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GHS-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU.cmake /usr/share/cmake-3.28/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IAR-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Intel-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/MSVC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVHPC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OrangeC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PGI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PathScale-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SCO-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/TI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Tasking-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Watcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.28/Modules/FindPackageMessage.cmake /usr/share/cmake-3.28/Modules/FindPkgConfig.cmake /usr/share/cmake-3.28/Modules/Internal/FeatureTesting.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Determine-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake-3.28/Modules/Platform/Linux.cmake /usr/share/cmake-3.28/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake
   pool = console
 
 
 #############################################
 # A missing CMake input file is not an error.
 
-build /home/matth/zen_project1337/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/generated_config.cmake /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake /usr/share/cmake-3.28/Modules/CMakeCXXCompiler.cmake.in /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp /usr/share/cmake-3.28/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.28/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.28/Modules/CMakeCompilerIdDetection.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompileFeatures.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerABI.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineSystem.cmake /usr/share/cmake-3.28/Modules/CMakeFindBinUtils.cmake /usr/share/cmake-3.28/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.28/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.28/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.28/Modules/CMakeNinjaFindMake.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitIncludeInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitLinkInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseLibraryArchitecture.cmake /usr/share/cmake-3.28/Modules/CMakeSystem.cmake.in /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeTestCompilerCommon.cmake /usr/share/cmake-3.28/Modules/Compiler/ADSP-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMCC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/AppleClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Borland-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-FindBinUtils.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang.cmake /usr/share/cmake-3.28/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Cray-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CrayClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GHS-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU.cmake /usr/share/cmake-3.28/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IAR-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Intel-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/MSVC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVHPC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OrangeC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PGI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PathScale-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SCO-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/TI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Tasking-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Watcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/ExternalProject/shared_internal_commands.cmake /usr/share/cmake-3.28/Modules/FetchContent.cmake /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.28/Modules/FindPackageMessage.cmake /usr/share/cmake-3.28/Modules/FindPkgConfig.cmake /usr/share/cmake-3.28/Modules/Internal/FeatureTesting.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Determine-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake-3.28/Modules/Platform/Linux.cmake /usr/share/cmake-3.28/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake: phony
+build /home/matth/zen_project1337/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/flutter_secure_storage_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt /home/matth/zen_project1337/linux/flutter/ephemeral/generated_config.cmake /home/matth/zen_project1337/linux/flutter/generated_plugins.cmake /usr/share/cmake-3.28/Modules/CMakeCXXCompiler.cmake.in /usr/share/cmake-3.28/Modules/CMakeCXXCompilerABI.cpp /usr/share/cmake-3.28/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.28/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.28/Modules/CMakeCompilerIdDetection.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompileFeatures.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerABI.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake /usr/share/cmake-3.28/Modules/CMakeDetermineSystem.cmake /usr/share/cmake-3.28/Modules/CMakeFindBinUtils.cmake /usr/share/cmake-3.28/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.28/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.28/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.28/Modules/CMakeNinjaFindMake.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitIncludeInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseImplicitLinkInfo.cmake /usr/share/cmake-3.28/Modules/CMakeParseLibraryArchitecture.cmake /usr/share/cmake-3.28/Modules/CMakeSystem.cmake.in /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.28/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake /usr/share/cmake-3.28/Modules/CMakeTestCompilerCommon.cmake /usr/share/cmake-3.28/Modules/Compiler/ADSP-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMCC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/ARMClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/AppleClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Borland-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang-FindBinUtils.cmake /usr/share/cmake-3.28/Modules/Compiler/Clang.cmake /usr/share/cmake-3.28/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Cray-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/CrayClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GHS-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/GNU.cmake /usr/share/cmake-3.28/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IAR-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /usr/share/cmake-3.28/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Intel-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/MSVC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVHPC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/OrangeC-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PGI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/PathScale-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SCO-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/TI-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Tasking-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/Watcom-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.28/Modules/FindPackageMessage.cmake /usr/share/cmake-3.28/Modules/FindPkgConfig.cmake /usr/share/cmake-3.28/Modules/Internal/FeatureTesting.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Determine-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.28/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake-3.28/Modules/Platform/Linux.cmake /usr/share/cmake-3.28/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake: phony
 
 
 #############################################
diff --git a/zen_project1337/build/linux/x64/debug/cmake_install.cmake b/zen_project1337/build/linux/x64/debug/cmake_install.cmake
index c401ec6..3882788 100644
--- a/zen_project1337/build/linux/x64/debug/cmake_install.cmake
+++ b/zen_project1337/build/linux/x64/debug/cmake_install.cmake
@@ -68,7 +68,7 @@ if(CMAKE_INSTALL_COMPONENT STREQUAL "Runtime" OR NOT CMAKE_INSTALL_COMPONENT)
      NOT IS_SYMLINK "$ENV{DESTDIR}/home/matth/zen_project1337/build/linux/x64/debug/bundle/zenyourself_complete_ui_final")
     file(RPATH_CHANGE
          FILE "$ENV{DESTDIR}/home/matth/zen_project1337/build/linux/x64/debug/bundle/zenyourself_complete_ui_final"
-         OLD_RPATH "/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/url_launcher_linux:/home/matth/zen_project1337/linux/flutter/ephemeral:"
+         OLD_RPATH "/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux:/home/matth/zen_project1337/build/linux/x64/debug/plugins/url_launcher_linux:/home/matth/zen_project1337/linux/flutter/ephemeral:"
          NEW_RPATH "$ORIGIN/lib")
     if(CMAKE_INSTALL_DO_STRIP)
       execute_process(COMMAND "/usr/bin/strip" "$ENV{DESTDIR}/home/matth/zen_project1337/build/linux/x64/debug/bundle/zenyourself_complete_ui_final")
@@ -100,18 +100,6 @@ if(CMAKE_INSTALL_COMPONENT STREQUAL "Runtime" OR NOT CMAKE_INSTALL_COMPONENT)
   file(INSTALL DESTINATION "/home/matth/zen_project1337/build/linux/x64/debug/bundle/lib" TYPE FILE FILES "/home/matth/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so")
 endif()
 
-if(CMAKE_INSTALL_COMPONENT STREQUAL "Runtime" OR NOT CMAKE_INSTALL_COMPONENT)
-  list(APPEND CMAKE_ABSOLUTE_DESTINATION_FILES
-   "/home/matth/zen_project1337/build/linux/x64/debug/bundle/lib/libaudioplayers_linux_plugin.so")
-  if(CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION)
-    message(WARNING "ABSOLUTE path INSTALL DESTINATION : ${CMAKE_ABSOLUTE_DESTINATION_FILES}")
-  endif()
-  if(CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION)
-    message(FATAL_ERROR "ABSOLUTE path INSTALL DESTINATION forbidden (by caller): ${CMAKE_ABSOLUTE_DESTINATION_FILES}")
-  endif()
-  file(INSTALL DESTINATION "/home/matth/zen_project1337/build/linux/x64/debug/bundle/lib" TYPE FILE FILES "/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/libaudioplayers_linux_plugin.so")
-endif()
-
 if(CMAKE_INSTALL_COMPONENT STREQUAL "Runtime" OR NOT CMAKE_INSTALL_COMPONENT)
   list(APPEND CMAKE_ABSOLUTE_DESTINATION_FILES
    "/home/matth/zen_project1337/build/linux/x64/debug/bundle/lib/libflutter_secure_storage_linux_plugin.so")
@@ -169,7 +157,6 @@ endif()
 if(NOT CMAKE_INSTALL_LOCAL_ONLY)
   # Include the install script for each subdirectory.
   include("/home/matth/zen_project1337/build/linux/x64/debug/flutter/cmake_install.cmake")
-  include("/home/matth/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/cmake_install.cmake")
   include("/home/matth/zen_project1337/build/linux/x64/debug/plugins/flutter_secure_storage_linux/cmake_install.cmake")
   include("/home/matth/zen_project1337/build/linux/x64/debug/plugins/url_launcher_linux/cmake_install.cmake")
 
diff --git a/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/cmake_install.cmake b/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/cmake_install.cmake
deleted file mode 100644
index d4a4c8d..0000000
--- a/zen_project1337/build/linux/x64/debug/plugins/audioplayers_linux/cmake_install.cmake
+++ /dev/null
@@ -1,44 +0,0 @@
-# Install script for directory: /home/matth/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux/linux
-
-# Set the install prefix
-if(NOT DEFINED CMAKE_INSTALL_PREFIX)
-  set(CMAKE_INSTALL_PREFIX "/home/matth/zen_project1337/build/linux/x64/debug/bundle")
-endif()
-string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
-
-# Set the install configuration name.
-if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
-  if(BUILD_TYPE)
-    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
-           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
-  else()
-    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
-  endif()
-  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
-endif()
-
-# Set the component getting installed.
-if(NOT CMAKE_INSTALL_COMPONENT)
-  if(COMPONENT)
-    message(STATUS "Install component: \"${COMPONENT}\"")
-    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
-  else()
-    set(CMAKE_INSTALL_COMPONENT)
-  endif()
-endif()
-
-# Install shared libraries without execute permission?
-if(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
-  set(CMAKE_INSTALL_SO_NO_EXE "1")
-endif()
-
-# Is this installation the result of a crosscompile?
-if(NOT DEFINED CMAKE_CROSSCOMPILING)
-  set(CMAKE_CROSSCOMPILING "FALSE")
-endif()
-
-# Set default install directory permissions.
-if(NOT DEFINED CMAKE_OBJDUMP)
-  set(CMAKE_OBJDUMP "/usr/bin/objdump")
-endif()
-
diff --git a/zen_project1337/flutter b/zen_project1337/flutter
--- a/zen_project1337/flutter
+++ b/zen_project1337/flutter
@@ -1 +1 @@
-Subproject commit edada7c56edf4a183c1735310e123c7f923584f1
+Subproject commit edada7c56edf4a183c1735310e123c7f923584f1-dirty
diff --git a/zen_project1337/ios/Flutter/Generated.xcconfig b/zen_project1337/ios/Flutter/Generated.xcconfig
index 0223fab..c563f46 100644
--- a/zen_project1337/ios/Flutter/Generated.xcconfig
+++ b/zen_project1337/ios/Flutter/Generated.xcconfig
@@ -6,6 +6,7 @@ FLUTTER_TARGET=lib/main.dart
 FLUTTER_BUILD_DIR=build
 FLUTTER_BUILD_NAME=1.0.0
 FLUTTER_BUILD_NUMBER=1
+FLUTTER_CLI_BUILD_MODE=debug
 EXCLUDED_ARCHS[sdk=iphonesimulator*]=i386
 EXCLUDED_ARCHS[sdk=iphoneos*]=armv7
 DART_OBFUSCATION=false
diff --git a/zen_project1337/ios/Flutter/flutter_export_environment.sh b/zen_project1337/ios/Flutter/flutter_export_environment.sh
index 69ec3ca..699c542 100755
--- a/zen_project1337/ios/Flutter/flutter_export_environment.sh
+++ b/zen_project1337/ios/Flutter/flutter_export_environment.sh
@@ -7,6 +7,7 @@ export "FLUTTER_TARGET=lib/main.dart"
 export "FLUTTER_BUILD_DIR=build"
 export "FLUTTER_BUILD_NAME=1.0.0"
 export "FLUTTER_BUILD_NUMBER=1"
+export "FLUTTER_CLI_BUILD_MODE=debug"
 export "DART_OBFUSCATION=false"
 export "TRACK_WIDGET_CREATION=true"
 export "TREE_SHAKE_ICONS=false"
diff --git a/zen_project1337/ios/Runner/GeneratedPluginRegistrant.m b/zen_project1337/ios/Runner/GeneratedPluginRegistrant.m
index da623eb..b3fc789 100644
--- a/zen_project1337/ios/Runner/GeneratedPluginRegistrant.m
+++ b/zen_project1337/ios/Runner/GeneratedPluginRegistrant.m
@@ -12,12 +12,6 @@
 @import audio_session;
 #endif
 
-#if __has_include(<audioplayers_darwin/AudioplayersDarwinPlugin.h>)
-#import <audioplayers_darwin/AudioplayersDarwinPlugin.h>
-#else
-@import audioplayers_darwin;
-#endif
-
 #if __has_include(<flutter_local_notifications/FlutterLocalNotificationsPlugin.h>)
 #import <flutter_local_notifications/FlutterLocalNotificationsPlugin.h>
 #else
@@ -70,7 +64,6 @@
 
 + (void)registerWithRegistry:(NSObject<FlutterPluginRegistry>*)registry {
   [AudioSessionPlugin registerWithRegistrar:[registry registrarForPlugin:@"AudioSessionPlugin"]];
-  [AudioplayersDarwinPlugin registerWithRegistrar:[registry registrarForPlugin:@"AudioplayersDarwinPlugin"]];
   [FlutterLocalNotificationsPlugin registerWithRegistrar:[registry registrarForPlugin:@"FlutterLocalNotificationsPlugin"]];
   [FlutterSecureStoragePlugin registerWithRegistrar:[registry registrarForPlugin:@"FlutterSecureStoragePlugin"]];
   [JustAudioPlugin registerWithRegistrar:[registry registrarForPlugin:@"JustAudioPlugin"]];
diff --git a/zen_project1337/ios/Runner/Info.plist b/zen_project1337/ios/Runner/Info.plist
index 2d008ee..1d87956 100644
--- a/zen_project1337/ios/Runner/Info.plist
+++ b/zen_project1337/ios/Runner/Info.plist
@@ -2,10 +2,9 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<!-- Basis -->
 	<key>CFBundleDevelopmentRegion</key>
 	<string>$(DEVELOPMENT_LANGUAGE)</string>
-	<key>CFBundleDisplayName</key>
-	<string>Zenyourself Complete Ui Final</string>
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
@@ -13,21 +12,23 @@
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
-	<string>zenyourself_complete_ui_final</string>
+	<string>ZenYourself</string>
+	<key>CFBundleDisplayName</key>
+	<string>ZenYourself</string>
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
 	<string>$(FLUTTER_BUILD_NAME)</string>
-	<key>CFBundleSignature</key>
-	<string>????</string>
 	<key>CFBundleVersion</key>
 	<string>$(FLUTTER_BUILD_NUMBER)</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true/>
+
+	<!-- Launch Screen (Flutter) -->
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
-	<key>UIMainStoryboardFile</key>
-	<string>Main</string>
+
+	<!-- Orientation -->
 	<key>UISupportedInterfaceOrientations</key>
 	<array>
 		<string>UIInterfaceOrientationPortrait</string>
@@ -41,9 +42,23 @@
 		<string>UIInterfaceOrientationLandscapeLeft</string>
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
+
+	<!-- Performance & Eingabe -->
 	<key>CADisableMinimumFrameDurationOnPhone</key>
 	<true/>
 	<key>UIApplicationSupportsIndirectInputEvents</key>
 	<true/>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<true/>
+
+	<!-- Privacy: für Diktat/Spracherkennung -->
+	<key>NSMicrophoneUsageDescription</key>
+	<string>Mikrofonzugriff wird benötigt, damit du Gedanken einsprechen kannst.</string>
+	<key>NSSpeechRecognitionUsageDescription</key>
+	<string>Spracherkennung wird benötigt, um gesprochene Eingaben in Text zu verwandeln.</string>
+
+	<!-- App-Store: kein Export kontrollierter Verschlüsselung -->
+	<key>ITSAppUsesNonExemptEncryption</key>
+	<false/>
 </dict>
 </plist>
diff --git a/zen_project1337/lib/audio/soundscape_manager.dart b/zen_project1337/lib/audio/soundscape_manager.dart
index 63b0ffa..ba44b77 100644
--- a/zen_project1337/lib/audio/soundscape_manager.dart
+++ b/zen_project1337/lib/audio/soundscape_manager.dart
@@ -1,62 +1,125 @@
 import 'package:flutter/material.dart';
 import 'package:just_audio/just_audio.dart';
 
-/// SoundscapeManager: Steuert Soundscapes und Musik für ZenYourself.
-/// - Stimmungsabhängig (Mood-Adaptive)
-/// - Smooth Transitions
-/// - Async steuerbar (z.B. beim Screenwechsel, MoodChange)
-/// - UI-Widget für Lautstärke
+/// SoundscapeManager
+/// -----------------
+/// Sanfte, sichere Audiosteuerung für ZenYourself:
+/// • Sanfte Fade-In/Fade-Outs (ohne „Audio-Schreckmomente“)
+/// • Crossfade beim Wechseln der Landschaft (asset → asset)
+/// • Volumen-Clamping & Fehler-Toleranz
+/// • Thread-safe Fades mittels „Generation Token“ (unterbrichbar)
+/// • Schlanke API: play / stop / toggle / setVolume / playMood
+///
+/// Hinweis zu Sicherheit & Achtsamkeit:
+/// - Startet Sounds grundsätzlich leise und fährt langsam hoch.
+/// - Alle Fades sind unterbrechbar, um plötzliche Lautstärkewechsel zu verhindern.
+/// - Keine personenbezogenen Daten; nur lokale Assets.
+///
+/// Abhängigkeiten: just_audio
 class SoundscapeManager with ChangeNotifier {
   final AudioPlayer _player = AudioPlayer();
-  double _volume = 0.38;
+
+  // Nutzerpräferenz-Lautstärke (Zielwert). Tatsächliche Player-Volume kann
+  // während Fades zwischen 0.0.._volume liegen.
+  double _volume = 0.35;
   String? _currentAsset;
 
+  // Interner Fade-/Zustands-Schutz
+  bool _busy = false;
+  bool _disposed = false;
+  int _fadeGen = 0; // erhöht sich bei jedem neuen Fade → bricht alte Fades ab
+
   double get volume => _volume;
   bool get isPlaying => _player.playing;
+  String? get currentAsset => _currentAsset;
+
+  /// Lade & spiele eine Soundscape-Datei aus den Assets.
+  /// [fadeIn] in Sekunden (Standard sanft).
+  /// [loop] standardmäßig true (Ambience).
+  Future<void> play(
+    String asset, {
+    double? fadeIn,
+    bool loop = true,
+  }) async {
+    if (_disposed) return;
 
-  /// Lade und spiele ein Soundscape (mp3/ogg in assets/audio)
-  Future<void> play(String asset, {double? fadeIn, bool loop = true}) async {
+    // Wenn derselbe Track bereits läuft → nichts tun
     if (_currentAsset == asset && _player.playing) return;
-    await _player.setVolume(0);
-    await _player.setLoopMode(loop ? LoopMode.one : LoopMode.off);
-    await _player.setAsset(asset);
-    _currentAsset = asset;
-    await _player.play();
-    _fadeVolume(_volume, fadeIn ?? 1.8);
-    notifyListeners();
+
+    // Crossfade (sanft stoppen, dann starten)
+    if (_currentAsset != null && _currentAsset != asset && _player.playing) {
+      await stop(fadeOut: 0.9);
+      // Mini-Pause, damit Geräte-Audiofokus sauber wechselt
+      await Future.delayed(const Duration(milliseconds: 120));
+    }
+
+    _busy = true;
+    _cancelFades(); // laufende Fades abbrechen
+    try {
+      // Starte immer leise und fade dann zum Wunsch-Volumen
+      await _player.setVolume(0.0);
+      await _player.setLoopMode(loop ? LoopMode.one : LoopMode.off);
+      await _player.setAsset(asset);
+      _currentAsset = asset;
+      notifyListeners();
+
+      await _player.play();
+      await _fadeTo(_volume, durationSec: fadeIn ?? 1.5);
+    } catch (e) {
+      debugPrint('[Soundscape] play error: $e');
+      // Rollback-Zustand
+      _currentAsset = null;
+      try {
+        await _player.stop();
+      } catch (_) {}
+      notifyListeners();
+    } finally {
+      _busy = false;
+    }
   }
 
-  /// Lautstärke animiert anpassen (z.B. bei Szene-Wechsel)
-  Future<void> setVolume(double target, {double duration = 1.5}) async {
+  /// Lautstärke (0.0–1.0) mit sanftem Fade setzen.
+  Future<void> setVolume(double target, {double duration = 1.0}) async {
+    if (_disposed) return;
+    // Clamp
     target = target.clamp(0.0, 1.0);
-    await _fadeVolume(target, duration);
     _volume = target;
     notifyListeners();
-  }
 
-  /// Soundscape pausieren/stoppen (mit optionalem Fade-Out)
-  Future<void> stop({double fadeOut = 1.2}) async {
-    await _fadeVolume(0.0, fadeOut);
-    await _player.stop();
-    _currentAsset = null;
-    notifyListeners();
+    // Wenn gerade kein Audio aktiv ist, nur Ziel „merken“,
+    // aber dennoch Player-Volume setzen (für Preview/Sofortfeedback).
+    if (!_player.playing) {
+      try {
+        await _player.setVolume(target);
+      } catch (_) {}
+      return;
+    }
+
+    await _fadeTo(target, durationSec: duration);
   }
 
-  /// Interner Fader
-  Future<void> _fadeVolume(double to, double duration) async {
-    final steps = 24;
-    final from = _player.volume;
-    for (int i = 0; i <= steps; i++) {
-      final v = from + (to - from) * (i / steps);
-      _player.setVolume(v);
-      await Future.delayed(Duration(milliseconds: (duration * 1000 ~/ steps)));
+  /// Sanftes Stoppen (Fade-Out), setzt aktuellen Track zurück.
+  Future<void> stop({double fadeOut = 1.0}) async {
+    if (_disposed) return;
+    if (!_player.playing && _currentAsset == null) return;
+
+    _busy = true;
+    _cancelFades();
+    try {
+      await _fadeTo(0.0, durationSec: fadeOut);
+      await _player.stop();
+    } catch (e) {
+      debugPrint('[Soundscape] stop error: $e');
+    } finally {
+      _currentAsset = null;
+      _busy = false;
+      notifyListeners();
     }
-    _player.setVolume(to);
   }
 
-  /// Für automatisches Soundscape (z.B. bei Mood/Screen)
+  /// Stimmung → passende Soundscape (Dart-2-kompatibel ohne switch-expression).
   Future<void> playMood(int moodScore) async {
-    // Beispiel-Assets zuordnen:
+    if (_disposed) return;
     String asset;
     switch (moodScore) {
       case 0:
@@ -76,17 +139,87 @@ class SoundscapeManager with ChangeNotifier {
         break;
       default:
         asset = 'assets/audio/neutral_flow.mp3';
+        break;
     }
     await play(asset, fadeIn: 2.0);
   }
 
+  /// Play/Pause-ähnliches Verhalten:
+  /// – Wenn etwas spielt → sanft stoppen
+  /// – Wenn pausiert und es gibt einen letzten Track → wieder sanft starten
+  Future<void> toggle() async {
+    if (_disposed || _busy) return;
+    if (isPlaying) {
+      await stop();
+    } else if (_currentAsset != null) {
+      await play(_currentAsset!);
+    }
+  }
+
+  // =========================
+  // Interna: Fade-Engine
+  // =========================
+
+  /// Bricht laufende Fades ab, indem die Generation erhöht wird.
+  void _cancelFades() {
+    _fadeGen++;
+  }
+
+  /// Fährt Lautstärke sanft auf [to].
+  Future<void> _fadeTo(double to, {required double durationSec}) async {
+    // Minimale Dauer & Schritte
+    const steps = 20;
+    final totalMs = (durationSec * 1000).clamp(60, 6000).toInt();
+    final rawStep = (totalMs / steps).floor(); // int
+    final stepMs = rawStep < 8 ? 8 : (rawStep > 400 ? 400 : rawStep);
+
+    final gen = ++_fadeGen; // neue Fade-Generation
+    double from;
+    try {
+      from = _player.volume;
+    } catch (_) {
+      from = 0.0;
+    }
+
+    for (int i = 0; i <= steps; i++) {
+      if (_disposed || gen != _fadeGen) return; // abgebrochen
+      final t = i / steps;
+      final v = from + (to - from) * _easeOutCubic(t);
+      try {
+        await _player.setVolume(v);
+      } catch (_) {
+        // Ignoriere einzelne Set-Fehler (z. B. wenn Player wechselt)
+      }
+      if (i < steps) {
+        await Future.delayed(Duration(milliseconds: stepMs));
+      }
+    }
+
+    // Ziel laut & deutlich setzen (Numerik-Drift vermeiden)
+    try {
+      if (!_disposed) await _player.setVolume(to);
+    } catch (_) {}
+  }
+
+  double _easeOutCubic(double t) {
+    final p = t - 1.0;
+    return p * p * p + 1.0;
+  }
+
+  @override
   void dispose() {
+    _disposed = true;
+    _cancelFades();
     _player.dispose();
     super.dispose();
   }
 }
 
-/// SoundscapeVolumeWidget: Schöner Lautstärke-Regler für Einstellungen
+/// SoundscapeVolumeWidget
+/// ----------------------
+/// Barrierearmer Lautstärkeregler mit optischem Feedback.
+/// – Semantics/Tooltip für Screenreader
+/// – Live-Höhenmeter (sanfte Reaktion)
 class SoundscapeVolumeWidget extends StatelessWidget {
   final SoundscapeManager manager;
 
@@ -94,21 +227,52 @@ class SoundscapeVolumeWidget extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    return Row(
-      children: [
-        const Icon(Icons.volume_down, color: Color(0xFF365486)),
-        Expanded(
-          child: Slider(
-            min: 0,
-            max: 1,
-            value: manager.volume,
-            onChanged: (v) => manager.setVolume(v),
-            activeColor: const Color(0xFFA5CBA1),
-            inactiveColor: Colors.grey[300],
+    const accent = Color(0xFFA5CBA1);
+    const ink = Color(0xFF365486);
+
+    return Semantics(
+      label: 'Lautstärkeregler für Klanglandschaft',
+      child: Row(
+        children: [
+          const Icon(Icons.volume_down, color: ink),
+          Expanded(
+            child: Slider(
+              min: 0,
+              max: 1,
+              value: manager.volume.clamp(0.0, 1.0) as double, // cast für Analyzer
+              onChanged: (v) {
+                // bewusst ohne await – UI soll nicht blocken
+                manager.setVolume(v, duration: 0.25);
+              },
+              activeColor: accent,
+              inactiveColor: Colors.black12,
+              semanticFormatterCallback: (v) {
+                final p = ((v.clamp(0.0, 1.0)) * 100).round();
+                return 'Lautstärke $p Prozent';
+              },
+            ),
+          ),
+          const Icon(Icons.volume_up, color: ink),
+          // Visuelles Pegel-Feedback (ohne Text, rein dekorativ)
+          AnimatedContainer(
+            duration: const Duration(milliseconds: 220),
+            width: 24,
+            height: 10 + (manager.volume.clamp(0.0, 1.0) as double) * 18,
+            margin: const EdgeInsets.only(left: 8),
+            decoration: BoxDecoration(
+              color: accent.withOpacity(0.38),
+              borderRadius: BorderRadius.circular(7),
+              boxShadow: [
+                if (manager.volume > 0.01)
+                  BoxShadow(
+                    color: ink.withOpacity(0.17 + manager.volume * 0.2),
+                    blurRadius: 4 + manager.volume * 8,
+                  ),
+              ],
+            ),
           ),
-        ),
-        const Icon(Icons.volume_up, color: Color(0xFF365486)),
-      ],
+        ],
+      ),
     );
   }
 }
diff --git a/zen_project1337/lib/data/mood_entry.dart b/zen_project1337/lib/data/mood_entry.dart
index 68d7120..939949c 100644
--- a/zen_project1337/lib/data/mood_entry.dart
+++ b/zen_project1337/lib/data/mood_entry.dart
@@ -1,104 +1,354 @@
 // lib/data/mood_entry.dart
-import 'package:flutter/material.dart';
+//
+// MoodEntry — ZenYourself (Next-Gen, UI-agnostisch)
+// -------------------------------------------------
+// • Schlankes, zukunftsfestes Datenmodell für Stimmungseinträge
+// • Null-safe, tolerantes JSON (Millis/Sekunden/ISO, int/double/String)
+// • Mood clamping (0..4), Whitespace-Cleanups
+// • Helpers: dayTag (lokal), emoji, label (DE/EN), CSV-Export
+// • Converter für Journal-Labels (z. B. „Wütend“, „Ruhig“, „Glücklich“)
+// • UI-agnostisch (nur dart:ui Color) + Backward-Compat-Getter:
+//   - moodLabel  (DE)  → für ältere Aufrufer
+//   - moodColor  (Color) alias auf color
+
+import 'dart:ui' show Color;
 
-/// Datenmodell für einen Stimmungseintrag in ZenYourself.
-/// Nutzt: JSON, lokale Speicherung, Export, Heatmap, Analytics.
-/// Oxford/Champions Edition: inkl. Helper für Farben, Labels, Emojis, etc.
 class MoodEntry {
-  /// Zeitstempel des Eintrags (UTC, inkl. Zeitzone)
+  /// Zeitpunkt der Stimmungserfassung (UTC empfohlen).
   final DateTime timestamp;
 
-  /// Mood-Skala: 0 = very low, 4 = very high
+  /// Zen-Skala: 0 = sehr schlecht … 4 = sehr gut.
   final int moodScore;
 
-  /// Optional: Nutzer-Notiz zur Stimmung
+  /// Optional: Eigene Notiz (kurzer Tagebuchsatz).
   final String? note;
 
-  /// Optional: Zusatzinfos, z.B. Audiofile, Tags, Custom-Label
+  /// Optional: Tag/Label (z. B. „Arbeit“, „Therapie“, „Urlaub“).
   final String? extra;
 
+  /// Optional: AI-Kurzfazit / emotionale Resonanz.
+  final String? aiSummary;
+
   MoodEntry({
     required this.timestamp,
-    required this.moodScore,
-    this.note,
-    this.extra,
-  });
+    required int moodScore,
+    String? note,
+    String? extra,
+    String? aiSummary,
+  })  : moodScore = _clampMood(moodScore),
+        note = _clean(note),
+        extra = _clean(extra),
+        aiSummary = _clean(aiSummary);
 
-  /// Factory für Import aus JSON (z.B. Cloud-Export, lokale Datei)
+  // -----------------------
+  // JSON (tolerant & schlank)
+  // -----------------------
   factory MoodEntry.fromJson(Map<String, dynamic> json) => MoodEntry(
-        timestamp: DateTime.parse(json['timestamp'] as String),
-        moodScore: json['moodScore'] as int,
+        timestamp: _parseDate(json['timestamp'] ?? json['ts'] ?? json['createdAt']),
+        moodScore: _toInt(json['moodScore']) ?? 2,
         note: json['note'] as String?,
         extra: json['extra'] as String?,
+        aiSummary: json['aiSummary'] as String?,
       );
 
-  /// Export als JSON (für lokale Speicherung, API oder Export)
-  Map<String, dynamic> toJson() => {
-        'timestamp': timestamp.toIso8601String(),
-        'moodScore': moodScore,
-        'note': note,
-        'extra': extra,
-      };
+  Map<String, dynamic> toJson() {
+    final map = <String, dynamic>{
+      'timestamp': timestamp.toIso8601String(),
+      'moodScore': moodScore,
+      'note': note,
+      'extra': extra,
+      'aiSummary': aiSummary,
+    };
+    map.removeWhere((_, v) => v == null);
+    return map;
+  }
 
-  /// Day-Tag für Heatmap oder Analytics
-  String get dayTag =>
-      "${timestamp.year}-${timestamp.month.toString().padLeft(2, '0')}-${timestamp.day.toString().padLeft(2, '0')}";
+  /// Utility: Liste tolerant parsen.
+  static List<MoodEntry> listFromJson(Iterable<dynamic>? arr) {
+    if (arr == null) return const [];
+    return [
+      for (final e in arr)
+        if (e is Map<String, dynamic>) MoodEntry.fromJson(e)
+    ];
+  }
+
+  // -----------------------
+  // Derivative / UI-neutrale Helpers
+  // -----------------------
+
+  /// Gruppierungstag in Lokalzeit (YYYY-MM-DD) – für Heatmaps/Timeline.
+  String get dayTag {
+    final local = timestamp.toLocal();
+    return '${local.year.toString().padLeft(4, '0')}-'
+        '${local.month.toString().padLeft(2, '0')}-'
+        '${local.day.toString().padLeft(2, '0')}';
+  }
 
-  /// Farbwahl für Heatmap, Mood-Ringe, etc. (wissenschaftlich abgestuft)
-  Color get moodColor {
+  /// Beschreibendes Label (DE).
+  String get moodLabelDe {
     switch (moodScore) {
       case 0:
-        return const Color(0xFFB2B2B2); // Very low
+        return 'Sehr schlecht';
       case 1:
-        return const Color(0xFFFFD580); // Low (Gold, warm)
+        return 'Schlecht';
       case 2:
-        return const Color(0xFFA5CBA1); // Neutral/Zen Green
+        return 'Neutral';
       case 3:
-        return const Color(0xFF5F7161); // Positive (dunkler Jade)
+        return 'Gut';
       case 4:
-        return const Color(0xFF002147); // Very high (Oxford Blue)
+        return 'Sehr gut';
       default:
-        return Colors.grey;
+        return 'Unbekannt';
     }
   }
 
-  /// Stimmung als Text-Label (für Dashboard, Analytics, Barrierefreiheit)
-  String get moodLabel {
+  /// Beschreibendes Label (EN).
+  String get moodLabelEn {
     switch (moodScore) {
       case 0:
-        return "Sehr niedrig";
+        return 'Very bad';
       case 1:
-        return "Niedrig";
+        return 'Bad';
       case 2:
-        return "Neutral";
+        return 'Neutral';
       case 3:
-        return "Positiv";
+        return 'Good';
       case 4:
-        return "Hoch";
+        return 'Very good';
       default:
-        return "Unbekannt";
+        return 'Unknown';
     }
   }
 
-  /// Passendes Emoji (spielerisch für Mood-UI, kann ausgebaut werden)
+  /// Backward-Compat: von älteren Call-Sites erwarteter Getter.
+  /// Wir wählen DE als Standard.
+  String get moodLabel => moodLabelDe;
+
+  /// Emoji – synchron zur Heatmap (Wetter-Metapher).
   String get emoji {
     switch (moodScore) {
       case 0:
-        return "🌧️";
+        return '🌫️';
       case 1:
-        return "🌥️";
+        return '🌦️';
       case 2:
-        return "⛅";
+        return '⛅';
       case 3:
-        return "🌤️";
+        return '🌤️';
       case 4:
-        return "☀️";
+        return '🌞';
       default:
-        return "❓";
+        return '…';
     }
   }
 
-  /// Optionale Helper für weitere Analytics (Tagging, Auswertung)
+  /// Brand-neutrale Farbskala (optional für Call-Sites).
+  Color get color {
+    switch (moodScore) {
+      case 0:
+        return const Color(0xFFD0DFE2); // Nebelgrau
+      case 1:
+        return const Color(0xFFE9E4CC); // Pastell-Sand
+      case 2:
+        return const Color(0xFFF7EDD6); // Sanftbeige
+      case 3:
+        return const Color(0xFFDFF2E6); // Hellgrün
+      case 4:
+        return const Color(0xFFC2E5CF); // Zen-Grün
+      default:
+        return const Color(0xFFEFEFEF);
+    }
+  }
+
+  /// Backward-Compat: ältere Screens greifen auf `moodColor` zu.
+  Color get moodColor => color;
+
+  // Schnelle Auswertung
   bool get isPositive => moodScore >= 3;
   bool get isNegative => moodScore <= 1;
+  bool get isNeutral => moodScore == 2;
+
+  // -----------------------
+  // CSV (sicher escapen)
+  // -----------------------
+  String toCsv() => [
+        _csv(timestamp.toIso8601String()),
+        moodScore.toString(),
+        _csv(note),
+        _csv(extra),
+        _csv(aiSummary),
+      ].join(',');
+
+  // -----------------------
+  // Factorys / Mapping
+  // -----------------------
+
+  /// Demo-Generator für Previews.
+  static MoodEntry demo(String key) {
+    final now = DateTime.now().toUtc();
+    switch (key) {
+      case 'sun':
+        return MoodEntry(timestamp: now, moodScore: 4, note: 'Sehr gut (Demo)');
+      case 'cloud':
+        return MoodEntry(timestamp: now, moodScore: 2, note: 'Neutral (Demo)');
+      case 'rain':
+        return MoodEntry(timestamp: now, moodScore: 1, note: 'Schlecht (Demo)');
+      case 'leaf':
+        return MoodEntry(timestamp: now, moodScore: 3, note: 'Gut (Demo)');
+      case 'swirl':
+        return MoodEntry(timestamp: now, moodScore: 0, note: 'Sehr schlecht (Demo)');
+      default:
+        return MoodEntry(timestamp: now, moodScore: 2, note: 'Demo');
+    }
+  }
+
+  /// Mapping freier Label → Score (DE+EN Varianten, **kein const**, eindeutige Keys).
+  static MoodEntry fromLabel(String label, {DateTime? atUtc}) {
+    final now = (atUtc ?? DateTime.now().toUtc());
+    final normalized = label.trim();
+    final Map<String, int> map = {
+      // DE
+      'Sehr schlecht': 0,
+      'Regnerisch': 0,
+      'Schlecht': 1,
+      'Wolkig': 1,
+      'Neutral': 2,
+      'Gemischt': 2,
+      'Gut': 3,
+      'Grün': 3,
+      'Sehr gut': 4,
+      'Sonnig': 4,
+      // EN
+      'Very bad': 0,
+      'Rainy': 0,
+      'Bad': 1,
+      'Cloudy': 1,
+      'Mixed': 2,
+      'Good': 3,
+      'Green': 3,
+      'Very good': 4,
+      'Sunny': 4,
+    };
+    final score = map[normalized] ?? 2;
+    return MoodEntry(timestamp: now, moodScore: score, note: normalized);
+  }
+
+  /// Mapping unserer **Journal-Mood-Labels** (MoodScreen) → Score.
+  /// Erwartete Labels: „Wütend“, „Gestresst“, „Traurig“, „Neutral“, „Ruhig“, „Glücklich“.
+  static int scoreFromJournalLabel(String label) {
+    switch (label.trim()) {
+      case 'Wütend':
+        return 0; // bewusst „sehr schlecht“
+      case 'Gestresst':
+      case 'Traurig':
+        return 1;
+      case 'Neutral':
+        return 2;
+      case 'Ruhig':
+        return 3;
+      case 'Glücklich':
+        return 4;
+      default:
+        return 2;
+    }
+  }
+
+  // -----------------------
+  // Mutation / Sort / Equality
+  // -----------------------
+  MoodEntry copyWith({
+    DateTime? timestamp,
+    int? moodScore,
+    String? note,
+    String? extra,
+    String? aiSummary,
+  }) =>
+      MoodEntry(
+        timestamp: timestamp ?? this.timestamp,
+        moodScore: moodScore ?? this.moodScore,
+        note: note ?? this.note,
+        extra: extra ?? this.extra,
+        aiSummary: aiSummary ?? this.aiSummary,
+      );
+
+  /// Für Timeline/Heatmap-Sortierung (neueste zuerst).
+  int compareTo(MoodEntry other) => other.timestamp.compareTo(timestamp);
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is MoodEntry &&
+          runtimeType == other.runtimeType &&
+          timestamp == other.timestamp &&
+          moodScore == other.moodScore &&
+          note == other.note &&
+          extra == other.extra &&
+          aiSummary == other.aiSummary;
+
+  @override
+  int get hashCode => Object.hash(
+        timestamp,
+        moodScore,
+        note,
+        extra,
+        aiSummary,
+      );
+
+  // ======================
+  // Intern: Normalisierung
+  // ======================
+
+  static int _clampMood(int v) {
+    if (v < 0) return 0;
+    if (v > 4) return 4;
+    return v;
+  }
+
+  static String? _clean(String? v) {
+    if (v == null) return null;
+    final t = v.replaceAll(RegExp(r'\s+'), ' ').trim();
+    return t.isEmpty ? null : t;
+  }
+
+  static DateTime _parseDate(dynamic v) {
+    if (v is DateTime) return v.toUtc();
+
+    if (v is num) {
+      final n = v.toInt().abs();
+      // Sekunden vs Millisekunden Heuristik
+      if (n <= 9999999999) {
+        return DateTime.fromMillisecondsSinceEpoch(n * 1000, isUtc: true);
+      } else {
+        return DateTime.fromMillisecondsSinceEpoch(n, isUtc: true);
+      }
+    }
+
+    if (v is String) {
+      final s = v.trim();
+      // Numerische Strings zulassen
+      final asNum = int.tryParse(s);
+      if (asNum != null) return _parseDate(asNum);
+      try {
+        return DateTime.parse(s).toUtc();
+      } catch (_) {
+        return DateTime.now().toUtc();
+      }
+    }
+
+    return DateTime.now().toUtc();
+  }
+
+  static int? _toInt(dynamic v) {
+    if (v == null) return null;
+    if (v is int) return v;
+    if (v is double) return v.toInt();
+    return int.tryParse(v.toString());
+  }
+
+  static String _csv(String? s) {
+    final v = s ?? '';
+    // Escape doppelte Anführungszeichen nach RFC 4180
+    final escaped = v.replaceAll('"', '""');
+    return '"$escaped"';
+  }
 }
diff --git a/zen_project1337/lib/data/reflection_entry.dart b/zen_project1337/lib/data/reflection_entry.dart
index 8b8a038..5fdd858 100644
--- a/zen_project1337/lib/data/reflection_entry.dart
+++ b/zen_project1337/lib/data/reflection_entry.dart
@@ -1,101 +1,764 @@
 // lib/data/reflection_entry.dart
+//
+// ReflectionEntry — v5-kompatibles Datenmodell (rückwärtskompatibel)
+// ------------------------------------------------------------------
+// • Bestehende Felder bleiben erhalten (timestamp, content, moodScore, …)
+// • NEU (optional): analysis (Spiegelung/Frage, SORC, Risk), answer,
+//   challenge (Mini-Challenge), links (z. B. storyId), inputMeta.
+// • `toJsonV5()` exportiert direkt den v5-Union-Shape für JournalEntry:
+//   { type: "reflection", input, analysis, answer, challenge, mood, links, …, reflection }
+//
+// Sicherheit/Robustheit
+// • Null-safe, Normalisierung von Text/Tags, Mood clamped (0–4)
+// • Tolerante JSON-Parser für alte/alias Feldnamen
+//
+// Zeit-Handling
+// • Diverse Eingabeformate (ISO, Sekunden/Millis/Mikros) → lokale Zeit.
+//   So stimmen Tages-Gruppierungen mit der UI.
 
 import 'package:flutter/material.dart';
+import '../../shared/zen_style.dart'; // ZenColors
 
-/// Modell für einen einzelnen Reflexions-Eintrag.
-/// Champions Level: Audio/Text, Stimmungslink, KI-Auswertung, Tagging.
 class ReflectionEntry {
-  /// Wann wurde reflektiert? (UTC, inkl. Zeitzone)
+  // ===== Kern (bestehend) =====================================================
+  final String id;
   final DateTime timestamp;
-
-  /// Was wurde reflektiert? (Text der Eingabe oder Transkript der Voice-Aufnahme)
   final String content;
-
-  /// Optional: Link zum MoodEntry (für Verbindung Stimmung <-> Reflektion)
   final String? moodDayTag;
-
-  /// Optional: Stimmungswert beim Reflektieren (falls kein MoodEntry)
-  final int? moodScore;
-
-  /// Optional: Name oder Icon für die Reflektions-Kategorie (z.B. Dankbarkeit, Sorgen, Ziel)
+  final int? moodScore; // 0..4
   final String? category;
-
-  /// Optional: Tags für Filter/Suche (z.B. ["Beruf", "Gesundheit"])
-  final List<String>? tags;
-
-  /// Optional: Voice-Aufnahme-URL/Pfad
+  final List<String> tags;
   final String? audioPath;
-
-  /// Optional: KI-Analyse-Ergebnis (z.B. dominant detected emotion, summary, Insight-Score)
   final String? aiSummary;
-
-  /// Optional: Link/Quelle der Inspiration (z.B. Zen-Koan, Frage-ID, Challenge)
   final String? source;
 
+  // ===== NEU: v5-Felder (optional) ============================================
+  final InputMeta? input; // mode/text/duration
+  final Analysis? analysis; // Spiegelung + 1 Frage + Risk + SORC + Levers
+  final Answer? answer; // Antwort des Nutzers (voice/text)
+  final MiniChallenge? challenge; // Micro-Challenge ≤ 2 Min
+  final ReflectionLinks? links; // z. B. storyId
+  final String? moodNote; // Freitext zum Mood (separat von score)
+
   ReflectionEntry({
+    String? id,
     required this.timestamp,
-    required this.content,
+    required String content,
     this.moodDayTag,
-    this.moodScore,
+    int? moodScore,
     this.category,
-    this.tags,
+    List<String>? tags,
     this.audioPath,
     this.aiSummary,
     this.source,
-  });
+    this.input,
+    this.analysis,
+    this.answer,
+    this.challenge,
+    this.links,
+    this.moodNote,
+  })  : id = id ?? _makeId(timestamp, content),
+        content = _sanitizeContent(content),
+        moodScore = _clampMood(moodScore),
+        tags = _normalizeTags(tags);
 
-  /// Factory: Import aus JSON
-  factory ReflectionEntry.fromJson(Map<String, dynamic> json) => ReflectionEntry(
-        timestamp: DateTime.parse(json['timestamp'] as String),
-        content: json['content'] as String,
-        moodDayTag: json['moodDayTag'] as String?,
-        moodScore: json['moodScore'] as int?,
-        category: json['category'] as String?,
-        tags: (json['tags'] as List?)?.map((e) => e as String).toList(),
-        audioPath: json['audioPath'] as String?,
-        aiSummary: json['aiSummary'] as String?,
-        source: json['source'] as String?,
-      );
+  // ===== Fabriken =============================================================
 
-  /// Export: to JSON (z.B. für Export, Cloud-Sync)
-  Map<String, dynamic> toJson() => {
-        'timestamp': timestamp.toIso8601String(),
-        'content': content,
-        'moodDayTag': moodDayTag,
-        'moodScore': moodScore,
-        'category': category,
-        'tags': tags,
-        'audioPath': audioPath,
-        'aiSummary': aiSummary,
-        'source': source,
+  /// JSON → Model (tolerant bei Typen & Alias-Feldern)
+  factory ReflectionEntry.fromJson(Map<String, dynamic> json) {
+    final ts = _parseDate(
+      json['timestamp'] ??
+          json['createdAt'] ??
+          json['created_at'] ??
+          json['ts'] ??
+          json['time'] ??
+          json['date'],
+    );
+
+    final content =
+        _sanitizeContent((json['content'] ?? json['text'] ?? '').toString());
+
+    final rawId = (json['id'] ?? '').toString().trim();
+    final id = rawId.isEmpty ? _makeId(ts, content) : rawId;
+
+    // v5-kompatible Blöcke (optional)
+    final input = InputMeta.fromMaybe(
+      json['input'],
+      fallbackContent: content,
+      audioPath: json['audioPath'] ?? json['audio_path'],
+    );
+    final analysis = Analysis.fromMaybe(json['analysis']);
+    final answer = Answer.fromMaybe(json['answer']);
+    final challenge = MiniChallenge.fromMaybe(json['challenge']);
+    final links = ReflectionLinks.fromMaybe(json['links']);
+
+    return ReflectionEntry(
+      id: id,
+      timestamp: ts,
+      content: content,
+      moodDayTag: (json['moodDayTag'] ?? json['mood_day_tag']) as String?,
+      moodScore: _clampMood(_toInt(json['moodScore'] ?? json['mood_score'])),
+      category: _asTrimmedOrNull(json['category']),
+      tags: _coerceTags(json['tags']),
+      audioPath: _asTrimmedOrNull(json['audioPath'] ?? json['audio_path']),
+      aiSummary: _asTrimmedOrNull(json['aiSummary'] ?? json['ai_summary']),
+      source: _asTrimmedOrNull(json['source']),
+      input: input,
+      analysis: analysis,
+      answer: answer,
+      challenge: challenge,
+      links: links,
+      moodNote:
+          _asTrimmedOrNull(json['moodNote'] ?? json['mood_note'] ?? json['moodComment']),
+    );
+  }
+
+  /// Alias
+  factory ReflectionEntry.fromMap(Map<String, dynamic> map) =>
+      ReflectionEntry.fromJson(map);
+
+  // ===== Serialisierung =======================================================
+
+  /// Model → JSON (klassisch + neue optionale v5-Blöcke)
+  Map<String, dynamic> toJson() {
+    final map = <String, dynamic>{
+      'id': id,
+      'timestamp': timestamp.toIso8601String(),
+      'content': content,
+      'moodDayTag': moodDayTag,
+      'moodScore': moodScore,
+      'category': category,
+      'tags': tags,
+      'audioPath': audioPath,
+      'aiSummary': aiSummary,
+      'source': source,
+      if (input != null) 'input': input!.toJson(),
+      if (analysis != null) 'analysis': analysis!.toJson(),
+      if (answer != null) 'answer': answer!.toJson(),
+      if (challenge != null) 'challenge': challenge!.toJson(),
+      if (links != null) 'links': links!.toJson(),
+      if (moodNote != null) 'moodNote': moodNote,
+    };
+    map.removeWhere((_, v) => v == null);
+    return map;
+  }
+
+  /// Export im neuen v5-Union-Shape eines JournalEntry (type:"reflection")
+  Map<String, dynamic> toJsonV5() {
+    final mode = (input?.mode ??
+            (audioPath != null && audioPath!.trim().isNotEmpty ? 'voice' : 'text'))
+        .toString();
+
+    final moodObj =
+        (moodScore == null && (moodNote == null || moodNote!.isEmpty))
+            ? null
+            : {
+                if (moodScore != null) 'icon': moodScore,
+                if (moodNote != null && moodNote!.isNotEmpty) 'note': moodNote,
+              };
+
+    final map = <String, dynamic>{
+      'id': id,
+      'ts': timestamp.toIso8601String(),
+      'type': 'reflection',
+      'input': {
+        'mode': mode,
+        'content': content, // = erster Gedanke
+        if (input?.durationSec != null) 'duration_sec': input!.durationSec,
+      },
+      if (analysis != null) 'analysis': analysis!.toJson(),
+      if (answer != null) 'answer': answer!.toJson(),
+      if (challenge != null) 'challenge': challenge!.toJson(),
+      if (moodObj != null) 'mood': moodObj,
+      if (links != null) 'links': links!.toJson(),
+    };
+
+    // NEU: Reflection-Block (thought + 1 Legacy-Step + risk)
+    final refl = _toReflectionBlock();
+    if (refl.isNotEmpty) {
+      map['reflection'] = refl;
+    }
+
+    return map;
+  }
+
+  /// Reflection-Block erzeugen (thought + Step aus analysis/answer + risk)
+  Map<String, dynamic> _toReflectionBlock() {
+    final thought = content.trim().isEmpty ? null : content.trim();
+
+    final hasAny = (analysis?.mirror?.trim().isNotEmpty == true) ||
+        (analysis?.question?.trim().isNotEmpty == true) ||
+        (answer?.content?.trim().isNotEmpty == true);
+
+    final steps = <Map<String, dynamic>>[];
+    if (hasAny) {
+      final m = (analysis?.mirror ?? '').trim();
+      final q = (analysis?.question ?? '').trim();
+      final a = (answer?.content ?? '').trim();
+      final step = <String, dynamic>{
+        if (m.isNotEmpty) 'mirror': m,
+        if (q.isNotEmpty) 'question': q,
+        if (a.isNotEmpty) 'answer': a,
       };
+      if (step.isNotEmpty) steps.add(step);
+    }
 
-  /// Label für UI (wird automatisch gekürzt, fallback zu Kategorie oder Tages-Tag)
-  String get label =>
-      (content.length > 40 ? content.substring(0, 37) + "…" : content) ??
-      category ??
-      "Reflexion";
+    final String rl = (analysis?.riskLevel ?? '').toLowerCase().trim();
+    final bool? risk = rl.isEmpty ? null : (rl == 'high');
 
-  /// Schöne Datumsausgabe für Listen, Übersicht etc.
-  String get dateFormatted =>
-      "${timestamp.day.toString().padLeft(2, '0')}.${timestamp.month.toString().padLeft(2, '0')}.${timestamp.year}";
+    final out = <String, dynamic>{
+      if (thought != null) 'thought': thought,
+      if (steps.isNotEmpty) 'steps': steps,
+      if (risk != null) 'risk': risk,
+    };
+    return out;
+  }
+
+  // ===== UX-Helper ============================================================
+
+  /// Kurzes Label (erste Zeile des Inhalts; Fallback: Kategorie/„Reflexion“)
+  String get label {
+    final trimmed = content.trim();
+    if (trimmed.isNotEmpty) {
+      final singleLine = trimmed.replaceAll(RegExp(r'\s+'), ' ');
+      return singleLine.length > 44
+          ? '${singleLine.substring(0, 41)}…'
+          : singleLine;
+    }
+    return category ?? 'Reflexion';
+  }
 
-  /// Helper: Gibt die Stimmung farblich wieder (falls Mood gesetzt)
+  /// YYYY-MM-DD – nützlich für Gruppierungen/Joins
+  String get dayTag {
+    final ts = timestamp.toLocal();
+    return '${ts.year.toString().padLeft(4, '0')}-'
+        '${ts.month.toString().padLeft(2, '0')}-'
+        '${ts.day.toString().padLeft(2, '0')}';
+  }
+
+  /// dd.MM.yyyy
+  String get dateFormatted {
+    final ts = timestamp.toLocal();
+    return '${ts.day.toString().padLeft(2, '0')}.'
+        '${ts.month.toString().padLeft(2, '0')}.'
+        '${ts.year}';
+  }
+
+  /// HH:mm
+  String get timeFormatted {
+    final ts = timestamp.toLocal();
+    return '${ts.hour.toString().padLeft(2, '0')}:'
+        '${ts.minute.toString().padLeft(2, '0')}';
+  }
+
+  /// „Heute, HH:mm“ / „Gestern, HH:mm“ / „dd.MM.yyyy, HH:mm“
+  String get timestampFormatted {
+    final now = DateTime.now();
+    final ts = timestamp.toLocal();
+    final isSameDay =
+        now.year == ts.year && now.month == ts.month && now.day == ts.day;
+    final yesterday =
+        DateTime(now.year, now.month, now.day).subtract(const Duration(days: 1));
+    final isYesterday =
+        yesterday.year == ts.year && yesterday.month == ts.month && yesterday.day == ts.day;
+    if (isSameDay) return 'Heute, $timeFormatted';
+    if (isYesterday) return 'Gestern, $timeFormatted';
+    return '$dateFormatted, $timeFormatted';
+  }
+
+  /// Zen MoodColor für Timeline/Heatmaps (nutzt Compat-Colors)
   Color get moodColor {
-    if (moodScore == null) return Colors.grey[300]!;
+    if (moodScore == null) return ZenColors.cloud;
     switch (moodScore!) {
       case 0:
-        return const Color(0xFFB2B2B2);
+        return ZenColors.cherry;
       case 1:
-        return const Color(0xFFFFD580);
+        return ZenColors.gold;
       case 2:
-        return const Color(0xFFA5CBA1);
+        return ZenColors.bamboo;
       case 3:
-        return const Color(0xFF5F7161);
+        return ZenColors.jadeMid;
       case 4:
-        return const Color(0xFF002147);
+        return ZenColors.jade;
       default:
-        return Colors.grey;
+        return ZenColors.cloud;
     }
   }
+
+  /// Emoji passend zur Stimmung
+  String get moodEmoji {
+    if (moodScore == null) return '❓';
+    switch (moodScore!) {
+      case 0:
+        return '🌧️';
+      case 1:
+        return '🌥️';
+      case 2:
+        return '⛅';
+      case 3:
+        return '🌤️';
+      case 4:
+        return '☀️';
+      default:
+        return '❓';
+    }
+  }
+
+  /// „Vollständige Runde“ (Analyse+Frage vorhanden, Antwort vorhanden)
+  bool get isCompleteRound =>
+      (analysis?.question != null && analysis!.question!.trim().isNotEmpty) &&
+      (answer?.content != null && answer!.content!.trim().isNotEmpty);
+
+  /// Kleiner Vorschau-Snippet (z. B. für Listen/Chips)
+  String preview([int maxChars = 120]) {
+    final t = content.trim().replaceAll(RegExp(r'\s+'), ' ');
+    if (t.length <= maxChars) return t;
+    return '${t.substring(0, maxChars - 1)}…';
+  }
+
+  /// Tag-Helper
+  bool hasTag(String tag) => tags.contains(tag);
+
+  // ===== Mutationen / Equality ===============================================
+
+  ReflectionEntry copyWith({
+    String? id,
+    DateTime? timestamp,
+    String? content,
+    String? moodDayTag,
+    int? moodScore,
+    String? category,
+    List<String>? tags,
+    String? audioPath,
+    String? aiSummary,
+    String? source,
+    InputMeta? input,
+    Analysis? analysis,
+    Answer? answer,
+    MiniChallenge? challenge,
+    ReflectionLinks? links,
+    String? moodNote,
+  }) {
+    return ReflectionEntry(
+      id: id ?? this.id,
+      timestamp: timestamp ?? this.timestamp,
+      content: content != null ? _sanitizeContent(content) : this.content,
+      moodDayTag: moodDayTag ?? this.moodDayTag,
+      moodScore: _clampMood(moodScore ?? this.moodScore),
+      category: category ?? this.category,
+      tags: _normalizeTags(tags ?? this.tags),
+      audioPath: audioPath ?? this.audioPath,
+      aiSummary: aiSummary ?? this.aiSummary,
+      source: source ?? this.source,
+      input: input ?? this.input,
+      analysis: analysis ?? this.analysis,
+      answer: answer ?? this.answer,
+      challenge: challenge ?? this.challenge,
+      links: links ?? this.links,
+      moodNote: moodNote ?? this.moodNote,
+    );
+  }
+
+  int compareTo(ReflectionEntry other) => other.timestamp.compareTo(timestamp);
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is ReflectionEntry &&
+          runtimeType == other.runtimeType &&
+          id == other.id &&
+          timestamp == other.timestamp &&
+          content == other.content &&
+          moodDayTag == other.moodDayTag &&
+          moodScore == other.moodScore &&
+          category == other.category &&
+          _listEquals(tags, other.tags) &&
+          audioPath == other.audioPath &&
+          aiSummary == other.aiSummary &&
+          source == other.source &&
+          input == other.input &&
+          analysis == other.analysis &&
+          answer == other.answer &&
+          challenge == other.challenge &&
+          links == other.links &&
+          moodNote == other.moodNote;
+
+  @override
+  int get hashCode => Object.hash(
+        id,
+        timestamp,
+        content,
+        moodDayTag,
+        moodScore,
+        category,
+        Object.hashAll(tags),
+        audioPath,
+        aiSummary,
+        source,
+        input,
+        analysis,
+        answer,
+        challenge,
+        links,
+        moodNote,
+      );
+
+  // ===== Intern: Normalisierung ==============================================
+
+  static String _makeId(DateTime ts, String content) =>
+      '${ts.millisecondsSinceEpoch}_${content.hashCode}';
+
+  static String _sanitizeContent(String v) {
+    final t = v.trim().replaceAll(RegExp(r'[ \t]+'), ' ');
+    return t.isEmpty ? '—' : t;
+  }
+
+  static int? _clampMood(int? m) {
+    if (m == null) return null;
+    if (m < 0) return 0;
+    if (m > 4) return 4;
+    return m;
+  }
+
+  static List<String> _normalizeTags(List<String>? raw) {
+    if (raw == null) return const [];
+    final out = <String>[];
+    for (final r in raw) {
+      final t = r.toString().trim();
+      if (t.isEmpty) continue;
+      final clipped = t.length > 24 ? '${t.substring(0, 23)}…' : t;
+      if (!out.contains(clipped)) out.add(clipped);
+      if (out.length >= 8) break;
+    }
+    return List.unmodifiable(out);
+  }
+
+  /// Wandelt verschiedene Zeitrepräsentationen in **lokale** Zeit um.
+  static DateTime _parseDate(dynamic v) {
+    if (v == null) return DateTime.now();
+    if (v is DateTime) return v.toLocal();
+
+    // numerisch (Sekunden / Millisekunden / Mikrosekunden)
+    if (v is num) {
+      final n = v.toInt().abs();
+      if (n < 1000000000000) {
+        // Sekunden
+        return DateTime.fromMillisecondsSinceEpoch(n * 1000, isUtc: true).toLocal();
+      } else if (n < 10000000000000000) {
+        // Millisekunden
+        return DateTime.fromMillisecondsSinceEpoch(n, isUtc: true).toLocal();
+      } else {
+        // Mikrosekunden
+        return DateTime.fromMicrosecondsSinceEpoch(n, isUtc: true).toLocal();
+      }
+    }
+
+    // numerischer String?
+    if (v is String) {
+      final s = v.trim();
+      if (s.isEmpty) return DateTime.now();
+      if (RegExp(r'^\d+$').hasMatch(s)) {
+        return _parseDate(int.parse(s));
+      }
+      // ISO → DateTime.parse (kann UTC oder lokal sein), dann nach lokal
+      final parsed = DateTime.tryParse(s);
+      return (parsed ?? DateTime.now()).toLocal();
+    }
+
+    return DateTime.now();
+  }
+
+  static int? _toInt(dynamic v) {
+    if (v == null) return null;
+    if (v is int) return v;
+    if (v is double) return v.toInt();
+    return int.tryParse(v.toString());
+  }
+
+  static String? _asTrimmedOrNull(dynamic v) {
+    if (v == null) return null;
+    final s = v.toString().trim();
+    return s.isEmpty ? null : s;
+  }
+
+  static List<String> _coerceTags(dynamic v) {
+    if (v == null) return const [];
+    if (v is List) return v.map((e) => e?.toString() ?? '').toList();
+    if (v is String && v.trim().isNotEmpty) {
+      // CSV oder ein einzelner Tag
+      final parts = v.split(',').map((e) => e.trim()).where((e) => e.isNotEmpty).toList();
+      return parts;
+    }
+    return const [];
+  }
+
+  static bool _listEquals(List? a, List? b) {
+    if (a == null || b == null) return identical(a, b);
+    if (identical(a, b)) return true;
+    if (a.length != b.length) return false;
+    for (var i = 0; i < a.length; i++) {
+      if (a[i] != b[i]) return false;
+    }
+    return true;
+  }
+}
+
+// ============================================================================
+// v5-Untermodelle (leichtgewichtig, ohne externe Abhängigkeiten)
+// ============================================================================
+
+class InputMeta {
+  /// 'voice' | 'text' | 'import' | …
+  final String? mode;
+  final int? durationSec;
+
+  const InputMeta({this.mode, this.durationSec});
+
+  Map<String, dynamic> toJson() {
+    final map = <String, dynamic>{
+      if (mode != null) 'mode': mode,
+      if (durationSec != null) 'duration_sec': durationSec,
+    };
+    return map;
+  }
+
+  static InputMeta? fromMaybe(dynamic v, {String? fallbackContent, dynamic audioPath}) {
+    if (v == null && (fallbackContent == null && audioPath == null)) return null;
+    if (v is Map<String, dynamic>) {
+      return InputMeta(
+        mode: ReflectionEntry._asTrimmedOrNull(v['mode']),
+        durationSec: ReflectionEntry._toInt(v['duration_sec']),
+      );
+    }
+    // Fallback-Heuristik: audioPath → voice, sonst text
+    final hasAudio = (audioPath?.toString().trim().isNotEmpty ?? false);
+    return InputMeta(mode: hasAudio ? 'voice' : 'text', durationSec: null);
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is InputMeta &&
+          runtimeType == other.runtimeType &&
+          mode == other.mode &&
+          durationSec == other.durationSec;
+
+  @override
+  int get hashCode => Object.hash(mode, durationSec);
+}
+
+class Analysis {
+  final Sorc? sorc;
+  final List<String> levers; // z. B. ["Gedanken","Gefühle"]
+  final String? mirror;
+  final String? question; // ≤ 30 Wörter
+  final String? riskLevel; // none | mild | high
+
+  const Analysis({
+    this.sorc,
+    this.levers = const [],
+    this.mirror,
+    this.question,
+    this.riskLevel,
+  });
+
+  Map<String, dynamic> toJson() {
+    final map = <String, dynamic>{
+      if (sorc != null) 'sorc': sorc!.toJson(),
+      if (levers.isNotEmpty) 'levers': levers,
+      if (mirror != null) 'mirror': mirror,
+      if (question != null) 'question': question,
+      if (riskLevel != null) 'risk_level': riskLevel,
+    };
+    return map;
+  }
+
+  static Analysis? fromMaybe(dynamic v) {
+    if (v == null) return null;
+    if (v is Map<String, dynamic>) {
+      return Analysis(
+        sorc: Sorc.fromMaybe(v['sorc']),
+        levers: (v['levers'] is List)
+            ? (v['levers'] as List).map((e) => e?.toString() ?? '').toList()
+            : const [],
+        mirror: ReflectionEntry._asTrimmedOrNull(v['mirror']),
+        question: ReflectionEntry._asTrimmedOrNull(v['question']),
+        riskLevel: ReflectionEntry._asTrimmedOrNull(v['risk_level']),
+      );
+    }
+    return null;
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is Analysis &&
+          runtimeType == other.runtimeType &&
+          sorc == other.sorc &&
+          ReflectionEntry._listEquals(levers, other.levers) &&
+          mirror == other.mirror &&
+          question == other.question &&
+          riskLevel == other.riskLevel;
+
+  @override
+  int get hashCode =>
+      Object.hash(sorc, Object.hashAll(levers), mirror, question, riskLevel);
+}
+
+class Sorc {
+  final String? stimulus;
+  final String? organism;
+  final String? response;
+  final String? consequence;
+
+  const Sorc({this.stimulus, this.organism, this.response, this.consequence});
+
+  Map<String, dynamic> toJson() => {
+        if (stimulus != null) 'stimulus': stimulus,
+        if (organism != null) 'organism': organism,
+        if (response != null) 'response': response,
+        if (consequence != null) 'consequence': consequence,
+      };
+
+  static Sorc? fromMaybe(dynamic v) {
+    if (v == null) return null;
+    if (v is Map<String, dynamic>) {
+      return Sorc(
+        stimulus: ReflectionEntry._asTrimmedOrNull(v['stimulus']),
+        organism: ReflectionEntry._asTrimmedOrNull(v['organism']),
+        response: ReflectionEntry._asTrimmedOrNull(v['response']),
+        consequence: ReflectionEntry._asTrimmedOrNull(v['consequence']),
+      );
+    }
+    return null;
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is Sorc &&
+          runtimeType == other.runtimeType &&
+          stimulus == other.stimulus &&
+          organism == other.organism &&
+          response == other.response &&
+          consequence == other.consequence;
+
+  @override
+  int get hashCode => Object.hash(stimulus, organism, response, consequence);
+}
+
+class Answer {
+  final String? content;
+  final String? mode; // 'voice' | 'text'
+
+  const Answer({this.content, this.mode});
+
+  Map<String, dynamic> toJson() => {
+        if (content != null) 'content': content,
+        if (mode != null) 'mode': mode,
+      };
+
+  static Answer? fromMaybe(dynamic v) {
+    if (v == null) return null;
+    if (v is Map<String, dynamic>) {
+      return Answer(
+        content: ReflectionEntry._asTrimmedOrNull(v['content']),
+        mode: ReflectionEntry._asTrimmedOrNull(v['mode']),
+      );
+    }
+    return null;
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is Answer &&
+          runtimeType == other.runtimeType &&
+          content == other.content &&
+          mode == other.mode;
+
+  @override
+  int get hashCode => Object.hash(content, mode);
+}
+
+class MiniChallenge {
+  final String? id;
+  final String? title; // z. B. "90 Sek Pause"
+  final String? kind; // "micro"
+  final int? durationSec; // ≤ 120
+  final String? status; // offered | accepted | done
+
+  const MiniChallenge({
+    this.id,
+    this.title,
+    this.kind,
+    this.durationSec,
+    this.status,
+  });
+
+  Map<String, dynamic> toJson() => {
+        if (id != null) 'id': id,
+        if (title != null) 'title': title,
+        if (kind != null) 'kind': kind,
+        if (durationSec != null) 'duration_sec': durationSec,
+        if (status != null) 'status': status,
+      };
+
+  static MiniChallenge? fromMaybe(dynamic v) {
+    if (v == null) return null;
+    if (v is Map<String, dynamic>) {
+      return MiniChallenge(
+        id: ReflectionEntry._asTrimmedOrNull(v['id']),
+        title: ReflectionEntry._asTrimmedOrNull(v['title']),
+        kind: ReflectionEntry._asTrimmedOrNull(v['kind']),
+        durationSec: ReflectionEntry._toInt(v['duration_sec']),
+        status: ReflectionEntry._asTrimmedOrNull(v['status']),
+      );
+    }
+    return null;
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is MiniChallenge &&
+          runtimeType == other.runtimeType &&
+          id == other.id &&
+          title == other.title &&
+          kind == other.kind &&
+          durationSec == other.durationSec &&
+          status == other.status;
+
+  @override
+  int get hashCode => Object.hash(id, title, kind, durationSec, status);
+}
+
+class ReflectionLinks {
+  final String? storyId;
+
+  const ReflectionLinks({this.storyId});
+
+  Map<String, dynamic> toJson() => {
+        if (storyId != null) 'story_id': storyId,
+      };
+
+  static ReflectionLinks? fromMaybe(dynamic v) {
+    if (v == null) return null;
+    if (v is Map<String, dynamic>) {
+      return ReflectionLinks(
+        storyId: ReflectionEntry._asTrimmedOrNull(v['story_id']),
+      );
+    }
+    return null;
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is ReflectionLinks &&
+          runtimeType == other.runtimeType &&
+          storyId == other.storyId;
+
+  @override
+  int get hashCode => storyId.hashCode;
 }
diff --git a/zen_project1337/lib/features/accessibility/a11y_utils.dart b/zen_project1337/lib/features/accessibility/a11y_utils.dart
index 286a49d..f3d51f7 100644
--- a/zen_project1337/lib/features/accessibility/a11y_utils.dart
+++ b/zen_project1337/lib/features/accessibility/a11y_utils.dart
@@ -1,61 +1,163 @@
 // lib/features/accessibility/a11y_utils.dart
+//
+// ZenYourself • Accessibility Utils (safe-by-default)
+// ---------------------------------------------------
+// • Keine Namenskollision mit Color-Blind-Palette (eigener Klassenname)
+// • Kontrast-Helpers (WCAG), dynamische On-Color, Reduced-Motion-Hinweis
+// • Semantik-Werkzeuge (Announce), fokusfreundliche Text-Komponente
+// • Defensive Defaults für sensible Zielgruppen
+
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart'; // <- nötig für SemanticsService.announce
+import 'package:flutter/semantics.dart'; // <-- für SemanticsService.announce
 import 'dart:math' as math;
 
-/// AccessibilityPalette: Farbpaletten für verschiedene Modi (normal, color-blind, dark)
-class AccessibilityPalette {
+/// ===================
+/// ZEN ACCESSIBILITY THEME
+/// ===================
+///
+/// Hinweis: Diese Datei definiert bewusst **ZenA11yPalette**, um eine
+/// Kollision mit der in `color_blind_mode.dart` definierten
+/// `AccessibilityPalette` zu vermeiden.
+class ZenA11yPalette {
   final bool isColorBlind;
   final bool isDark;
+  final bool isHighContrast;
+  final bool reduceMotion;
+
+  const ZenA11yPalette({
+    this.isColorBlind = false,
+    this.isDark = false,
+    this.isHighContrast = false,
+    this.reduceMotion = false,
+  });
 
-  AccessibilityPalette({this.isColorBlind = false, this.isDark = false});
+  // Zen Brand (konservativ, beruhigende Töne)
+  static const _zenJade      = Color(0xFF0B3D2E);
+  static const _zenJadeLight = Color(0xFF386F5B);
+  static const _zenWhite     = Color(0xFFFDFCF6);
+  static const _zenGold      = Color(0xFFFFD48A);
 
   Color get primary =>
-      isDark ? const Color(0xFFF8F9FB) : (isColorBlind ? const Color(0xFF1B263B) : const Color(0xFF002147));
-  Color get accent =>
-      isColorBlind ? const Color(0xFFAD7F27) : const Color(0xFF365486);
-  Color get background =>
-      isDark ? const Color(0xFF23272F) : const Color(0xFFF8F9FB);
-  Color get positive =>
-      isColorBlind ? const Color(0xFFAD7F27) : const Color(0xFFA5CBA1);
+      isDark ? _zenWhite
+      : isColorBlind ? const Color(0xFF1B263B)
+      : _zenJade;
+
+  Color get accent => isColorBlind ? _zenGold : _zenJadeLight;
+
+  Color get background => isDark ? const Color(0xFF23272F) : _zenWhite;
+
+  Color get positive => isColorBlind ? _zenGold : const Color(0xFFA5CBA1);
+
   Color get error => const Color(0xFFD7263D);
 
-  static AccessibilityPalette of(BuildContext context) {
-    final inherited = context.dependOnInheritedWidgetOfExactType<_A11yPaletteProvider>();
-    return inherited?.palette ?? AccessibilityPalette();
+  Color get border => isHighContrast ? Colors.black : _zenJadeLight.withOpacity(0.14);
+
+  /// Kontrastfreundliche Textfarbe zu einem Hintergrund bestimmen.
+  static Color onColor(Color bg) => _relativeLuminance(bg) > 0.58 ? Colors.black : Colors.white;
+
+  /// WCAG-Kontrast-Ratio (>= 4.5 empfohlen für normale Schrift)
+  static double contrastRatio(Color a, Color b) {
+    final l1 = _relativeLuminance(a) + 0.05;
+    final l2 = _relativeLuminance(b) + 0.05;
+    return l1 > l2 ? l1 / l2 : l2 / l1;
+  }
+
+  static bool isContrastGood(Color fg, Color bg, {double min = 4.5}) =>
+      contrastRatio(fg, bg) >= min;
+
+  static double _relativeLuminance(Color c) {
+    double ch(int v) {
+      final s = v / 255.0;
+      return s <= 0.03928 ? s / 12.92 : math.pow((s + 0.055) / 1.055, 2.4).toDouble();
+    }
+
+    final r = ch(c.red), g = ch(c.green), b = ch(c.blue);
+    return 0.2126 * r + 0.7152 * g + 0.0722 * b;
+  }
+
+  ZenA11yPalette copyWith({
+    bool? isColorBlind,
+    bool? isDark,
+    bool? isHighContrast,
+    bool? reduceMotion,
+  }) {
+    return ZenA11yPalette(
+      isColorBlind: isColorBlind ?? this.isColorBlind,
+      isDark: isDark ?? this.isDark,
+      isHighContrast: isHighContrast ?? this.isHighContrast,
+      reduceMotion: reduceMotion ?? this.reduceMotion,
+    );
+  }
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is ZenA11yPalette &&
+          isColorBlind == other.isColorBlind &&
+          isDark == other.isDark &&
+          isHighContrast == other.isHighContrast &&
+          reduceMotion == other.reduceMotion;
+
+  @override
+  int get hashCode => Object.hash(isColorBlind, isDark, isHighContrast, reduceMotion);
+
+  /// Aus dem BuildContext holen
+  static ZenA11yPalette of(BuildContext context) {
+    final inherited = context.dependOnInheritedWidgetOfExactType<_ZenA11yPaletteProvider>();
+    return inherited?.palette ?? const ZenA11yPalette();
   }
 }
 
-/// Globaler A11y-Provider (kombinierbar mit Provider/State)
+/// Globaler A11y-Provider für das gesamte ZenTheme
 class A11yProvider extends StatelessWidget {
   final Widget child;
   final bool colorBlind;
   final bool darkMode;
+  final bool highContrast;
+  final bool reduceMotion;
+
   const A11yProvider({
     super.key,
     required this.child,
     this.colorBlind = false,
     this.darkMode = false,
+    this.highContrast = false,
+    this.reduceMotion = false,
   });
 
   @override
   Widget build(BuildContext context) {
-    return _A11yPaletteProvider(
-      palette: AccessibilityPalette(isColorBlind: colorBlind, isDark: darkMode),
+    return _ZenA11yPaletteProvider(
+      palette: ZenA11yPalette(
+        isColorBlind: colorBlind,
+        isDark: darkMode,
+        isHighContrast: highContrast,
+        reduceMotion: reduceMotion,
+      ),
       child: child,
     );
   }
 }
 
-class _A11yPaletteProvider extends InheritedWidget {
-  final AccessibilityPalette palette;
-  const _A11yPaletteProvider({required this.palette, required Widget child}) : super(child: child);
+class _ZenA11yPaletteProvider extends InheritedWidget {
+  final ZenA11yPalette palette;
+  const _ZenA11yPaletteProvider({
+    required this.palette,
+    required Widget child,
+  }) : super(child: child);
 
   @override
-  bool updateShouldNotify(_A11yPaletteProvider oldWidget) =>
+  bool updateShouldNotify(_ZenA11yPaletteProvider oldWidget) =>
       oldWidget.palette != palette;
 }
 
-/// Dynamischer, barrierefreier Text (große Schrift, Farbkontrast)
+/// ===================
+/// A11yText – fokus- & kontrastfreundlicher Text
+/// ===================
+/// - Achtet den systemweiten TextScaleFactor
+/// - Optionaler Fokusrahmen (High-Contrast & Tastaturnavigation)
+/// - Minimiert visuelle Belastung (schwache Schatten nur bei animatedFocus)
 class A11yText extends StatelessWidget {
   final String text;
   final double? fontSize;
@@ -64,73 +166,186 @@ class A11yText extends StatelessWidget {
   final Color? color;
   final FontWeight? fontWeight;
   final bool bold;
+  final bool highContrastOutline;
+  final bool animatedFocus;
+  final int? maxLines;
+  final TextOverflow? overflow;
 
   const A11yText(
     this.text, {
+    super.key,
     this.fontSize,
     this.semanticsLabel,
     this.align,
     this.color,
     this.fontWeight,
     this.bold = false,
-    super.key,
+    this.highContrastOutline = false,
+    this.animatedFocus = false,
+    this.maxLines,
+    this.overflow,
   });
 
   @override
   Widget build(BuildContext context) {
-    final scale = MediaQuery.textScaleFactorOf(context).clamp(1.0, 2.1);
-    final palette = AccessibilityPalette.of(context);
+    final scale = MediaQuery.textScaleFactorOf(context).clamp(1.0, 2.2);
+    final palette = ZenA11yPalette.of(context);
+
+    final baseStyle = TextStyle(
+      fontFamily: "SFProText",
+      fontSize: (fontSize ?? 17) * scale,
+      color: color ?? palette.primary,
+      fontWeight: fontWeight ?? (bold ? FontWeight.w600 : FontWeight.normal),
+      height: 1.22,
+      shadows: animatedFocus
+          ? [Shadow(blurRadius: 10, color: palette.accent.withOpacity(0.12), offset: const Offset(0, 2))]
+          : const [],
+    );
+
+    Widget txt = Text(
+      text,
+      textAlign: align,
+      style: baseStyle,
+      maxLines: maxLines,
+      overflow: overflow,
+    );
+
+    if (highContrastOutline || palette.isHighContrast) {
+      txt = Container(
+        decoration: BoxDecoration(
+          border: Border.all(
+            color: palette.isHighContrast ? Colors.black : Colors.transparent,
+            width: palette.isHighContrast ? 2.0 : 0,
+          ),
+          borderRadius: BorderRadius.circular(8),
+        ),
+        padding: const EdgeInsets.symmetric(horizontal: 2, vertical: 1),
+        child: txt,
+      );
+    }
+
     return Semantics(
       label: semanticsLabel ?? text,
-      child: Text(
-        text,
-        textAlign: align,
-        style: TextStyle(
-          fontSize: (fontSize ?? 17) * scale,
-          color: color ?? palette.primary,
-          fontWeight: fontWeight ?? (bold ? FontWeight.bold : FontWeight.normal),
-          height: 1.22,
+      child: Focus(
+        child: AnimatedSwitcher(
+          duration: Duration(milliseconds: palette.reduceMotion ? 0 : 180),
+          child: txt,
         ),
       ),
     );
   }
 }
 
-/// Screenreader-Announce-Widget für beliebige Bereiche
+/// ===================
+/// A11yAnnounce – Screenreader-Label Wrapper
+/// ===================
+/// Nutzt Semantik-Label, ohne Sichtbarkeit zu verändern.
 class A11yAnnounce extends StatelessWidget {
   final String label;
   final Widget child;
-  const A11yAnnounce({required this.label, required this.child, super.key});
+  const A11yAnnounce({super.key, required this.label, required this.child});
 
   @override
   Widget build(BuildContext context) {
-    return Semantics(
-      label: label,
-      child: child,
-    );
+    return Semantics(label: label, child: child);
   }
 }
 
-/// Farb-Kontrast-Berechnung für A11y-Checks (für UX-Testing)
-bool isContrastGood(Color fg, Color bg) {
-  double luminance(Color c) {
-    final r = c.red / 255.0;
-    final g = c.green / 255.0;
-    final b = c.blue / 255.0;
-    final List<double> v = [r, g, b].map((v) {
-      return v <= 0.03928 ? v / 12.92 : ((v + 0.055) / 1.055).pow(2.4);
-    }).toList();
-    return 0.2126 * v[0] + 0.7152 * v[1] + 0.0722 * v[2];
-  }
+/// ===================
+/// A11yLiveAnnouncer – optionales Live-Announcement
+/// ===================
+/// Ruft nach dem Frame SemanticsService.announce() auf.
+/// Nutze sparsam (kann sonst aufdringlich sein).
+class A11yLiveAnnouncer extends StatefulWidget {
+  final String message;
+  final TextDirection textDirection;
+  final Widget child;
+  final bool announceOnce;
 
-  final lum1 = luminance(fg) + 0.05;
-  final lum2 = luminance(bg) + 0.05;
-  final ratio = lum1 > lum2 ? lum1 / lum2 : lum2 / lum1;
-  return ratio > 4.5; // WCAG AA
+  const A11yLiveAnnouncer({
+    super.key,
+    required this.message,
+    required this.child,
+    this.textDirection = TextDirection.ltr,
+    this.announceOnce = true,
+  });
+
+  @override
+  State<A11yLiveAnnouncer> createState() => _A11yLiveAnnouncerState();
 }
 
-extension _Pow on double {
-  double pow(num exponent) => math.pow(this, exponent).toDouble();
+class _A11yLiveAnnouncerState extends State<A11yLiveAnnouncer> {
+  bool _announced = false;
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    if (!_announced || !widget.announceOnce) {
+      WidgetsBinding.instance.addPostFrameCallback((_) {
+        // ignore: deprecated_member_use_from_same_package
+        SemanticsService.announce(widget.message, widget.textDirection);
+      });
+      if (widget.announceOnce) _announced = true;
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) => widget.child;
 }
 
+/// ===================
+/// Kontrast-Helpers (öffentlich)
+/// ===================
+bool isContrastGood(Color fg, Color bg) => ZenA11yPalette.isContrastGood(fg, bg);
+double contrastRatio(Color a, Color b) => ZenA11yPalette.contrastRatio(a, b);
+
+/// ===========================
+/// Demo-Komponente (Showcase)
+/// ===========================
+class A11yContrastDemo extends StatelessWidget {
+  const A11yContrastDemo({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final palette = ZenA11yPalette.of(context);
+    final chipBg = palette.accent;
+    final chipFg = ZenA11yPalette.onColor(chipBg);
 
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        const A11yText("Normale Schrift – ZenBrand"),
+        const SizedBox(height: 9),
+        const A11yText(
+          "High Contrast",
+          highContrastOutline: true,
+          animatedFocus: true,
+          bold: true,
+        ),
+        const SizedBox(height: 9),
+        Container(
+          width: 160,
+          height: 36,
+          decoration: BoxDecoration(
+            color: chipBg,
+            borderRadius: BorderRadius.circular(7),
+          ),
+          child: Center(
+            child: A11yText(
+              "Accessible Button",
+              color: chipFg,
+              fontWeight: FontWeight.w700,
+              semanticsLabel: "Klickbarer, kontrastreicher Button",
+            ),
+          ),
+        ),
+        const SizedBox(height: 6),
+        A11yText(
+          "Kontrast: ${contrastRatio(chipFg, chipBg).toStringAsFixed(2)}",
+          fontSize: 12.5,
+          color: Colors.black.withOpacity(0.6),
+        ),
+      ],
+    );
+  }
+}
diff --git a/zen_project1337/lib/features/accessibility/color_blind_mode.dart b/zen_project1337/lib/features/accessibility/color_blind_mode.dart
index 5377afc..878a001 100644
--- a/zen_project1337/lib/features/accessibility/color_blind_mode.dart
+++ b/zen_project1337/lib/features/accessibility/color_blind_mode.dart
@@ -1,46 +1,245 @@
 // lib/features/accessibility/color_blind_mode.dart
+//
+// Color-Blind Mode — robuste A11y-Farbsteuerung
+// ---------------------------------------------
+// • Zwei Paletten: normal & farbenblindenfreundlich (deuter-/protan-sicher)
+// • Persistenz via SharedPreferences
+// • Hoher Kontrast & automatische „onColor“-Berechnung
+// • Semantiken/Haptik im Switcher
+// • Hilfs-Widgets für farbcodierte Statuschips, die NICHT nur Farbe nutzen
+
+import 'dart:math' as math;
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
-import 'a11y_utils.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+
+/// Farbpalette für Accessibility/Color-Blind-Mode
+class AccessibilityPalette {
+  final Color accent;
+  final Color good;
+  final Color warning;
+  final Color bad;
+
+  const AccessibilityPalette({
+    required this.accent,
+    required this.good,
+    required this.warning,
+    required this.bad,
+  });
+
+  /// Standard (normale App-Farben)
+  static const normal = AccessibilityPalette(
+    accent: Color(0xFFA5CBA1), // Jade
+    good: Color(0xFF365486),   // Oxford Blue
+    warning: Color(0xFFFFD580),// Gold
+    bad: Color(0xFFB2B2B2),    // Grey
+  );
+
+  /// Farbenblindenfreundlich (hoher Kontrast, gut unterscheidbar)
+  static const colorBlind = AccessibilityPalette(
+    accent: Color(0xFF3777B6), // Blau
+    good: Color(0xFF3BA54A),   // Grün
+    warning: Color(0xFFE6A700),// Gelb/Amber
+    bad: Color(0xFFB71C1C),    // Rot (dunkel für Kontrast)
+  );
+
+  /// Ermittelt die aktive Palette aus dem Context (Provider)
+  static AccessibilityPalette of(BuildContext context) {
+    final enabled = context.select<ColorBlindModeProvider, bool>((p) => p.enabled);
+    return enabled ? AccessibilityPalette.colorBlind : AccessibilityPalette.normal;
+  }
+
+  /// Lesefarbe (schwarz/weiß) mit solidem Kontrast
+  static Color onColor(Color bg) => _relativeLuminance(bg) > 0.58 ? Colors.black : Colors.white;
+
+  /// Grobe Relative-Luminanz (für onColor-Entscheidung) – sRGB → linear
+  static double _relativeLuminance(Color c) {
+    double ch(int v) {
+      final s = v / 255.0;
+      if (s <= 0.03928) return s / 12.92;
+      final base = (s + 0.055) / 1.055;
+      // korrektes Gamma 2.4
+      return MathPow.pow24(base);
+    }
 
-/// Provider für Color-Blind-Mode, global einsetzbar.
-/// Damit kann die gesamte App (inkl. Theme/Palette) auf den Modus reagieren.
+    final r = ch(c.red), g = ch(c.green), b = ch(c.blue);
+    return 0.2126 * r + 0.7152 * g + 0.0722 * b;
+  }
+}
+
+/// Provider für Color-Blind-Mode (global)
 class ColorBlindModeProvider with ChangeNotifier {
+  static const _prefsKey = 'a11y.colorBlind.enabled';
   bool _enabled;
-  ColorBlindModeProvider(this._enabled);
+
+  ColorBlindModeProvider([this._enabled = false]);
 
   bool get enabled => _enabled;
+
   set enabled(bool v) {
     if (_enabled != v) {
       _enabled = v;
+      _persist(); // fire-and-forget
       notifyListeners();
     }
   }
+
+  /// Persistenz laden (z. B. im App-Start)
+  Future<void> load() async {
+    try {
+      final prefs = await SharedPreferences.getInstance();
+      _enabled = prefs.getBool(_prefsKey) ?? _enabled;
+      notifyListeners();
+    } catch (_) {
+      // nie crashen wegen A11y
+    }
+  }
+
+  Future<void> _persist() async {
+    try {
+      final prefs = await SharedPreferences.getInstance();
+      await prefs.setBool(_prefsKey, _enabled);
+    } catch (_) {}
+  }
 }
 
-/// Umschalter für Color-Blind-Mode im Settings-Screen.
+/// Umschalter für Einstellungen – mit Semantik & Haptik
 class ColorBlindModeSwitcher extends StatelessWidget {
   const ColorBlindModeSwitcher({super.key});
 
   @override
   Widget build(BuildContext context) {
-    final provider = Provider.of<ColorBlindModeProvider>(context);
-    final palette = AccessibilityPalette.of(context, colorBlind: provider.enabled);
-    return Row(
+    final provider = context.watch<ColorBlindModeProvider>();
+    final palette = AccessibilityPalette.of(context);
+
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
       children: [
-        A11yText(
+        Text(
           "Farbenblinden-Modus",
-          fontSize: 17,
-          semanticsLabel: "Color Blind Mode aktivieren",
-          fontWeight: FontWeight.w600,
+          style: TextStyle(
+            fontSize: 17,
+            fontWeight: FontWeight.w600,
+            color: palette.accent,
+          ),
+        ),
+        const SizedBox(height: 8),
+        Row(
+          children: [
+            Semantics(
+              toggled: provider.enabled,
+              label: "Farbenblinden-Modus ${provider.enabled ? 'aktiv' : 'inaktiv'}",
+              child: Switch.adaptive(
+                value: provider.enabled,
+                activeColor: palette.accent,
+                onChanged: (v) {
+                  HapticFeedback.selectionClick();
+                  provider.enabled = v;
+                },
+              ),
+            ),
+            const SizedBox(width: 8),
+            Flexible(
+              child: Text(
+                "Optimierte Farben mit hohem Kontrast – zusätzlich nutzen wir Symbole, nicht nur Farbe.",
+                style: TextStyle(
+                  fontSize: 13.5,
+                  color: Colors.black.withOpacity(0.6),
+                ),
+              ),
+            ),
+          ],
         ),
-        const SizedBox(width: 12),
-        Switch(
-          value: provider.enabled,
-          activeColor: palette.accent,
-          onChanged: (v) => provider.enabled = v,
+        const SizedBox(height: 10),
+        // Kleine Legende, die Form + Farbe kombiniert (nicht nur Farbe!)
+        const Wrap(
+          spacing: 8,
+          runSpacing: 8,
+          children: [
+            _SignalChip(icon: Icons.check_circle, label: "Gut", kind: _SignalKind.good),
+            _SignalChip(icon: Icons.warning, label: "Hinweis", kind: _SignalKind.warning),
+            _SignalChip(icon: Icons.cancel, label: "Kritisch", kind: _SignalKind.bad),
+          ],
         ),
       ],
     );
   }
 }
+
+/// Interne Kennzeichnung für Signalarten
+enum _SignalKind { good, warning, bad }
+
+/// Kompakter Status-Chip, der Farbe + Icon kombiniert
+class _SignalChip extends StatelessWidget {
+  final IconData icon;
+  final String label;
+  final _SignalKind kind;
+
+  const _SignalChip({
+    required this.icon,
+    required this.label,
+    required this.kind,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final p = AccessibilityPalette.of(context);
+
+    // kompatibel ohne Switch-Expression
+    Color bg;
+    switch (kind) {
+      case _SignalKind.good:
+        bg = p.good;
+        break;
+      case _SignalKind.warning:
+        bg = p.warning;
+        break;
+      case _SignalKind.bad:
+      default:
+        bg = p.bad;
+        break;
+    }
+
+    final fg = AccessibilityPalette.onColor(bg);
+
+    return Semantics(
+      label: label,
+      child: Container(
+        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 6),
+        decoration: BoxDecoration(
+          color: bg,
+          borderRadius: BorderRadius.circular(12),
+          border: Border.all(color: Colors.black.withOpacity(0.06)),
+          boxShadow: [
+            BoxShadow(
+              color: Colors.black.withOpacity(0.06),
+              blurRadius: 8,
+              offset: const Offset(0, 2),
+            ),
+          ],
+        ),
+        child: Row(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            Icon(icon, color: fg, size: 16),
+            const SizedBox(width: 6),
+            Text(
+              label,
+              style: TextStyle(
+                color: fg,
+                fontWeight: FontWeight.w700,
+                fontSize: 12.8,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+/// kleine, stabile Potenzfunktion für Gamma 2.4 (nutzt dart:math)
+class MathPow {
+  static double pow24(double base) => math.pow(base, 2.4).toDouble();
+}
diff --git a/zen_project1337/lib/features/accessibility/large_text_mode.dart b/zen_project1337/lib/features/accessibility/large_text_mode.dart
index 6dc3d32..2f38405 100644
--- a/zen_project1337/lib/features/accessibility/large_text_mode.dart
+++ b/zen_project1337/lib/features/accessibility/large_text_mode.dart
@@ -1,59 +1,201 @@
 // lib/features/accessibility/large_text_mode.dart
+//
+// LargeTextMode — sichere, a11y-freundliche Textskalierung
+// --------------------------------------------------------
+// • Vier Stufen: System / Normal / Groß / XL
+// • Respektiert systemweite Einstellungen (nimmt niemals weniger als das System)
+// • Persistenz via SharedPreferences (über App-Neustarts hinweg)
+// • Saubere Semantik & Tooltips, klare Kontraste
+// • Clamping (0.8–2.0), um Layoutbrüche zu vermeiden
+
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+import 'a11y_utils.dart';
+
+/// Verschiedene Stufen für die Textgröße (system/normal/large/xl)
+enum LargeTextScale { system, normal, large, xl }
 
 /// Provider für Large-Text-Mode (globale Accessibility)
 class LargeTextModeProvider with ChangeNotifier {
-  bool _largeText;
-  LargeTextModeProvider(this._largeText);
+  static const _prefsKey = 'a11y.textScale';
+  LargeTextScale _scale;
+
+  LargeTextModeProvider([this._scale = LargeTextScale.normal]);
+
+  LargeTextScale get scale => _scale;
 
-  bool get largeText => _largeText;
-  set largeText(bool v) {
-    if (_largeText != v) {
-      _largeText = v;
+  /// Setzt die Skala, speichert sie und benachrichtigt Listener.
+  set scale(LargeTextScale v) {
+    if (_scale != v) {
+      _scale = v;
+      _persist(); // fire-and-forget
       notifyListeners();
     }
   }
+
+  /// Faktor für MediaQuery.textScaleFactor.
+  /// -1 bedeutet: Systemwert unverändert durchreichen.
+  double get factor {
+    switch (_scale) {
+      case LargeTextScale.system:
+        return -1;
+      case LargeTextScale.normal:
+        return 1.0;
+      case LargeTextScale.large:
+        return 1.33;
+      case LargeTextScale.xl:
+        return 1.55;
+    }
+  }
+
+  /// Persistiert die aktuelle Wahl in SharedPreferences.
+  Future<void> _persist() async {
+    try {
+      final prefs = await SharedPreferences.getInstance();
+      await prefs.setString(_prefsKey, _scale.name);
+    } catch (_) {
+      // bewusst schlucken: A11y darf nie crashen
+    }
+  }
+
+  /// Lädt den gespeicherten Wert (optional im App-Start aufrufen).
+  Future<void> load() async {
+    try {
+      final prefs = await SharedPreferences.getInstance();
+      final saved = prefs.getString(_prefsKey);
+      if (saved != null) {
+        // byName kann werfen – defensiv auffangen
+        final parsed = LargeTextScale.values.firstWhere(
+          (e) => e.name == saved,
+          orElse: () => _scale,
+        );
+        _scale = parsed;
+        notifyListeners();
+      }
+    } catch (_) {
+      // still: sicher weiterlaufen
+    }
+  }
 }
 
-/// Umschalter für Settings-Screen – aktiviert globalen Large-Text-Mode
+/// Umschalter für Settings-Screen – inklusive Erklärung/Tooltip
 class LargeTextModeSwitcher extends StatelessWidget {
   const LargeTextModeSwitcher({super.key});
 
   @override
   Widget build(BuildContext context) {
     final provider = Provider.of<LargeTextModeProvider>(context);
-    return Row(
+    final theme = Theme.of(context);
+    final accent = theme.colorScheme.secondary;
+
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
       children: [
-        Text(
-          "Große Schrift",
-          style: const TextStyle(fontSize: 17, fontWeight: FontWeight.w600),
+        Tooltip(
+          message:
+              "Aktiviere große Schrift, um Texte leichter zu lesen.\n"
+              "Wir respektieren immer deine System-Einstellungen.",
+          child: A11yText(
+            "Textgröße",
+            fontSize: 17,
+            fontWeight: FontWeight.w600,
+          ),
         ),
-        const SizedBox(width: 12),
-        Switch(
-          value: provider.largeText,
-          onChanged: (v) => provider.largeText = v,
-          activeColor: Theme.of(context).colorScheme.secondary,
+        const SizedBox(height: 7),
+        Wrap(
+          spacing: 8,
+          runSpacing: 8,
+          children: [
+            _scaleBtn(context, provider, LargeTextScale.system, "System", accent),
+            _scaleBtn(context, provider, LargeTextScale.normal, "Normal", accent),
+            _scaleBtn(context, provider, LargeTextScale.large, "Groß", accent),
+            _scaleBtn(context, provider, LargeTextScale.xl, "XL", accent),
+          ],
         ),
       ],
     );
   }
+
+  Widget _scaleBtn(
+    BuildContext ctx,
+    LargeTextModeProvider prov,
+    LargeTextScale scale,
+    String label,
+    Color accent,
+  ) {
+    final isActive = prov.scale == scale;
+
+    return Semantics(
+      button: true,
+      selected: isActive,
+      label: "Textgröße $label${isActive ? ' (aktiv)' : ''}",
+      child: OutlinedButton(
+        style: OutlinedButton.styleFrom(
+          backgroundColor: isActive ? accent.withOpacity(0.14) : null,
+          side: BorderSide(color: isActive ? accent : Colors.grey.shade300),
+          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(14)),
+        ),
+        onPressed: () {
+          HapticFeedback.selectionClick();
+          prov.scale = scale;
+        },
+        child: Text(
+          label,
+          style: TextStyle(fontWeight: isActive ? FontWeight.bold : FontWeight.normal),
+        ),
+      ),
+    );
+  }
 }
 
 /// Provider-Widget, das MediaQuery.textScaleFactor global setzt.
-/// Am besten als Parent ganz oben im App-Tree verwenden.
+/// GANZ OBEN im Widget-Tree einbinden!
+/// Sicherheitslogik:
+///  • Wenn "System": gib unverändert durch
+///  • Sonst: nimm das Maximum aus System- und gewählter Skala (reduziert nie A11y)
+///  • Clamp auf [0.8, 2.0], um UI-Brüche zu vermeiden
 class LargeTextProvider extends StatelessWidget {
   final Widget child;
   const LargeTextProvider({super.key, required this.child});
 
   @override
   Widget build(BuildContext context) {
-    final largeText = context.watch<LargeTextModeProvider>().largeText;
+    final chosen = context.watch<LargeTextModeProvider>().factor;
+    if (chosen < 0) {
+      // Systemwert respektieren (unverändert)
+      return child;
+    }
+
+    final media = MediaQuery.of(context);
+    final base = media.textScaleFactor;
+    final effective = _clampDouble(
+      base >= chosen ? base : chosen, // niemals kleiner als System
+      0.8,
+      2.0,
+    );
+
     return MediaQuery(
-      data: MediaQuery.of(context).copyWith(
-        textScaleFactor: largeText ? 1.35 : 1.0,
-      ),
+      data: media.copyWith(textScaleFactor: effective),
       child: child,
     );
   }
+
+  double _clampDouble(double v, double min, double max) {
+    if (v < min) return min;
+    if (v > max) return max;
+    return v;
+    }
 }
+
+// Tipp zur Verwendung:
+//
+// ChangeNotifierProvider(
+//   create: (_) {
+//     final p = LargeTextModeProvider();
+//     p.load(); // optional laden
+//     return p;
+//   },
+//   child: LargeTextProvider(child: AppRoot()),
+// )
diff --git a/zen_project1337/lib/features/calendar/mood_heatmap.dart b/zen_project1337/lib/features/calendar/mood_heatmap.dart
index ac50d11..b801126 100644
--- a/zen_project1337/lib/features/calendar/mood_heatmap.dart
+++ b/zen_project1337/lib/features/calendar/mood_heatmap.dart
@@ -1,183 +1,411 @@
+// lib/features/calendar/mood_heatmap.dart
+//
+// MoodHeatmap — ZenYourself (Oxford Edition)
+// -----------------------------------------
+// • Wochen-Heatmap (Mo–So) mit ruhiger Ästhetik
+// • A11y: Semantics-Labels, klare Kontraste
+// • „Heute“-Ring, sanfte Tooltip-Animation
+// • Optionaler Lottie-Glow im Hintergrund
+
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:lottie/lottie.dart';
 import '../../data/mood_entry.dart';
-import '../../shared/ui/zen_widgets.dart';
-import 'package:animations/animations.dart';
 
-/// MoodHeatmap: Zeigt die Stimmungen der letzten X Tage als Heatmap.
-/// Oxford Zen-Edition: sanfte Farben, Barrierefreiheit, Animation & Tooltip.
-/// Auch für Wochen-/Monatsübersichten nutzbar.
+const zenGreen = Color(0xFF0B3D2E);
+const sandBeige = Color(0xFFFDF8EC);
+const zenGrey = Color(0xFFD8D8D8);
+
 class MoodHeatmap extends StatelessWidget {
   final List<MoodEntry> moodEntries;
-  final int days;
+
+  /// Optional: sanfter Lottie-Glow im Hintergrund
+  final bool showBackgroundGlow;
 
   const MoodHeatmap({
     super.key,
     required this.moodEntries,
-    this.days = 7,
+    this.showBackgroundGlow = true,
   });
 
   @override
   Widget build(BuildContext context) {
-    // Sortieren nach Tag (neueste zuerst)
+    final size = MediaQuery.of(context).size;
+    final isMini = size.width < 340 || size.height < 560;
     final now = DateTime.now();
-    final start = now.subtract(Duration(days: days - 1));
-    final daily = <String, MoodEntry?>{};
-    for (int i = 0; i < days; i++) {
-      final date = start.add(Duration(days: i));
-      final tag = "${date.year}-${date.month.toString().padLeft(2, '0')}-${date.day.toString().padLeft(2, '0')}";
-      daily[tag] = moodEntries.lastWhere(
-        (e) =>
-            e.timestamp.year == date.year &&
-            e.timestamp.month == date.month &&
-            e.timestamp.day == date.day,
-        orElse: () => MoodEntry(timestamp: date, moodScore: -1),
-      );
+
+    // Wochenfenster (Mo–So) basierend auf heutigem Datum
+    final monday = now.subtract(Duration(days: now.weekday - 1));
+    final weekDays = List<DateTime>.generate(7, (i) => monday.add(Duration(days: i)));
+
+    // Für jeden Wochentag: letzter Eintrag (oder null)
+    final entries = weekDays
+        .map((date) => moodEntries.lastWhereOrNull(
+              (e) =>
+                  e.timestamp.year == date.year &&
+                  e.timestamp.month == date.month &&
+                  e.timestamp.day == date.day,
+            ))
+        .toList();
+
+    return Stack(
+      alignment: Alignment.center,
+      children: [
+        if (!isMini && showBackgroundGlow)
+          Positioned.fill(
+            child: Lottie.asset(
+              'assets/lottie/cloud_glow.json',
+              fit: BoxFit.cover,
+              repeat: true,
+              animate: true,
+              alignment: Alignment.topCenter,
+            ),
+          ),
+        Container(
+          decoration: BoxDecoration(
+            color: sandBeige.withOpacity(0.96),
+            borderRadius: BorderRadius.circular(23),
+            boxShadow: [
+              BoxShadow(
+                color: zenGreen.withOpacity(0.07),
+                blurRadius: 15,
+                offset: const Offset(0, 6),
+              ),
+            ],
+            border: Border.all(color: zenGreen.withOpacity(0.065), width: 1.2),
+          ),
+          padding: EdgeInsets.symmetric(
+            vertical: isMini ? 9 : 19,
+            horizontal: isMini ? 7 : 16,
+          ),
+          child: Column(
+            mainAxisSize: MainAxisSize.min,
+            children: [
+              Text(
+                isMini ? "Zen-Woche" : "Deine Woche im Zen-Flow",
+                style: const TextStyle(
+                  fontSize: 17.5,
+                  fontWeight: FontWeight.bold,
+                  color: zenGreen,
+                  fontFamily: "ZenKalligrafie",
+                  letterSpacing: 0.14,
+                ),
+              ),
+              SizedBox(height: isMini ? 10 : 18),
+              Row(
+                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+                children: List.generate(7, (i) {
+                  final date = weekDays[i];
+                  final entry = entries[i];
+                  final isEmpty = entry == null || (entry.moodScore ?? -1) < 0;
+                  final score = entry?.moodScore ?? -1;
+                  final moodColor =
+                      isEmpty ? zenGrey.withOpacity(0.22) : _zenMoodColor(score).withOpacity(0.93);
+                  final emoji = isEmpty ? "…" : _emojiForScore(score);
+                  final isToday = _isSameDay(date, now);
+
+                  return _ZenDayMoodBubble(
+                    emoji: emoji,
+                    score: isEmpty ? null : score,
+                    label: _weekdayLabel(i),
+                    color: moodColor,
+                    highlight: !isEmpty && score == 4,
+                    mini: isMini,
+                    date: date,
+                    entry: entry,
+                    isToday: isToday,
+                  );
+                }),
+              ),
+              if (!isMini)
+                Padding(
+                  padding: const EdgeInsets.only(top: 13.0),
+                  child: Opacity(
+                    opacity: 0.88,
+                    child: Text(
+                      "*Tippe für Details, lang halten für Zitat*",
+                      style: const TextStyle(
+                        color: zenGreen,
+                        fontSize: 12.7,
+                        fontStyle: FontStyle.italic,
+                        fontFamily: "SFProText",
+                        letterSpacing: 0.03,
+                      ),
+                    ),
+                  ),
+                ),
+            ],
+          ),
+        ),
+      ],
+    );
+  }
+
+  static bool _isSameDay(DateTime a, DateTime b) =>
+      a.year == b.year && a.month == b.month && a.day == b.day;
+
+  static Color _zenMoodColor(int score) {
+    switch (score) {
+      case 0:
+        return const Color(0xFFD0DFE2); // Nebelgrau
+      case 1:
+        return const Color(0xFFE9E4CC); // Pastell-Sand
+      case 2:
+        return const Color(0xFFF7EDD6); // Sanftbeige
+      case 3:
+        return const Color(0xFFDFF2E6); // Hellgrün
+      case 4:
+        return const Color(0xFFC2E5CF); // Zen-Grün
+      default:
+        return sandBeige;
     }
+  }
 
-    return Card(
-      elevation: 4,
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
-      margin: const EdgeInsets.symmetric(vertical: 10, horizontal: 2),
-      color: const Color(0xFFF8F9FB),
-      child: Padding(
-        padding: const EdgeInsets.symmetric(vertical: 19, horizontal: 17),
+  static String _emojiForScore(int score) {
+    switch (score) {
+      case 0:
+        return "🌫️";
+      case 1:
+        return "🌦️";
+      case 2:
+        return "⛅";
+      case 3:
+        return "🌤️";
+      case 4:
+        return "🌞";
+      default:
+        return "…";
+    }
+  }
+
+  static String _labelForScore(int? score) {
+    switch (score) {
+      case 0:
+        return "Tief";
+      case 1:
+        return "Niedrig";
+      case 2:
+        return "Neutral";
+      case 3:
+        return "Klar";
+      case 4:
+        return "Erfüllt";
+      default:
+        return "Keine Angabe";
+    }
+  }
+
+  static String _weekdayLabel(int i) {
+    const labels = ["Mo", "Di", "Mi", "Do", "Fr", "Sa", "So"];
+    return labels[i];
+  }
+}
+
+// --- Einzelner Wochentag: Zen-MoodBubble, interaktiv, animiert, A11y ---
+class _ZenDayMoodBubble extends StatefulWidget {
+  final String emoji;
+  final int? score;
+  final String label;
+  final Color color;
+  final bool highlight;
+  final bool mini;
+  final DateTime date;
+  final MoodEntry? entry;
+  final bool isToday;
+
+  const _ZenDayMoodBubble({
+    required this.emoji,
+    required this.score,
+    required this.label,
+    required this.color,
+    required this.highlight,
+    required this.mini,
+    required this.date,
+    required this.entry,
+    required this.isToday,
+  });
+
+  @override
+  State<_ZenDayMoodBubble> createState() => _ZenDayMoodBubbleState();
+}
+
+class _ZenDayMoodBubbleState extends State<_ZenDayMoodBubble> {
+  bool _showTooltip = false;
+
+  @override
+  Widget build(BuildContext context) {
+    final double bubbleSize = widget.mini ? 29 : 37;
+    final double emojiSize = widget.mini ? 15 : 20;
+
+    final semanticsLabel = _semanticsForDay(
+      date: widget.date,
+      score: widget.score,
+      label: widget.label,
+    );
+
+    return Semantics(
+      button: widget.entry != null,
+      label: semanticsLabel,
+      child: GestureDetector(
+        onTap: widget.entry == null
+            ? null
+            : () {
+                HapticFeedback.selectionClick();
+                setState(() => _showTooltip = !_showTooltip);
+                if (_showTooltip) {
+                  Future.delayed(const Duration(seconds: 2), () {
+                    if (mounted) setState(() => _showTooltip = false);
+                  });
+                }
+              },
+        onLongPress: (widget.entry?.aiSummary == null || widget.entry!.aiSummary!.trim().isEmpty)
+            ? null
+            : () {
+                HapticFeedback.lightImpact();
+                ScaffoldMessenger.of(context).showSnackBar(
+                  SnackBar(
+                    content: Text(
+                      '"${widget.entry!.aiSummary}"',
+                      style: const TextStyle(fontSize: 15, fontStyle: FontStyle.italic),
+                    ),
+                    backgroundColor: zenGreen.withOpacity(0.90),
+                    behavior: SnackBarBehavior.floating,
+                    duration: const Duration(seconds: 3),
+                  ),
+                );
+              },
         child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
           children: [
-            ZenHeadline("Stimmungs-Heatmap"),
-            const SizedBox(height: 12),
-            Row(
-              mainAxisAlignment: MainAxisAlignment.spaceBetween,
-              children: daily.entries.map((entry) {
-                final e = entry.value;
-                final isEmpty = e == null || e.moodScore < 0;
-                final moodColor = isEmpty
-                    ? Colors.grey.withOpacity(0.16)
-                    : e!.moodColor.withOpacity(0.94);
-                final borderColor = isEmpty
-                    ? Colors.grey.withOpacity(0.32)
-                    : e!.moodColor.withOpacity(0.50);
-                return OpenContainer(
-                  closedElevation: 0,
-                  openElevation: 3,
-                  closedShape: RoundedRectangleBorder(
-                    borderRadius: BorderRadius.circular(14),
-                    side: BorderSide(color: borderColor, width: 1),
+            Stack(
+              alignment: Alignment.center,
+              clipBehavior: Clip.none,
+              children: [
+                // „Heute“-Ring
+                if (widget.isToday)
+                  Container(
+                    width: bubbleSize + 10,
+                    height: bubbleSize + 10,
+                    decoration: BoxDecoration(
+                      shape: BoxShape.circle,
+                      border: Border.all(
+                        color: zenGreen.withOpacity(0.22),
+                        width: 2.0,
+                      ),
+                    ),
+                  ),
+                AnimatedContainer(
+                  duration: const Duration(milliseconds: 250),
+                  width: bubbleSize,
+                  height: bubbleSize,
+                  decoration: BoxDecoration(
+                    color: widget.color,
+                    shape: BoxShape.circle,
+                    boxShadow: [
+                      if (widget.highlight)
+                        BoxShadow(
+                          color: zenGreen.withOpacity(0.15),
+                          blurRadius: 12,
+                          offset: const Offset(0, 2),
+                        ),
+                    ],
+                    border: Border.all(
+                      color: widget.highlight ? zenGreen : Colors.transparent,
+                      width: widget.highlight ? 2.2 : 1.1,
+                    ),
                   ),
-                  openShape: RoundedRectangleBorder(
-                    borderRadius: BorderRadius.circular(20),
+                  child: Center(
+                    child: ExcludeSemantics(
+                      child: Text(
+                        widget.emoji,
+                        style: TextStyle(fontSize: emojiSize),
+                      ),
+                    ),
                   ),
-                  transitionType: ContainerTransitionType.fadeThrough,
-                  transitionDuration: const Duration(milliseconds: 470),
-                  closedBuilder: (context, open) => Tooltip(
-                    message: isEmpty
-                        ? "Kein Eintrag"
-                        : "${_weekdayLabel(e!.timestamp)}: ${e.moodLabel}\n${e.note ?? ''}",
-                    child: GestureDetector(
-                      onTap: open,
-                      child: AnimatedContainer(
-                        duration: const Duration(milliseconds: 400),
-                        width: 42,
-                        height: 58,
+                ),
+                if (_showTooltip && widget.entry != null)
+                  Positioned(
+                    top: -44,
+                    child: Material(
+                      color: Colors.transparent,
+                      child: Container(
+                        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                         decoration: BoxDecoration(
-                          color: moodColor,
-                          borderRadius: BorderRadius.circular(14),
-                          border: Border.all(color: borderColor, width: 1),
+                          color: zenGreen.withOpacity(0.93),
+                          borderRadius: BorderRadius.circular(9),
                           boxShadow: [
-                            if (!isEmpty)
-                              BoxShadow(
-                                color: e!.moodColor.withOpacity(0.13),
-                                blurRadius: 6,
-                                offset: Offset(0, 3),
-                              ),
+                            BoxShadow(
+                              color: Colors.black.withOpacity(0.11),
+                              blurRadius: 7,
+                            ),
                           ],
                         ),
-                        child: Center(
-                          child: isEmpty
-                              ? Icon(Icons.remove, color: Colors.grey[400], size: 21)
-                              : Column(
-                                  mainAxisAlignment: MainAxisAlignment.center,
-                                  children: [
-                                    Text(
-                                      e.moodScore.toString(),
-                                      style: TextStyle(
-                                        fontWeight: FontWeight.bold,
-                                        fontSize: 17,
-                                        color: e.moodScore >= 3
-                                            ? Colors.white
-                                            : const Color(0xFF002147),
-                                      ),
-                                    ),
-                                    const SizedBox(height: 1),
-                                    Text(
-                                      _emojiForScore(e.moodScore),
-                                      style: const TextStyle(fontSize: 20),
-                                    ),
-                                  ],
-                                ),
+                        child: Text(
+                          _tooltipText(widget.entry!),
+                          style: const TextStyle(
+                            color: sandBeige,
+                            fontSize: 12.6,
+                            fontFamily: "SFProText",
+                          ),
                         ),
                       ),
                     ),
                   ),
-                  openBuilder: (context, close) => ZenDialog(
-                    title: "${_weekdayLabel(e!.timestamp)} – Deine Stimmung",
-                    content: isEmpty
-                        ? const Text("Für diesen Tag gibt es keinen Eintrag.")
-                        : Column(
-                            crossAxisAlignment: CrossAxisAlignment.start,
-                            children: [
-                              Text(
-                                e.moodLabel,
-                                style: const TextStyle(
-                                    fontSize: 21,
-                                    fontWeight: FontWeight.bold,
-                                    color: Color(0xFF365486)),
-                              ),
-                              const SizedBox(height: 7),
-                              if (e.note != null && e.note!.trim().isNotEmpty)
-                                Text("Notiz: ${e.note}"),
-                              const SizedBox(height: 6),
-                              Text(
-                                "Zeitpunkt: ${_formatDate(e.timestamp)}",
-                                style: const TextStyle(color: Colors.grey, fontSize: 13),
-                              ),
-                            ],
-                          ),
-                    onClose: close,
-                  ),
-                );
-              }).toList(),
+              ],
             ),
+            if (!widget.mini) ...[
+              const SizedBox(height: 7),
+              Text(
+                widget.score?.toString() ?? "",
+                style: const TextStyle(
+                  color: zenGreen,
+                  fontWeight: FontWeight.w600,
+                  fontSize: 14,
+                ),
+              ),
+              const SizedBox(height: 2),
+              Text(
+                widget.label,
+                style: const TextStyle(
+                  color: zenGreen,
+                  fontSize: 13,
+                  fontWeight: FontWeight.w400,
+                ),
+              ),
+            ],
           ],
         ),
       ),
     );
   }
 
-  String _weekdayLabel(DateTime dt) {
-    const wdays = [
-      "So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"
-    ];
-    return wdays[dt.weekday % 7];
+  String _tooltipText(MoodEntry entry) {
+    final day = entry.timestamp.day.toString().padLeft(2, '0');
+    final month = entry.timestamp.month.toString().padLeft(2, '0');
+    final label = MoodHeatmap._labelForScore(entry.moodScore);
+    final extra = entry.aiSummary;
+    if (extra == null || extra.trim().isEmpty) {
+      return "Am $day.$month. – Stimmung: $label";
+    }
+    return "Am $day.$month. – $label · ${extra.trim()}";
   }
 
-  String _emojiForScore(int score) {
-    switch (score) {
-      case 0:
-        return "🌧️";
-      case 1:
-        return "🌫️";
-      case 2:
-        return "⛅";
-      case 3:
-        return "🌤️";
-      case 4:
-        return "🌞";
-      default:
-        return "❔";
-    }
+  String _semanticsForDay({
+    required DateTime date,
+    required int? score,
+    required String label,
+  }) {
+    final d = "${date.day.toString().padLeft(2, '0')}.${date.month.toString().padLeft(2, '0')}.";
+    final moodLabel = MoodHeatmap._labelForScore(score);
+    return "$label, $d – Stimmung: $moodLabel";
   }
+}
 
-  String _formatDate(DateTime dt) =>
-      "${dt.day.toString().padLeft(2, '0')}.${dt.month.toString().padLeft(2, '0')}.${dt.year}";
+// Null-safe lastWhereOrNull-Extension:
+extension LastWhereOrNull<T> on List<T> {
+  T? lastWhereOrNull(bool Function(T) test) {
+    for (var i = length - 1; i >= 0; i--) {
+      if (test(this[i])) return this[i];
+    }
+    return null;
+  }
 }
diff --git a/zen_project1337/lib/features/chat/chat_screen.dart b/zen_project1337/lib/features/chat/chat_screen.dart
index 2196025..c13d08c 100644
--- a/zen_project1337/lib/features/chat/chat_screen.dart
+++ b/zen_project1337/lib/features/chat/chat_screen.dart
@@ -1,9 +1,27 @@
-// lib/features/reflection/chat_screen.dart
+// lib/features/chat/chat_screen.dart
+//
+// Zen Chat — Oxford Edition (Provider + ReflectionEntry Storage)
+// --------------------------------------------------------------
+// • Sanfter Panda-Chat für niederschwellige Selbstreflexion
+// • Speichert User-Text/Voice + Panda-Impuls als ReflectionEntry (content-basiert)
+// • Lokale Heuristik für Tags/Mood (später leicht gegen GuidanceService austauschbar)
+// • Robuste, barrierearme UI mit Zen-Design-Tokens
+// • Stabilitäts-Fixes: keine Aktionen nach dispose, Timer statt Future.delayed, mounted-Guards,
+//   context-sichere Provider-Zugriffe, defensives Scrollen
+
+import 'dart:async';
+import 'dart:math';
 import 'package:flutter/material.dart';
 import 'package:lottie/lottie.dart';
-import '../../shared/ui/zen_widgets.dart'; // Enthält z.B. ZenBubble, ZenButton, A11yText
+import 'package:provider/provider.dart';
+
+import '../../shared/zen_style.dart';
+import '../../shared/ui/zen_widgets.dart';
 import '../voice/voice_input.dart';
+
+// Domain-Model + Provider
 import '../../data/reflection_entry.dart';
+import '../../models/reflection_entries_provider.dart';
 
 class ChatScreen extends StatefulWidget {
   const ChatScreen({super.key});
@@ -12,236 +30,478 @@ class ChatScreen extends StatefulWidget {
   State<ChatScreen> createState() => _ChatScreenState();
 }
 
-class _ChatScreenState extends State<ChatScreen> {
+/// Schlanker Chat-Datensatz (nur für die UI)
+class _ChatMessage {
+  final String id;
+  final String text;
+  final bool fromUser; // true = Nutzer:in, false = Panda/Coach
+  final DateTime timestamp;
+
+  const _ChatMessage({
+    required this.id,
+    required this.text,
+    required this.fromUser,
+    required this.timestamp,
+  });
+}
+
+class _ChatScreenState extends State<ChatScreen> with TickerProviderStateMixin {
   final TextEditingController _controller = TextEditingController();
-  final List<ReflectionEntry> _reflections = [];
-  bool _isListening = false;
-  bool _showInput = false;
+  final List<_ChatMessage> _messages = <_ChatMessage>[];
+  final ScrollController _scrollCtrl = ScrollController();
+
+  late final AnimationController _pandaBreathCtrl;
+  bool _showComposer = false;
+  final _rand = Random();
+
+  // Sichere, cancelbare Verzögerungen (kein Future.delayed nach dispose)
+  Timer? _coachTimer;
+
+  @override
+  void initState() {
+    super.initState();
+    _pandaBreathCtrl = AnimationController(
+      vsync: this,
+      duration: const Duration(milliseconds: 2600),
+    )..repeat(reverse: true);
+  }
 
+  @override
+  void dispose() {
+    _coachTimer?.cancel();
+    _pandaBreathCtrl.dispose();
+    _controller.dispose();
+    _scrollCtrl.dispose();
+    super.dispose();
+  }
+
+  // ---- UI ----
   @override
   Widget build(BuildContext context) {
-    final accent = Theme.of(context).colorScheme.secondary;
+    const accent = ZenColors.jadeMid;
 
     return Stack(
       children: [
-        // Zen-Hintergrund (kann z.B. animiert sein)
+        // 1) Ruhige Lottie-Wolken (ohne Screenreader-Lärm)
+        Positioned.fill(
+          child: ExcludeSemantics(
+            child: Lottie.asset(
+              'assets/lottie/zen_bg_clouds.json',
+              fit: BoxFit.cover,
+              repeat: true,
+              animate: true,
+            ),
+          ),
+        ),
+        // 2) Sanfter Schleier (für Lesbarkeit)
         Positioned.fill(
-          child: Lottie.asset(
-            'assets/lottie/zen_bg_clouds.json', // Optional: schöne animierte Wolken
-            fit: BoxFit.cover,
-            repeat: true,
-            animate: true,
+          child: IgnorePointer(
+            child: Container(color: ZenColors.white.withOpacity(0.42)),
           ),
         ),
+
+        // 3) Scaffold
         Scaffold(
           backgroundColor: Colors.transparent,
           appBar: AppBar(
-            title: const Text('Reflektieren', style: TextStyle(color: Colors.white)),
-            backgroundColor: Colors.transparent,
+            backgroundColor: ZenColors.white.withOpacity(0.95),
+            foregroundColor: ZenColors.jade,
             elevation: 0,
             centerTitle: true,
+            title: Text(
+              "Zen Chat",
+              style: ZenTextStyles.h2.copyWith(fontSize: 21, color: ZenColors.jade),
+            ),
             actions: [
               IconButton(
-                icon: const Icon(Icons.tips_and_updates_outlined, color: Colors.white),
+                icon: const Icon(Icons.tips_and_updates_outlined, color: ZenColors.jadeMid),
                 tooltip: "Impuls erhalten",
-                onPressed: () {
-                  _showImpulseDialog(context);
-                },
+                onPressed: _pushCoachImpulse,
               ),
             ],
           ),
-          body: Padding(
-            padding: const EdgeInsets.fromLTRB(16, 16, 16, 32),
+          body: SafeArea(
             child: Column(
               children: [
-                if (_reflections.isEmpty) ...[
-                  const Spacer(),
-                  ZenBubble(
-                    child: Column(
-                      children: [
-                        const Icon(Icons.spa, color: Colors.blueAccent, size: 46),
-                        const SizedBox(height: 10),
-                        const A11yText(
-                          "Was beschäftigt dich gerade?",
-                          fontSize: 21,
-                          fontWeight: FontWeight.bold,
-                        ),
-                        const SizedBox(height: 8),
-                        A11yText(
-                          "Sprich oder tippe deine Gedanken.\nDeine Reflexion wird zur Zen-Energie.",
-                          fontSize: 14,
-                          color: Colors.blueGrey[600],
+                // Panda mit „Atmung“
+                Padding(
+                  padding: const EdgeInsets.only(top: 8, bottom: 2),
+                  child: AnimatedBuilder(
+                    animation: _pandaBreathCtrl,
+                    builder: (_, __) {
+                      final scale = 1.0 + 0.03 * _pandaBreathCtrl.value;
+                      return Transform.scale(
+                        scale: scale,
+                        child: Image.asset(
+                          "assets/panda.png",
+                          width: 64,
+                          height: 64,
+                          fit: BoxFit.contain,
                         ),
-                        const SizedBox(height: 12),
-                        ZenButton(
-                          text: "Reflexion starten",
-                          onPressed: () => setState(() => _showInput = true),
-                        ),
-                      ],
-                    ),
+                      );
+                    },
                   ),
-                  const Spacer(flex: 3),
-                ] else ...[
-                  // Reflektionsverlauf, kein Chat!
-                  Expanded(
-                    child: ListView.builder(
-                      reverse: true,
-                      itemCount: _reflections.length,
-                      itemBuilder: (ctx, i) {
-                        final entry = _reflections[_reflections.length - 1 - i];
-                        return Padding(
-                          padding: const EdgeInsets.symmetric(vertical: 10.0),
-                          child: ZenBubble(
-                            color: entry.isReflection
-                                ? Colors.white.withOpacity(0.95)
-                                : accent.withOpacity(0.17),
-                            child: Column(
-                              crossAxisAlignment: CrossAxisAlignment.start,
-                              children: [
-                                A11yText(
-                                  entry.text,
-                                  fontSize: entry.isReflection ? 17 : 15,
-                                  fontWeight: entry.isReflection ? FontWeight.w600 : FontWeight.normal,
-                                ),
-                                if (entry.isReflection)
-                                  Padding(
-                                    padding: const EdgeInsets.only(top: 6),
-                                    child: Text(
-                                      entry.timestampFormatted,
-                                      style: TextStyle(
-                                        fontSize: 12,
-                                        color: Colors.grey[600],
-                                        fontStyle: FontStyle.italic,
-                                      ),
+                ),
+
+                // Chatverlauf
+                Expanded(
+                  child: _messages.isEmpty
+                      ? _buildEmptyState()
+                      : ListView.builder(
+                          key: const PageStorageKey('zen_chat_list'),
+                          controller: _scrollCtrl,
+                          padding: const EdgeInsets.fromLTRB(10, 6, 10, 16),
+                          reverse: true, // neueste unten
+                          itemCount: _messages.length,
+                          itemBuilder: (_, i) {
+                            final msg = _messages[_messages.length - 1 - i];
+                            final isUser = msg.fromUser;
+                            return Padding(
+                              padding: const EdgeInsets.symmetric(vertical: 6),
+                              child: Align(
+                                alignment: isUser ? Alignment.centerRight : Alignment.centerLeft,
+                                child: Semantics(
+                                  label: isUser ? 'Deine Nachricht' : 'Zen Panda',
+                                  child: ZenBubble(
+                                    color: isUser
+                                        ? ZenColors.white.withOpacity(0.96)
+                                        : ZenColors.sand.withOpacity(0.38),
+                                    borderRadius: isUser
+                                        ? const BorderRadius.only(
+                                            topLeft: Radius.circular(21),
+                                            topRight: Radius.circular(21),
+                                            bottomLeft: Radius.circular(21),
+                                            bottomRight: Radius.circular(8),
+                                          )
+                                        : const BorderRadius.only(
+                                            topLeft: Radius.circular(21),
+                                            topRight: Radius.circular(21),
+                                            bottomLeft: Radius.circular(8),
+                                            bottomRight: Radius.circular(21),
+                                          ),
+                                    padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 14),
+                                    child: Column(
+                                      crossAxisAlignment: CrossAxisAlignment.start,
+                                      children: [
+                                        Text(
+                                          msg.text,
+                                          style: ZenTextStyles.body.copyWith(
+                                            fontSize: isUser ? 16.8 : 15.6,
+                                            fontWeight: isUser ? FontWeight.w600 : FontWeight.w400,
+                                            color: ZenColors.ink,
+                                          ),
+                                        ),
+                                        const SizedBox(height: 4),
+                                        Text(
+                                          _fmtTime(msg.timestamp),
+                                          style: ZenTextStyles.caption.copyWith(
+                                            fontSize: 12.4,
+                                            color: ZenColors.jadeMid.withOpacity(0.62),
+                                          ),
+                                        ),
+                                      ],
                                     ),
                                   ),
-                              ],
-                            ),
-                          ),
-                        );
-                      },
-                    ),
-                  ),
-                ],
-                // Eingabebereich
-                if (_showInput)
-                  ZenBubble(
-                    color: Colors.white,
-                    padding: const EdgeInsets.all(16),
-                    child: Column(
-                      children: [
-                        VoiceInputWidget(
-                          onResult: (transcript, emotion) {
-                            _addReflection(transcript);
-                            setState(() => _showInput = false);
-                          },
-                          hint: "Sprich deine Gedanken …",
-                        ),
-                        const SizedBox(height: 14),
-                        Row(
-                          children: [
-                            Expanded(
-                              child: TextField(
-                                controller: _controller,
-                                decoration: InputDecoration(
-                                  hintText: "Oder tippe hier deine Gedanken …",
-                                  border: OutlineInputBorder(
-                                    borderRadius: BorderRadius.circular(14),
-                                  ),
-                                  contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
                                 ),
-                                minLines: 1,
-                                maxLines: 4,
-                                onSubmitted: (txt) {
-                                  if (txt.trim().isNotEmpty) {
-                                    _addReflection(txt.trim());
-                                    setState(() => _showInput = false);
-                                    _controller.clear();
-                                  }
-                                },
                               ),
-                            ),
-                            const SizedBox(width: 10),
-                            IconButton(
-                              icon: const Icon(Icons.send_rounded, color: Colors.blueAccent, size: 28),
-                              tooltip: "Reflexion absenden",
-                              onPressed: () {
-                                final txt = _controller.text.trim();
-                                if (txt.isNotEmpty) {
-                                  _addReflection(txt);
-                                  setState(() => _showInput = false);
-                                  _controller.clear();
-                                }
-                              },
-                            ),
-                          ],
+                            );
+                          },
                         ),
-                      ],
-                    ),
-                  ),
+                ),
+
+                // Composer (Text + Voice)
+                AnimatedSwitcher(
+                  duration: animShort,
+                  child: _showComposer ? _buildComposer(accent) : _buildCTA(accent),
+                ),
               ],
             ),
           ),
-          floatingActionButton: !_showInput
-              ? FloatingActionButton.extended(
-                  backgroundColor: accent,
-                  icon: const Icon(Icons.spa),
-                  label: const Text("Reflektieren"),
-                  onPressed: () => setState(() => _showInput = true),
-                )
-              : null,
         ),
       ],
     );
   }
 
-  void _addReflection(String text) {
-    setState(() {
-      _reflections.add(
-        ReflectionEntry(
-          text: text,
-          isReflection: true,
-          timestamp: DateTime.now(),
+  Widget _buildEmptyState() {
+    return Center(
+      child: ZenBubble(
+        color: ZenColors.white,
+        padding: const EdgeInsets.all(20),
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            const Icon(Icons.spa_rounded, color: ZenColors.jadeMid, size: 44),
+            const SizedBox(height: 11),
+            Text("Was beschäftigt dich gerade?", style: ZenTextStyles.h3.copyWith(fontSize: 19.2)),
+            const SizedBox(height: 9),
+            Text(
+              "Sprich oder tippe deine Gedanken.\nDeine Reflexion bleibt privat.",
+              style: ZenTextStyles.caption.copyWith(color: ZenColors.jadeMid.withOpacity(0.83)),
+              textAlign: TextAlign.center,
+            ),
+            const SizedBox(height: 15),
+            ZenButton(
+              label: "Reflexion starten",
+              icon: Icons.edit_rounded,
+              onPressed: () => _safeSetState(() => _showComposer = true),
+            ),
+          ],
         ),
-      );
-      // Optional: Hier direkt eine KI-Gegenfrage/einen Zen-Impuls einfügen.
-      _reflections.add(
-        ReflectionEntry(
-          text: _generateZenImpulse(text),
-          isReflection: false,
-          timestamp: DateTime.now(),
+      ),
+    );
+  }
+
+  Widget _buildCTA(Color accent) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 14),
+      child: FloatingActionButton.extended(
+        heroTag: "chat_reflect_fab",
+        backgroundColor: accent,
+        icon: const Icon(Icons.spa),
+        label: const Text("Reflektieren", style: TextStyle(fontWeight: FontWeight.bold)),
+        onPressed: () => _safeSetState(() => _showComposer = true),
+      ),
+    );
+  }
+
+  Widget _buildComposer(Color accent) {
+    return Padding(
+      padding: const EdgeInsets.fromLTRB(8, 2, 8, 10),
+      child: ZenBubble(
+        color: ZenColors.white,
+        borderRadius: BorderRadius.circular(17),
+        padding: const EdgeInsets.all(12),
+        child: Column(
+          children: [
+            // Voice-Input (optional)
+            VoiceInputWidget(
+              hint: "Sprich deine Gedanken …",
+              onResult: (transcript, emotion) {
+                final t = transcript.trim();
+                if (t.isEmpty) return;
+                _addUserAndCoach(t, source: "voice");
+                _safeSetState(() => _showComposer = false);
+                _controller.clear();
+              },
+            ),
+            const SizedBox(height: 10),
+            // Text-Eingabe
+            Row(
+              children: [
+                Expanded(
+                  child: TextField(
+                    controller: _controller,
+                    minLines: 1,
+                    maxLines: 4,
+                    textInputAction: TextInputAction.send,
+                    decoration: InputDecoration(
+                      hintText: "Oder tippe hier deine Gedanken …",
+                      isDense: true,
+                      contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 9),
+                      border: OutlineInputBorder(
+                        borderRadius: BorderRadius.circular(12),
+                        borderSide: BorderSide(color: ZenColors.outline.withOpacity(0.8)),
+                      ),
+                      focusedBorder: OutlineInputBorder(
+                        borderRadius: BorderRadius.circular(12),
+                        borderSide: const BorderSide(color: ZenColors.focus, width: 2),
+                      ),
+                    ),
+                    onSubmitted: _onSubmitText,
+                  ),
+                ),
+                const SizedBox(width: 8),
+                Semantics(
+                  button: true,
+                  label: "Reflexion absenden",
+                  child: IconButton(
+                    icon: const Icon(Icons.send_rounded, color: ZenColors.jadeMid, size: 26),
+                    onPressed: () => _onSubmitText(_controller.text),
+                  ),
+                ),
+              ],
+            ),
+          ],
         ),
-      );
+      ),
+    );
+  }
+
+  // ---- Interaktionen ----
+  void _onSubmitText(String text) {
+    final t = text.trim();
+    if (t.isEmpty) return;
+    _addUserAndCoach(t, source: "manual");
+    _safeSetState(() => _showComposer = false);
+    _controller.clear();
+  }
+
+  void _pushCoachImpulse() {
+    final impulse = _generateZenImpulse("");
+    _addCoachOnly(impulse, persist: true); // nur Impuls anzeigen & speichern
+  }
+
+  void _addUserAndCoach(String userText, {required String source}) {
+    _addUser(userText, persist: true, source: source);
+
+    // leichte Verzögerung für „natürliches“ Gefühl – cancelbar
+    _coachTimer?.cancel();
+    _coachTimer = Timer(const Duration(milliseconds: 320), () {
+      if (!mounted) return;
+      _addCoachOnly(_generateZenImpulse(userText), persist: true);
     });
   }
 
-  // KI-Impulse / Zen-Gegenfrage (hier Dummy)
+  void _addUser(String text, {bool persist = false, required String source}) {
+    final now = DateTime.now();
+    _messages.add(_ChatMessage(
+      id: _id(),
+      text: text,
+      fromUser: true,
+      timestamp: now,
+    ));
+    if (persist && mounted) {
+      _persistReflection(
+        content: text,
+        source: source, // "manual" | "voice"
+        // Lokale Heuristiken (mood/tags) — später gegen GuidanceService austauschbar
+        moodScore: _classifyMoodLocal(text),
+        tags: _suggestTagsLocal(text),
+      );
+    }
+    _jumpToBottom();
+    _safeSetState(() {});
+  }
+
+  void _addCoachOnly(String text, {bool persist = false}) {
+    final now = DateTime.now();
+    _messages.add(_ChatMessage(
+      id: _id(),
+      text: text,
+      fromUser: false,
+      timestamp: now,
+    ));
+    if (persist && mounted) {
+      _persistReflection(
+        content: text,
+        source: "coach",
+        category: "Impulse",
+      );
+    }
+    _jumpToBottom();
+    _safeSetState(() {});
+  }
+
+  void _jumpToBottom() {
+    if (!mounted) return;
+    if (!_scrollCtrl.hasClients) {
+      // Nach dem nächsten Frame erneut versuchen
+      WidgetsBinding.instance.addPostFrameCallback((_) {
+        if (!mounted || !_scrollCtrl.hasClients) return;
+        _scrollCtrl.jumpTo(0);
+      });
+      return;
+    }
+    // Da die Liste reversed ist, springen wir an den Anfang
+    _scrollCtrl.animateTo(
+      0,
+      duration: const Duration(milliseconds: 250),
+      curve: Curves.easeOutCubic,
+    );
+  }
+
+  // ---- Persistenz mit ReflectionEntriesProvider ----
+  void _persistReflection({
+    required String content,
+    required String source,
+    String? category,
+    int? moodScore,
+    List<String>? tags,
+  }) {
+    if (!mounted) return;
+    final entry = ReflectionEntry(
+      timestamp: DateTime.now(),
+      content: content,
+      moodDayTag: _dayTag(DateTime.now()),
+      moodScore: moodScore,
+      category: category,
+      tags: tags,
+      aiSummary: null,
+      audioPath: null,
+      source: source,
+    );
+    // Kontext-sicherer Provider-Zugriff (nur wenn noch gemountet)
+    context.read<ReflectionEntriesProvider>().add(entry);
+  }
+
+  // ---- Hilfen ----
+  String _fmtTime(DateTime ts) {
+    final h = ts.hour.toString().padLeft(2, '0');
+    final m = ts.minute.toString().padLeft(2, '0');
+    return "$h:$m";
+  }
+
+  String _id() => DateTime.now().microsecondsSinceEpoch.toString();
+
+  String _dayTag(DateTime dt) =>
+      "${dt.year.toString().padLeft(4, '0')}-"
+      "${dt.month.toString().padLeft(2, '0')}-"
+      "${dt.day.toString().padLeft(2, '0')}";
+
   String _generateZenImpulse(String input) {
-    // → Hier später GPT-Integration!
-    const impulses = [
-      "Was löst dieser Gedanke in dir aus?",
-      "Was wäre, wenn du diesen Gedanken loslässt?",
-      "Was braucht dein inneres Kind gerade?",
-      "Wofür bist du dankbar in diesem Moment?",
-      "Was würde ein Zen-Meister jetzt antworten?",
-      "Wie fühlt sich dieser Gedanke körperlich an?",
+    // kleine, freundliche, nicht-direktive Impulse
+    const pool = [
+      "Was wäre heute ein 1%-Schritt in Richtung Ruhe?",
+      "Wenn du kurz innehältst: Was tut dir jetzt gut?",
+      "Was darf heute unperfekt sein — und trotzdem okay?",
+      "Welcher kleine Gedanke schenkt dir gerade Entlastung?",
+      "Wenn du sanft auf das Thema blickst: Was ist ein nächster, machbarer Schritt?",
+      "Was würdest du einem guten Freund in dieser Lage raten?",
     ];
-    return impulses[DateTime.now().second % impulses.length];
-  }
-
-  void _showImpulseDialog(BuildContext context) {
-    showDialog(
-      context: context,
-      builder: (_) => AlertDialog(
-        title: const Text("Zen-Impuls"),
-        content: Text(_generateZenImpulse("")),
-        actions: [
-          TextButton(
-            child: const Text("Okay"),
-            onPressed: () => Navigator.of(context).pop(),
-          ),
-        ],
-      ),
-    );
+    // deterministische, aber leicht variierende Auswahl
+    final idx = (_rand.nextInt(1000) + DateTime.now().second) % pool.length;
+    final trimmed = input.trim();
+    if (trimmed.isEmpty) return pool[idx];
+    final hint = trimmed.length > 80 ? '${trimmed.substring(0, 80)}…' : trimmed;
+    return "${pool[idx]}\n\n(Bezug: $hint)";
+  }
+
+  // Sehr einfache, lokale Heuristiken (können 1:1 gegen GuidanceService getauscht werden)
+  int? _classifyMoodLocal(String text) {
+    final t = text.toLowerCase();
+    if (_any(t, ['panik', 'schlecht', 'hoffnungslos', 'nutzlos'])) return 0;
+    if (_any(t, ['müde', 'niedrig', 'erschöpft', 'überfordert'])) return 1;
+    if (_any(t, ['okay', 'neutral', 'so lala'])) return 2;
+    if (_any(t, ['gut', 'klar', 'ruhig', 'stabil'])) return 3;
+    if (_any(t, ['stark', 'erfüllt', 'dankbar', 'zuversichtlich'])) return 4;
+    return null;
+  }
+
+  List<String> _suggestTagsLocal(String text) {
+    final out = <String>{};
+    final t = text.toLowerCase();
+    if (_any(t, ['arbeit', 'job', 'projekt'])) out.add('Arbeit');
+    if (_any(t, ['famil', 'partner', 'freund'])) out.add('Beziehungen');
+    if (_any(t, ['schlaf', 'müde', 'wach'])) out.add('Schlaf');
+    if (_any(t, ['angst', 'sorge', 'unsicher'])) out.add('Ängste');
+    if (_any(t, ['dankbar', 'freu', 'stolz'])) out.add('Dankbarkeit');
+    return out.take(3).toList();
+  }
+
+  bool _any(String haystack, List<String> needles) {
+    for (final n in needles) {
+      if (haystack.contains(n)) return true;
+    }
+    return false;
+  }
+
+  void _safeSetState(VoidCallback fn) {
+    if (!mounted) return;
+    // Vorsicht, falls ein Build gerade läuft
+    // (defer, um setState-during-build zu vermeiden)
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      if (!mounted) return;
+      setState(fn);
+    });
   }
 }
diff --git a/zen_project1337/lib/features/coaching/audio_player.dart b/zen_project1337/lib/features/coaching/audio_player.dart
index 439a5fd..c181d1c 100644
--- a/zen_project1337/lib/features/coaching/audio_player.dart
+++ b/zen_project1337/lib/features/coaching/audio_player.dart
@@ -1,22 +1,47 @@
 // lib/features/coaching/audio_player.dart
+//
+// CoachingAudioPlayer — Oxford Zen Edition
+// ---------------------------------------
+// • Schlanker, barrierearmer Audio-Player für Mini-Coach-Impulse
+// • Saubere just_audio-Integration mit defensiven Defaults
+// • Glasige ZenCard, konsistente Farben/Typografie, Lottie optional
+// • Robust gegen Edge-Cases (0-Länge, Fehler, Replay am Ende)
 
+import 'dart:async';
 import 'package:flutter/material.dart';
 import 'package:just_audio/just_audio.dart';
 import 'package:lottie/lottie.dart';
+
+import '../../shared/zen_style.dart';
 import '../../shared/ui/zen_widgets.dart';
 
 class CoachingAudioPlayer extends StatefulWidget {
-  final String asset;         // z.B. "assets/audio/breathe.mp3"
-  final String title;         // z.B. "Breath Meditation"
-  final String description;   // Optional: Kurze Beschreibung
-  final String? lottieAnim;   // Optional: Lottie-Animation für Visualisierung
+  /// Asset-Pfad, z. B. "assets/audio/breathe.mp3"
+  final String asset;
+
+  /// Optionaler Titel (Fallback: Dateiname)
+  final String? title;
+
+  /// Optional: kurze Beschreibung unterhalb des Titels
+  final String? description;
+
+  /// Optional: Lottie-Animation (z. B. "assets/lottie/breath.json")
+  final String? lottieAnim;
+
+  /// Autoplay beim Laden?
+  final bool autoplay;
+
+  /// In Schleife abspielen?
+  final bool loop;
 
   const CoachingAudioPlayer({
     super.key,
     required this.asset,
-    required this.title,
-    this.description = "",
+    this.title,
+    this.description,
     this.lottieAnim,
+    this.autoplay = false,
+    this.loop = false,
   });
 
   @override
@@ -24,40 +49,74 @@ class CoachingAudioPlayer extends StatefulWidget {
 }
 
 class _CoachingAudioPlayerState extends State<CoachingAudioPlayer> {
-  late AudioPlayer _player;
-  bool _isPlaying = false;
+  late final AudioPlayer _player;
+  StreamSubscription<Duration>? _posSub;
+  StreamSubscription<PlayerState>? _stateSub;
+  StreamSubscription<Duration?>? _durSub;
+
   Duration? _duration;
   Duration _position = Duration.zero;
+  bool _isPlaying = false;
+  bool _isReady = false;
+  String? _error;
+
+  Color get _accent => ZenColors.jade; // Design-DNA
 
   @override
   void initState() {
     super.initState();
     _player = AudioPlayer();
-    _init();
+    _initPlayer();
   }
 
-  Future<void> _init() async {
+  Future<void> _initPlayer() async {
     try {
       await _player.setAsset(widget.asset);
-      _duration = await _player.durationFuture;
-      _player.positionStream.listen((pos) {
-        setState(() => _position = pos);
-      });
-      _player.playerStateStream.listen((state) {
-        setState(() => _isPlaying = state.playing);
-      });
-    } catch (e) {
-      // Fehlerbehandlung, falls Asset nicht geladen werden kann
+      if (widget.loop) {
+        await _player.setLoopMode(LoopMode.one);
+      }
+      _duration = _player.duration;
+      _isReady = true;
+      _subscribe();
+      if (widget.autoplay) _player.play();
+      if (mounted) setState(() {});
+    } catch (_) {
+      _error = "Audio konnte nicht geladen werden.";
+      if (mounted) setState(() {});
     }
   }
 
+  void _subscribe() {
+    _posSub = _player.positionStream.listen((pos) {
+      if (!mounted) return;
+      setState(() => _position = pos);
+    });
+    _stateSub = _player.playerStateStream.listen((st) {
+      if (!mounted) return;
+      setState(() => _isPlaying = st.playing);
+    });
+    _durSub = _player.durationStream.listen((d) {
+      if (!mounted) return;
+      setState(() => _duration = d);
+    });
+  }
+
   @override
   void dispose() {
+    _posSub?.cancel();
+    _stateSub?.cancel();
+    _durSub?.cancel();
     _player.dispose();
     super.dispose();
   }
 
-  void _togglePlay() async {
+  Future<void> _togglePlay() async {
+    if (!_isReady) return;
+    final dur = _duration ?? Duration.zero;
+    // Wenn am Ende, zurückspulen
+    if (_position >= dur && dur > Duration.zero) {
+      await _player.seek(Duration.zero);
+    }
     if (_isPlaying) {
       await _player.pause();
     } else {
@@ -65,90 +124,184 @@ class _CoachingAudioPlayerState extends State<CoachingAudioPlayer> {
     }
   }
 
+  Future<void> _seekRelative(Duration delta) async {
+    if (!_isReady) return;
+    final dur = _duration ?? Duration.zero;
+    final next = (_position + delta);
+    final clamped = next < Duration.zero
+        ? Duration.zero
+        : (dur == Duration.zero ? Duration.zero : next > dur ? dur : next);
+    await _player.seek(clamped);
+  }
+
   @override
   Widget build(BuildContext context) {
-    final accent = Theme.of(context).colorScheme.secondary;
-    return ZenBubble(
-      color: Colors.white.withOpacity(0.95),
-      padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 22),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.center,
-        children: [
-          if (widget.lottieAnim != null) ...[
-            SizedBox(
-              height: 110,
-              child: Lottie.asset(
-                widget.lottieAnim!,
-                repeat: true,
-                animate: _isPlaying,
-              ),
-            ),
-            const SizedBox(height: 10),
-          ],
-          Text(
-            widget.title,
-            style: const TextStyle(
-              fontSize: 20,
-              fontWeight: FontWeight.bold,
-              color: Color(0xFF002147),
-              letterSpacing: 0.3,
-            ),
-            textAlign: TextAlign.center,
-          ),
-          if (widget.description.isNotEmpty)
-            Padding(
-              padding: const EdgeInsets.only(top: 8.0),
-              child: A11yText(
-                widget.description,
-                fontSize: 15,
-                color: Colors.blueGrey[600],
-                align: TextAlign.center,
+    final title = widget.title ?? _fallbackTitle(widget.asset);
+    final desc = widget.description ?? '';
+
+    return Semantics(
+      container: true,
+      label: 'Audio-Player: $title',
+      child: ZenCard(
+        elevation: 7,
+        borderRadius: ZenRadii.l,
+        color: ZenColors.white.withOpacity(0.96),
+        padding: const EdgeInsets.symmetric(
+          vertical: ZenSpacing.m,
+          horizontal: ZenSpacing.m,
+        ),
+        showWatermark: false,
+        child: _error != null
+            ? Center(
+                child: Text(
+                  _error!,
+                  style: const TextStyle(color: Colors.redAccent, fontSize: 15.5),
+                ),
+              )
+            : Column(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: [
+                  if (widget.lottieAnim != null && widget.lottieAnim!.isNotEmpty)
+                    Padding(
+                      padding: const EdgeInsets.only(bottom: 8),
+                      child: SizedBox(
+                        height: 98,
+                        child: Lottie.asset(
+                          widget.lottieAnim!,
+                          repeat: true,
+                          animate: _isPlaying,
+                          fit: BoxFit.contain,
+                        ),
+                      ),
+                    ),
+                  // Titel
+                  Text(
+                    title,
+                    textAlign: TextAlign.center,
+                    style: ZenTextStyles.h3.copyWith(
+                      color: ZenColors.jade,
+                      fontSize: 20.5,
+                      letterSpacing: 0.2,
+                      shadows: [
+                        Shadow(
+                          blurRadius: 8,
+                          color: ZenColors.jade.withOpacity(0.12),
+                          offset: const Offset(0, 2),
+                        ),
+                      ],
+                    ),
+                  ),
+                  // Beschreibung (optional)
+                  if (desc.isNotEmpty)
+                    Padding(
+                      padding: const EdgeInsets.only(top: 8.0, bottom: 12),
+                      child: Text(
+                        desc,
+                        textAlign: TextAlign.center,
+                        style: ZenTextStyles.body.copyWith(
+                          fontSize: 15,
+                          color: ZenColors.inkSubtle,
+                          height: 1.35,
+                        ),
+                      ),
+                    ),
+
+                  // Loader oder Player-Bar
+                  if (!_isReady)
+                    const Padding(
+                      padding: EdgeInsets.symmetric(vertical: 14.0),
+                      child: SizedBox(
+                        height: 26,
+                        width: 26,
+                        child: CircularProgressIndicator(strokeWidth: 2),
+                      ),
+                    )
+                  else
+                    _playerBar(),
+                ],
               ),
-            ),
-          const SizedBox(height: 18),
-          _playerBar(context, accent),
-        ],
       ),
     );
   }
 
-  Widget _playerBar(BuildContext context, Color accent) {
-    return Row(
-      mainAxisAlignment: MainAxisAlignment.center,
+  Widget _playerBar() {
+    final duration = _duration ?? Duration.zero;
+    final position = _position.clamp(Duration.zero, duration);
+
+    // Schutz vor NaN/INF bei sehr kurzen Assets
+    final maxMs = duration.inMilliseconds <= 0 ? 1.0 : duration.inMilliseconds.toDouble();
+
+    return Column(
       children: [
-        IconButton(
-          icon: Icon(_isPlaying ? Icons.pause_circle : Icons.play_circle, size: 44, color: accent),
-          tooltip: _isPlaying ? "Pause" : "Abspielen",
-          onPressed: _togglePlay,
-        ),
-        const SizedBox(width: 12),
-        Flexible(
-          child: Slider(
-            value: _position.inMilliseconds.toDouble(),
-            min: 0,
-            max: (_duration?.inMilliseconds.toDouble() ?? 1.0),
-            onChanged: (value) async {
-              final newPosition = Duration(milliseconds: value.toInt());
-              await _player.seek(newPosition);
-              setState(() => _position = newPosition);
-            },
-            activeColor: accent,
-            inactiveColor: accent.withOpacity(0.2),
-          ),
+        // Steuerleiste
+        Row(
+          mainAxisAlignment: MainAxisAlignment.center,
+          children: [
+            // -15s
+            IconButton(
+              tooltip: "15 Sekunden zurück",
+              onPressed: () => _seekRelative(const Duration(seconds: -15)),
+              icon: Icon(Icons.replay_10_rounded, color: _accent.withOpacity(0.9)),
+            ),
+            // Play/Pause
+            Semantics(
+              button: true,
+              label: _isPlaying ? 'Pause' : 'Abspielen',
+              child: IconButton(
+                iconSize: 44,
+                onPressed: _togglePlay,
+                icon: Icon(
+                  _isPlaying ? Icons.pause_circle : Icons.play_circle,
+                  color: _accent,
+                ),
+              ),
+            ),
+            // +15s
+            IconButton(
+              tooltip: "15 Sekunden vor",
+              onPressed: () => _seekRelative(const Duration(seconds: 15)),
+              icon: Icon(Icons.forward_10_rounded, color: _accent.withOpacity(0.9)),
+            ),
+          ],
         ),
-        const SizedBox(width: 12),
-        Text(
-          _formatDuration(_position),
-          style: TextStyle(fontSize: 13, color: Colors.grey[600]),
+
+        // Slider + Zeiten
+        Row(
+          children: [
+            Text(
+              _fmt(position),
+              style: TextStyle(fontSize: 12.5, color: ZenColors.inkSubtle.withOpacity(0.9)),
+            ),
+            Expanded(
+              child: Slider(
+                value: position.inMilliseconds.clamp(0, maxMs.toInt()).toDouble(),
+                min: 0,
+                max: maxMs,
+                onChanged: (v) => _player.seek(Duration(milliseconds: v.toInt())),
+                activeColor: _accent,
+                inactiveColor: _accent.withOpacity(0.18),
+              ),
+            ),
+            Text(
+              _fmt(duration),
+              style: TextStyle(fontSize: 12.5, color: ZenColors.inkSubtle.withOpacity(0.9)),
+            ),
+          ],
         ),
       ],
     );
   }
 
-  String _formatDuration(Duration d) {
-    String twoDigits(int n) => n.toString().padLeft(2, "0");
-    final min = twoDigits(d.inMinutes.remainder(60));
-    final sec = twoDigits(d.inSeconds.remainder(60));
-    return "$min:$sec";
+  String _fmt(Duration d) {
+    if (d.inMilliseconds.isNegative) return '00:00';
+    final m = d.inMinutes.remainder(60).toString().padLeft(2, '0');
+    final s = d.inSeconds.remainder(60).toString().padLeft(2, '0');
+    return '$m:$s';
+    }
+
+  String _fallbackTitle(String assetPath) {
+    final name = assetPath.split('/').last;
+    final base = name.contains('.') ? name.substring(0, name.lastIndexOf('.')) : name;
+    return base.replaceAll('_', ' ');
   }
 }
diff --git a/zen_project1337/lib/features/coaching/mini_coach.dart b/zen_project1337/lib/features/coaching/mini_coach.dart
index 7c2afc0..e137f54 100644
--- a/zen_project1337/lib/features/coaching/mini_coach.dart
+++ b/zen_project1337/lib/features/coaching/mini_coach.dart
@@ -1,15 +1,31 @@
-// lib/features/coaching/mini_coach.dart
+// lib/features/impulse/mini_coach_card.dart
+//
+// MiniCoachCard — Oxford Zen Edition
+// ----------------------------------
+// • Sanfte, glasige Karte für Mikro-Impulse, Mini-Meditationen & Coach-Hinweise
+// • Optional mit Lottie-Animation und Audio-Button
+// • Barrierearm (Semantics), responsiv, markenkonsistentes Styling
+// • Defensive Defaults (fällt auf Theme/ZenColors zurück)
 
 import 'package:flutter/material.dart';
 import 'package:lottie/lottie.dart';
+
+import '../../shared/zen_style.dart';
 import '../../shared/ui/zen_widgets.dart';
 import 'audio_player.dart';
 
 class MiniCoachCard extends StatelessWidget {
   final String title;
   final String text;
-  final String? audioAsset;     // Optional: Mini-Audio/Meditation
-  final String? lottieAnim;     // Optional: Lottie-Animation
+
+  /// Optional: Mini-Audio/Meditation (Asset-Pfad, z. B. "audio/breath.mp3")
+  final String? audioAsset;
+
+  /// Optional: Lottie-Animation (Asset-Pfad, z. B. "assets/lottie/breath.json")
+  final String? lottieAnim;
+
+  /// Optionaler Farbakzent (Fallback: ZenColors.jade)
+  final Color? accent;
 
   const MiniCoachCard({
     super.key,
@@ -17,53 +33,132 @@ class MiniCoachCard extends StatelessWidget {
     required this.text,
     this.audioAsset,
     this.lottieAnim,
+    this.accent,
   });
 
   @override
   Widget build(BuildContext context) {
-    final accent = Theme.of(context).colorScheme.secondary;
-    return ZenBubble(
-      color: Colors.white.withOpacity(0.98),
-      padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 20),
-      margin: const EdgeInsets.symmetric(vertical: 8),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.center,
-        children: [
-          if (lottieAnim != null)
-            SizedBox(
-              height: 84,
-              child: Lottie.asset(
-                lottieAnim!,
-                repeat: true,
-                animate: true,
+    final Color accentColor = accent ?? ZenColors.jade;
+    final theme = Theme.of(context);
+
+    return Semantics(
+      // Screenreader: kurze, klare Ankündigung
+      container: true,
+      header: true,
+      label: 'Mini-Coach: $title',
+      child: ZenCard(
+        elevation: 8,
+        borderRadius: ZenRadii.xl,
+        color: ZenColors.white.withOpacity(0.97),
+        padding: const EdgeInsets.symmetric(vertical: ZenSpacing.m, horizontal: ZenSpacing.m),
+        showWatermark: false,
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.center,
+          children: [
+            // Optional: sanfte Animation oben
+            if (lottieAnim != null && lottieAnim!.isNotEmpty)
+              Padding(
+                padding: const EdgeInsets.only(bottom: 10),
+                child: SizedBox(
+                  height: 74,
+                  child: Semantics(
+                    label: 'Beruhigende Animation',
+                    image: true,
+                    child: Lottie.asset(
+                      lottieAnim!,
+                      repeat: true,
+                      animate: true,
+                      fit: BoxFit.contain,
+                    ),
+                  ),
+                ),
+              ),
+
+            // Titel
+            Text(
+              title,
+              textAlign: TextAlign.center,
+              style: ZenTextStyles.h3.copyWith(
+                fontSize: 21,
+                color: accentColor,
+                letterSpacing: 0.14,
+                shadows: [
+                  Shadow(
+                    blurRadius: 9,
+                    color: accentColor.withOpacity(0.13),
+                    offset: const Offset(0, 2),
+                  ),
+                ],
               ),
             ),
-          Text(
-            title,
-            style: TextStyle(
-              fontSize: 19,
-              fontWeight: FontWeight.bold,
-              color: accent,
-              letterSpacing: 0.1,
+
+            const SizedBox(height: 10),
+
+            // Text
+            Text(
+              text,
+              textAlign: TextAlign.center,
+              style: ZenTextStyles.body.copyWith(
+                fontSize: 15.7,
+                color: const Color(0xFF1B263B),
+                height: 1.36,
+                fontWeight: FontWeight.w400,
+              ),
             ),
-            textAlign: TextAlign.center,
-          ),
-          const SizedBox(height: 8),
-          Text(
-            text,
-            style: const TextStyle(fontSize: 15, color: Color(0xFF1B263B)),
-            textAlign: TextAlign.center,
-          ),
-          if (audioAsset != null) ...[
-            const SizedBox(height: 14),
-            CoachingAudioPlayer(
-              asset: audioAsset!,
-              title: title,
-              description: text,
-              lottieAnim: lottieAnim,
+
+            // Audio (optional)
+            if (audioAsset != null && audioAsset!.isNotEmpty) ...[
+              const SizedBox(height: 16),
+              _ZenHairlineDivider(color: accentColor.withOpacity(0.22)),
+              const SizedBox(height: 10),
+              Semantics(
+                button: true,
+                label: 'Audio abspielen',
+                child: CoachingAudioPlayer(
+                  asset: audioAsset!,
+                  description: text,
+                  lottieAnim: lottieAnim,
+                ),
+              ),
+            ],
+
+            // Mikro-Hinweis für Achtsamkeit (non-intrusive)
+            const SizedBox(height: 6),
+            Text(
+              'Atme ruhig. Du bestimmst das Tempo.',
+              textAlign: TextAlign.center,
+              style: theme.textTheme.bodySmall?.copyWith(
+                fontSize: 12.5,
+                color: ZenColors.jadeMid.withOpacity(0.72),
+                fontStyle: FontStyle.italic,
+              ),
             ),
           ],
-        ],
+        ),
+      ),
+    );
+  }
+}
+
+/// Sehr subtile Trenner-Linie mit leichtem Verlauf (passt in Glas-UI)
+class _ZenHairlineDivider extends StatelessWidget {
+  final Color color;
+  const _ZenHairlineDivider({required this.color});
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      height: 1.1,
+      width: 180,
+      decoration: BoxDecoration(
+        gradient: LinearGradient(
+          colors: [
+            Colors.transparent,
+            color,
+            Colors.transparent,
+          ],
+          stops: const [0.15, 0.5, 0.85],
+        ),
       ),
     );
   }
diff --git a/zen_project1337/lib/features/community/custom_questions.dart b/zen_project1337/lib/features/community/custom_questions.dart
index 27e46c7..6f55066 100644
--- a/zen_project1337/lib/features/community/custom_questions.dart
+++ b/zen_project1337/lib/features/community/custom_questions.dart
@@ -1,8 +1,18 @@
 // lib/features/community/custom_questions.dart
+//
+// CustomQuestionsScreen — Oxford Zen Edition
+// ------------------------------------------
+// • User-generierte Fragen: erstellen, upvoten, favorisieren
+// • Persistenz lokal (keine Cloud): Fragen + abgegebene Votes
+// • Sanftes, glasiges UI mit Zen-Bubbles (aus zen_widgets.dart)
+// • A11y: Semantics, klare Labels, große Tap-Ziele
+// • Sanity-Checks: Länge, Duplikat-Check (normalisiert), leichte Entschärfung
+// • Timestamps in UTC für stabile Sortierung/Export
 
 import 'package:flutter/material.dart';
-import 'package:flutter_svg/flutter_svg.dart';
-import '../../shared/ui/zen_widgets.dart';
+import 'package:zenyourself/shared/zen_style.dart';
+import 'package:zenyourself/shared/ui/zen_widgets.dart';
+import 'package:zenyourself/services/local_storage.dart';
 
 class CustomQuestionsScreen extends StatefulWidget {
   const CustomQuestionsScreen({super.key});
@@ -12,138 +22,409 @@ class CustomQuestionsScreen extends StatefulWidget {
 }
 
 class _CustomQuestionsScreenState extends State<CustomQuestionsScreen> {
-  final List<Question> _questions = [
-    Question(text: "Was hat dich heute wirklich berührt?", votes: 13),
-    Question(text: "Wofür bist du dir selbst gerade dankbar?", votes: 21),
-    Question(text: "Wann warst du zuletzt ehrlich zu dir selbst?", votes: 7),
-  ];
+  final _storage = LocalStorageService();
 
+  // State
   final TextEditingController _controller = TextEditingController();
+  final FocusNode _fieldFocus = FocusNode();
+
+  final List<_CustomQuestion> _questions = <_CustomQuestion>[];
+  final Set<String> _votedIds = <String>{}; // je Frage-ID max. 1 Vote
   bool _showForm = false;
+  bool _loading = true;
+
+  static const _storeQuestionsKey = 'custom_questions_v1';
+  static const _storeVotesKey = 'custom_questions_voted_ids_v1';
+
+  @override
+  void initState() {
+    super.initState();
+    _initLoad();
+  }
+
+  Future<void> _initLoad() async {
+    await _storage.init();
+
+    // Votes laden
+    final voted = await _storage.loadJson<List<dynamic>>(_storeVotesKey, null);
+    if (voted != null) {
+      _votedIds.addAll(voted.map((e) => e.toString()));
+    }
+
+    // Fragen laden
+    final list = await _storage.loadJson<List<dynamic>>(_storeQuestionsKey, null);
+    if (list != null) {
+      _questions
+        ..clear()
+        ..addAll(
+          list.map((e) => _CustomQuestion.fromJson(Map<String, dynamic>.from(e))),
+        );
+    } else {
+      // Seed-Daten (lokal)
+      final now = DateTime.now().toUtc();
+      _questions.addAll([
+        _CustomQuestion(text: "Was hat dich heute wirklich berührt?", votes: 13, createdAt: now),
+        _CustomQuestion(text: "Wofür bist du dir selbst gerade dankbar?", votes: 21, createdAt: now),
+        _CustomQuestion(text: "Wann warst du zuletzt ehrlich zu dir selbst?", votes: 7, createdAt: now),
+      ]);
+      await _persistQuestions();
+    }
 
-  void _submitQuestion() {
-    final text = _controller.text.trim();
-    if (text.isNotEmpty) {
-      setState(() {
-        _questions.insert(0, Question(text: text, votes: 1));
-        _controller.clear();
-        _showForm = false;
+    if (mounted) setState(() => _loading = false);
+  }
+
+  Future<void> _persistQuestions() async {
+    try {
+      await _storage.saveJson(
+        _storeQuestionsKey,
+        _questions.map((q) => q.toJson()).toList(),
+      );
+    } catch (e) {
+      if (!mounted) return;
+      ZenToast.show(context, "Konnte Fragen nicht speichern.");
+    }
+  }
+
+  Future<void> _persistVotes() async {
+    try {
+      await _storage.saveJson(_storeVotesKey, _votedIds.toList());
+    } catch (e) {
+      if (!mounted) return;
+      ZenToast.show(context, "Konnte Stimme nicht speichern.");
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    _fieldFocus.dispose();
+    super.dispose();
+  }
+
+  // --- Actions ---------------------------------------------------------------
+
+  void _toggleForm() {
+    setState(() => _showForm = !_showForm);
+    if (_showForm) {
+      Future.delayed(const Duration(milliseconds: 150), () {
+        if (mounted) _fieldFocus.requestFocus();
       });
-      FocusScope.of(context).unfocus();
     }
   }
 
+  void _submitQuestion() async {
+    final raw = _controller.text;
+    final text = _sanitize(raw).trim();
+    if (text.isEmpty) return;
+
+    // Sanity: Länge
+    if (text.length < 10) {
+      ZenToast.show(context, "Bitte formuliere deine Frage etwas ausführlicher.");
+      return;
+    }
+    if (text.length > 160) {
+      ZenToast.show(context, "Max. 160 Zeichen, bitte leicht kürzen.");
+      return;
+    }
+
+    // Duplikat-Check (normalisiert: trim + Mehrfach-Whitespace -> 1)
+    String norm(String s) => s.toLowerCase().replaceAll(RegExp(r'\s+'), ' ').trim();
+    final dup = _questions.any((q) => norm(q.text) == norm(text));
+    if (dup) {
+      ZenToast.show(context, "Diese Frage gibt es bereits.");
+      return;
+    }
+
+    setState(() {
+      _questions.insert(
+        0,
+        _CustomQuestion(
+          text: text,
+          votes: 1,
+          createdAt: DateTime.now().toUtc(),
+        ),
+      );
+      _showForm = false;
+      _controller.clear();
+    });
+
+    await _persistQuestions();
+    ZenToast.show(context, "Danke für deine Inspiration 🌱");
+  }
+
+  void _voteQuestion(_CustomQuestion q) async {
+    if (_votedIds.contains(q.id)) return;
+    final idx = _questions.indexWhere((e) => e.id == q.id);
+    if (idx == -1) return;
+
+    setState(() {
+      _questions[idx] = _questions[idx].copyWith(votes: _questions[idx].votes + 1);
+      _votedIds.add(q.id);
+    });
+    await _persistQuestions();
+    await _persistVotes();
+  }
+
+  void _toggleFavorite(_CustomQuestion q) async {
+    final idx = _questions.indexWhere((e) => e.id == q.id);
+    if (idx == -1) return;
+
+    setState(() {
+      _questions[idx] = _questions[idx].copyWith(favorite: !_questions[idx].favorite);
+    });
+    await _persistQuestions();
+  }
+
+  // --- UI --------------------------------------------------------------------
+
   @override
   Widget build(BuildContext context) {
-    final accent = Theme.of(context).colorScheme.secondary;
+    const accent = ZenColors.jade;
+
     return ZenScaffold(
-      title: "Community-Impulse",
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          ZenBubble(
-            color: accent.withOpacity(0.11),
-            margin: const EdgeInsets.only(bottom: 18),
-            child: Row(
-              children: [
-                SvgPicture.asset("assets/icon_send.svg", height: 28),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Text(
-                    "Welche Frage würdest du gerne in die Community geben? Teile deine Inspiration!",
-                    style: const TextStyle(fontSize: 15),
-                  ),
-                ),
-                IconButton(
-                  icon: Icon(_showForm ? Icons.close : Icons.add_circle, color: accent),
-                  tooltip: "Neue Frage einreichen",
-                  onPressed: () => setState(() => _showForm = !_showForm),
-                ),
-              ],
-            ),
+      appBar: ZenAppBar(
+        title: "Deine Fragen an die Community",
+        actions: [
+          IconButton(
+            tooltip: _showForm ? "Formular schließen" : "Neue Frage einreichen",
+            icon: Icon(_showForm ? Icons.close : Icons.add_circle, color: accent),
+            onPressed: _toggleForm,
           ),
-          if (_showForm)
-            ZenBubble(
-              color: Colors.white,
-              margin: const EdgeInsets.only(bottom: 18),
-              child: Column(
-                children: [
-                  TextField(
-                    controller: _controller,
-                    maxLength: 120,
-                    decoration: const InputDecoration(
-                      hintText: "Deine Frage…",
-                      border: InputBorder.none,
-                      counterText: "",
-                    ),
-                    style: const TextStyle(fontSize: 16),
-                  ),
-                  Row(
-                    mainAxisAlignment: MainAxisAlignment.end,
+        ],
+      ),
+      child: _loading
+          ? const Center(child: CircularProgressIndicator())
+          : Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                ZenBubble(
+                  color: accent.withOpacity(0.10),
+                  margin: const EdgeInsets.only(bottom: 16),
+                  child: Row(
                     children: [
-                      ElevatedButton.icon(
-                        icon: const Icon(Icons.send),
-                        label: const Text("Einreichen"),
-                        onPressed: _submitQuestion,
-                        style: ElevatedButton.styleFrom(
-                          elevation: 0,
-                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
+                      const Icon(Icons.forum_rounded, color: ZenColors.jadeMid),
+                      const SizedBox(width: 10),
+                      Expanded(
+                        child: Text(
+                          "Welche Frage würdest du gerne in die Community geben? "
+                          "Teile deine Inspiration – anonym, freundlich, respektvoll.",
+                          style: ZenTextStyles.body.copyWith(fontSize: 15),
                         ),
                       ),
+                      const SizedBox(width: 6),
+                      IconButton(
+                        icon: Icon(_showForm ? Icons.expand_less : Icons.expand_more, color: accent),
+                        onPressed: _toggleForm,
+                        tooltip: _showForm ? "Formular schließen" : "Formular öffnen",
+                      ),
                     ],
                   ),
-                ],
-              ),
-            ),
-          const SizedBox(height: 10),
-          Expanded(
-            child: ListView.builder(
-              itemCount: _questions.length,
-              itemBuilder: (ctx, i) => ZenBubble(
-                color: Colors.white,
-                margin: const EdgeInsets.symmetric(vertical: 5),
-                child: Row(
-                  crossAxisAlignment: CrossAxisAlignment.center,
-                  children: [
-                    IconButton(
-                      icon: Icon(Icons.arrow_upward_rounded,
-                          color: i == 0 ? accent : Colors.grey),
-                      onPressed: () {
-                        setState(() => _questions[i].votes++);
-                      },
-                    ),
-                    Text(
-                      "${_questions[i].votes}",
-                      style: TextStyle(fontWeight: FontWeight.bold, color: accent, fontSize: 16),
-                    ),
-                    const SizedBox(width: 14),
-                    Expanded(
-                      child: Text(
-                        _questions[i].text,
-                        style: const TextStyle(fontSize: 15, fontWeight: FontWeight.w500),
-                      ),
-                    ),
-                    IconButton(
-                      icon: const Icon(Icons.star_border),
-                      tooltip: "Zu Favoriten",
-                      onPressed: () {
-                        // Optional: Frage zu Favoriten speichern
-                      },
-                    )
-                  ],
                 ),
-              ),
+
+                // Formular
+                AnimatedSwitcher(
+                  duration: const Duration(milliseconds: 220),
+                  child: _showForm
+                      ? ZenBubble(
+                          key: const ValueKey('form'),
+                          color: ZenColors.white,
+                          margin: const EdgeInsets.only(bottom: 16),
+                          child: Column(
+                            crossAxisAlignment: CrossAxisAlignment.stretch,
+                            children: [
+                              Semantics(
+                                textField: true,
+                                label: "Eigene Frage eingeben",
+                                child: TextField(
+                                  controller: _controller,
+                                  focusNode: _fieldFocus,
+                                  maxLength: 160,
+                                  minLines: 2,
+                                  maxLines: 4,
+                                  style: ZenTextStyles.body.copyWith(fontSize: 16.2),
+                                  decoration: const InputDecoration(
+                                    hintText: "Deine Frage …",
+                                    border: InputBorder.none,
+                                    counterText: "",
+                                  ),
+                                  onSubmitted: (_) => _submitQuestion(),
+                                ),
+                              ),
+                              Row(
+                                mainAxisAlignment: MainAxisAlignment.end,
+                                children: [
+                                  ElevatedButton.icon(
+                                    icon: const Icon(Icons.send),
+                                    label: const Text("Einreichen"),
+                                    onPressed: _submitQuestion,
+                                    style: ElevatedButton.styleFrom(
+                                      elevation: 0,
+                                      shape: RoundedRectangleBorder(
+                                        borderRadius: BorderRadius.circular(12),
+                                      ),
+                                    ),
+                                  ),
+                                ],
+                              ),
+                            ],
+                          ),
+                        )
+                      : const SizedBox.shrink(),
+                ),
+
+                const SizedBox(height: 6),
+
+                // Liste
+                Expanded(
+                  child: _questions.isEmpty
+                      ? Center(
+                          child: ZenBubble(
+                            color: ZenColors.white,
+                            padding: const EdgeInsets.symmetric(vertical: 22, horizontal: 18),
+                            child: Text(
+                              "Noch keine Fragen – sei die*der Erste 🌿",
+                              style: ZenTextStyles.body.copyWith(
+                                fontSize: 15.5,
+                                fontWeight: FontWeight.w600,
+                                color: ZenColors.jadeMid,
+                              ),
+                            ),
+                          ),
+                        )
+                      : ListView.builder(
+                          itemCount: _questions.length,
+                          itemBuilder: (ctx, i) {
+                            final q = _questions[i];
+                            final hasVoted = _votedIds.contains(q.id);
+
+                            return ZenBubble(
+                              color: ZenColors.white,
+                              margin: const EdgeInsets.symmetric(vertical: 6),
+                              child: Row(
+                                crossAxisAlignment: CrossAxisAlignment.center,
+                                children: [
+                                  // Upvote
+                                  Semantics(
+                                    button: true,
+                                    label: hasVoted
+                                        ? "Bereits abgestimmt. ${q.votes} Stimmen."
+                                        : "Abstimmen. Aktuell ${q.votes} Stimmen.",
+                                    child: IconButton(
+                                      iconSize: 26,
+                                      icon: Icon(
+                                        Icons.arrow_upward_rounded,
+                                        color: hasVoted ? ZenColors.sage : accent,
+                                      ),
+                                      onPressed: hasVoted ? null : () => _voteQuestion(q),
+                                      tooltip: hasVoted ? "Du hast bereits abgestimmt" : "Upvoten",
+                                    ),
+                                  ),
+
+                                  // Count
+                                  Padding(
+                                    padding: const EdgeInsets.only(right: 12),
+                                    child: Text(
+                                      "${q.votes}",
+                                      style: ZenTextStyles.h3.copyWith(
+                                        fontSize: 16.5,
+                                        color: accent,
+                                      ),
+                                    ),
+                                  ),
+
+                                  // Text
+                                  Expanded(
+                                    child: Text(
+                                      q.text,
+                                      style: ZenTextStyles.body.copyWith(
+                                        fontSize: 15.8,
+                                        fontWeight: FontWeight.w600,
+                                        height: 1.25,
+                                      ),
+                                    ),
+                                  ),
+
+                                  // Favorit
+                                  IconButton(
+                                    icon: Icon(
+                                      q.favorite ? Icons.star_rounded : Icons.star_border_rounded,
+                                      color: q.favorite ? ZenColors.gold : ZenColors.jadeMid,
+                                    ),
+                                    tooltip: q.favorite ? "Aus Favoriten entfernen" : "Zu Favoriten",
+                                    onPressed: () => _toggleFavorite(q),
+                                  ),
+                                ],
+                              ),
+                            );
+                          },
+                        ),
+                ),
+              ],
             ),
-          ),
-        ],
-      ),
     );
   }
+
+  // sehr vorsichtige, lokal/offline „Entschärfung“
+  String _sanitize(String s) {
+    // leichte Heuristik – vermeidet das Speichern roher Beleidigungen
+    const blocked = ['scheiße', 'blödmann'];
+    var out = s;
+    for (final b in blocked) {
+      out = out.replaceAll(RegExp(b, caseSensitive: false), '…');
+    }
+    return out;
+  }
 }
 
-// Helper Model
-class Question {
-  String text;
-  int votes;
-  Question({required this.text, this.votes = 1});
+// ============================================================================
+// Lokales Model (bewusst nicht global, um Konflikte mit models/question.dart
+// zu vermeiden). Minimal + robust serialisierbar. UTC-Zeitstempel.
+// ============================================================================
+class _CustomQuestion {
+  final String id;
+  final String text;
+  final int votes;
+  final DateTime createdAt; // UTC
+  final bool favorite;
+
+  _CustomQuestion({
+    String? id,
+    required this.text,
+    this.votes = 1,
+    DateTime? createdAt,
+    this.favorite = false,
+  })  : id = id ?? DateTime.now().toUtc().microsecondsSinceEpoch.toString(),
+        createdAt = (createdAt ?? DateTime.now().toUtc());
+
+  _CustomQuestion copyWith({
+    String? id,
+    String? text,
+    int? votes,
+    DateTime? createdAt,
+    bool? favorite,
+  }) {
+    return _CustomQuestion(
+      id: id ?? this.id,
+      text: text ?? this.text,
+      votes: votes ?? this.votes,
+      createdAt: createdAt ?? this.createdAt,
+      favorite: favorite ?? this.favorite,
+    );
+  }
+
+  Map<String, dynamic> toJson() => {
+        'id': id,
+        'text': text,
+        'votes': votes,
+        'createdAt': createdAt.toIso8601String(),
+        'favorite': favorite,
+      };
+
+  factory _CustomQuestion.fromJson(Map<String, dynamic> j) => _CustomQuestion(
+        id: j['id'] as String?,
+        text: (j['text'] as String?)?.trim() ?? '',
+        votes: (j['votes'] as num?)?.toInt() ?? 1,
+        createdAt: DateTime.tryParse(j['createdAt'] as String? ?? '')?.toUtc() ?? DateTime.now().toUtc(),
+        favorite: j['favorite'] as bool? ?? false,
+      );
 }
diff --git a/zen_project1337/lib/features/community/question_voting.dart b/zen_project1337/lib/features/community/question_voting.dart
index 26fb3b8..ba9b689 100644
--- a/zen_project1337/lib/features/community/question_voting.dart
+++ b/zen_project1337/lib/features/community/question_voting.dart
@@ -1,10 +1,21 @@
 // lib/features/community/question_voting.dart
+//
+// CommunityQuestionVoting — Oxford Zen Edition
+// --------------------------------------------
+// • Sanftes, glasiges Layout mit Zen-DNA (Farben/Typo aus zen_style.dart)
+// • Lokales Upvote-Tracking (persistiert), 1 Vote pro Frage/Device
+// • A11y: Semantics, große Tap-Ziele, klare Statusmeldungen
+// • Saubere State- und Animations-Logik, deterministische Sortierung
 
+import 'dart:ui';
 import 'package:flutter/material.dart';
-import 'package:zenyourself/models/question.dart';
+import 'package:zenyourself/models/community_question.dart';
 import 'package:zenyourself/shared/ui/zen_widgets.dart';
+import 'package:zenyourself/shared/zen_style.dart';
+import 'package:zenyourself/services/local_storage.dart';
+
+enum _SortMode { top, neu }
 
-/// Widget für Community-Fragen mit Voting
 class CommunityQuestionVoting extends StatefulWidget {
   const CommunityQuestionVoting({Key? key}) : super(key: key);
 
@@ -12,88 +23,325 @@ class CommunityQuestionVoting extends StatefulWidget {
   State<CommunityQuestionVoting> createState() => _CommunityQuestionVotingState();
 }
 
-class _CommunityQuestionVotingState extends State<CommunityQuestionVoting> {
-  late List<Question> _questions;
+class _CommunityQuestionVotingState extends State<CommunityQuestionVoting>
+    with SingleTickerProviderStateMixin {
+  final _storage = LocalStorageService();
+
+  late List<CommunityQuestion> _questions;
   final Set<String> _votedIds = {};
+  _SortMode _sort = _SortMode.top;
+
+  String? _toastMessage;
+  late AnimationController _toastController;
+
+  static const _votedKey = 'community_voted_ids_v1';
 
   @override
   void initState() {
     super.initState();
-    // Dummy-Fragen für die Demo – IDs als String!
+    final now = DateTime.now().toUtc();
     _questions = [
-      Question(id: '1', text: "Was hast du heute über dich gelernt?", votes: 8),
-      Question(id: '2', text: "Was gibt dir im Moment Kraft?", votes: 6),
-      Question(id: '3', text: "Was würdest du deinem jüngeren Ich sagen?", votes: 10),
+      CommunityQuestion(id: '1', text: "Hast du heute etwas über dich gelernt?", votes: 8, createdAt: now),
+      CommunityQuestion(id: '2', text: "Hat dir ZenYourSelf heute geholfen?", votes: 6, createdAt: now.subtract(const Duration(minutes: 3))),
+      CommunityQuestion(id: '3', text: "Wünschst du dir mehr Features in ZenYourSelf?", votes: 10, createdAt: now.subtract(const Duration(minutes: 5))),
     ];
+    _toastController = AnimationController(vsync: this, duration: const Duration(milliseconds: 1400));
+    _loadVoted();
+  }
+
+  Future<void> _loadVoted() async {
+    await _storage.init();
+    final raw = await _storage.loadJson<List<dynamic>>(_votedKey, null);
+    if (raw != null) {
+      setState(() => _votedIds.addAll(raw.map((e) => e.toString())));
+    }
+  }
+
+  Future<void> _persistVoted() async {
+    await _storage.saveJson(_votedKey, _votedIds.toList());
   }
 
-  void _vote(String id) {
+  @override
+  void dispose() {
+    _toastController.dispose();
+    super.dispose();
+  }
+
+  void _vote(String id) async {
     final idx = _questions.indexWhere((q) => q.id == id);
-    if (idx != -1 && !_votedIds.contains(id)) {
-      setState(() {
-        _questions[idx] = _questions[idx].copyWith(votes: _questions[idx].votes + 1);
-        _votedIds.add(id);
-      });
+    if (idx == -1 || _votedIds.contains(id)) return;
+
+    setState(() {
+      _questions[idx] = _questions[idx].copyWith(votes: _questions[idx].votes + 1);
+      _votedIds.add(id);
+      _toastMessage = "Danke für deine Wertschätzung 🌱";
+    });
+    _persistVoted();
+
+    _toastController.forward(from: 0);
+    await Future.delayed(const Duration(milliseconds: 1600));
+    if (!mounted) return;
+    setState(() => _toastMessage = null);
+  }
+
+  List<CommunityQuestion> get _sorted {
+    final list = [..._questions];
+    switch (_sort) {
+      case _SortMode.top:
+        list.sort((a, b) {
+          final byVotes = b.votes.compareTo(a.votes);
+          return byVotes != 0 ? byVotes : a.createdAt.compareTo(b.createdAt);
+        });
+        break;
+      case _SortMode.neu:
+        list.sort((a, b) => b.createdAt.compareTo(a.createdAt));
+        break;
     }
+    return list;
   }
 
   @override
   Widget build(BuildContext context) {
-    return ZenCard(
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.stretch,
+    return Scaffold(
+      extendBodyBehindAppBar: true,
+      backgroundColor: Colors.transparent,
+      body: Stack(
         children: [
-          const SizedBox(height: 8),
-          const Text("Community Impulse", style: ZenTypography.headline),
-          const SizedBox(height: 18),
-          ..._questions.map((q) => _buildQuestion(q)).toList(),
+          // 1) Softes Community-Backdrop
+          Positioned.fill(
+            child: Image.asset(
+              'assets/startbild5.png',
+              fit: BoxFit.cover,
+              alignment: Alignment.center,
+            ),
+          ),
+          // 2) Nebelschleier oben
+          Positioned(
+            top: 0, left: 0, right: 0, height: 160,
+            child: Container(
+              decoration: BoxDecoration(
+                gradient: LinearGradient(
+                  colors: [Colors.white.withOpacity(0.20), Colors.transparent],
+                  begin: Alignment.topCenter,
+                  end: Alignment.bottomCenter,
+                ),
+              ),
+            ),
+          ),
+          // 3) Glas-Karte mit Inhalt
+          Center(
+            child: Padding(
+              padding: const EdgeInsets.symmetric(vertical: 44, horizontal: 12),
+              child: ClipRRect(
+                borderRadius: BorderRadius.circular(30),
+                child: BackdropFilter(
+                  filter: ImageFilter.blur(sigmaX: 11, sigmaY: 11),
+                  child: Container(
+                    constraints: const BoxConstraints(maxWidth: 520),
+                    decoration: BoxDecoration(
+                      color: ZenColors.white.withOpacity(0.82),
+                      borderRadius: BorderRadius.circular(30),
+                      boxShadow: [ZenShadows.card],
+                      border: Border.all(color: ZenColors.jadeMid.withOpacity(0.08), width: 1.2),
+                    ),
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(vertical: 28, horizontal: 18),
+                      child: Column(
+                        mainAxisSize: MainAxisSize.min,
+                        children: [
+                          // Header
+                          Text(
+                            "Raum für echte Inspiration",
+                            textAlign: TextAlign.center,
+                            style: ZenTextStyles.h2.copyWith(
+                              fontSize: 23,
+                              color: ZenColors.jade,
+                              shadows: const [Shadow(blurRadius: 8, color: Colors.white24, offset: Offset(0, 2))],
+                            ),
+                          ),
+                          const SizedBox(height: 6),
+                          Text(
+                            "Teile, was dich bewegt. Lass dich berühren.",
+                            textAlign: TextAlign.center,
+                            style: ZenTextStyles.body.copyWith(
+                              color: ZenColors.jadeMid,
+                              fontWeight: FontWeight.w600,
+                            ),
+                          ),
+                          const SizedBox(height: 16),
+
+                          // Sort / Filter
+                          _SortChips(
+                            mode: _sort,
+                            onChanged: (m) => setState(() => _sort = m),
+                          ),
+
+                          const SizedBox(height: 8),
+
+                          // Fragenliste
+                          ..._sorted.map((q) => _QuestionBubble(
+                                q: q,
+                                hasVoted: _votedIds.contains(q.id),
+                                onVote: () => _vote(q.id),
+                              )),
+
+                          const SizedBox(height: 14),
+                          // CTA: Frage stellen (Stub)
+                          OutlinedButton.icon(
+                            icon: const Icon(Icons.add_comment_rounded, color: ZenColors.jade),
+                            label: const Text("Frage stellen"),
+                            style: OutlinedButton.styleFrom(
+                              foregroundColor: ZenColors.jade,
+                              side: const BorderSide(color: ZenColors.jade, width: 1.2),
+                              backgroundColor: Colors.white.withOpacity(0.75),
+                              textStyle: const TextStyle(fontWeight: FontWeight.w600, fontSize: 16),
+                              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
+                              padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
+                            ),
+                            onPressed: () => ZenToast.show(context, "Fragen posten – kommt bald!"),
+                          ),
+                          const SizedBox(height: 6),
+                          Text(
+                            "Dein Beitrag bleibt anonym. Jeder Gedanke zählt.",
+                            textAlign: TextAlign.center,
+                            style: ZenTextStyles.caption.copyWith(color: ZenColors.inkSubtle),
+                          ),
+                        ],
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ),
+          ),
+
+          // 4) Dankes-Toast
+          if (_toastMessage != null)
+            Positioned(
+              bottom: 44, left: 0, right: 0,
+              child: FadeTransition(
+                opacity: CurvedAnimation(parent: _toastController, curve: Curves.easeInOut),
+                child: Center(
+                  child: Semantics(
+                    label: _toastMessage!,
+                    liveRegion: true,
+                    child: Container(
+                      padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 22),
+                      decoration: BoxDecoration(
+                        color: Colors.white.withOpacity(0.95),
+                        borderRadius: BorderRadius.circular(23),
+                        boxShadow: [ZenShadows.card],
+                        border: Border.all(color: ZenColors.jadeMid.withOpacity(0.10)),
+                      ),
+                      child: Text(
+                        _toastMessage!,
+                        style: ZenTextStyles.body.copyWith(
+                          color: ZenColors.jade,
+                          fontWeight: FontWeight.w700,
+                        ),
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ),
         ],
       ),
     );
   }
+}
+
+// -------------------- Widgets --------------------
 
-  Widget _buildQuestion(Question q) {
-    final hasVoted = _votedIds.contains(q.id);
+class _SortChips extends StatelessWidget {
+  final _SortMode mode;
+  final ValueChanged<_SortMode> onChanged;
+  const _SortChips({required this.mode, required this.onChanged});
+
+  @override
+  Widget build(BuildContext context) {
+    Widget chip(_SortMode m, String label) {
+      final selected = mode == m;
+      return Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 4),
+        child: ChoiceChip(
+          label: Text(label),
+          selected: selected,
+          onSelected: (_) => onChanged(m),
+          labelStyle: ZenTextStyles.caption.copyWith(
+            fontWeight: FontWeight.w700,
+            color: selected ? Colors.white : ZenColors.jade,
+          ),
+          backgroundColor: ZenColors.white,
+          selectedColor: ZenColors.jade,
+          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
+          side: BorderSide(color: ZenColors.jade.withOpacity(0.20)),
+        ),
+      );
+    }
+
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: [
+        chip(_SortMode.top, "Top"),
+        chip(_SortMode.neu, "Neu"),
+      ],
+    );
+  }
+}
+
+class _QuestionBubble extends StatelessWidget {
+  final CommunityQuestion q;
+  final bool hasVoted;
+  final VoidCallback onVote;
+
+  const _QuestionBubble({
+    required this.q,
+    required this.hasVoted,
+    required this.onVote,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final baseColor = hasVoted ? ZenColors.sage : ZenColors.jadeMid;
+    final bg = hasVoted ? ZenColors.sage.withOpacity(0.12) : Colors.white.withOpacity(0.98);
 
-    return GestureDetector(
-      onTap: hasVoted ? null : () => _vote(q.id),
-      child: Container(
+    return Semantics(
+      container: true,
+      label:
+          "Frage: ${q.text}. Aktuelle Stimmen: ${q.votes}. ${hasVoted ? "Bereits abgestimmt." : "Zum Abstimmen tippen."}",
+      child: AnimatedContainer(
+        duration: const Duration(milliseconds: 320),
+        curve: Curves.easeOutCubic,
         margin: const EdgeInsets.only(bottom: 14),
-        padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
+        padding: const EdgeInsets.symmetric(vertical: 13, horizontal: 13),
         decoration: BoxDecoration(
-          color: hasVoted ? ZenColors.jadeGreen.withOpacity(0.20) : ZenColors.zenWhite,
-          border: Border.all(
-            color: hasVoted ? ZenColors.jadeGreen : ZenColors.oxfordBlue.withOpacity(0.22),
-            width: 1.2,
-          ),
-          borderRadius: BorderRadius.circular(15),
+          color: bg,
+          borderRadius: BorderRadius.circular(19),
+          boxShadow: hasVoted ? [] : [ZenShadows.soft],
+          border: Border.all(color: baseColor.withOpacity(hasVoted ? 0.40 : 0.12), width: 1.1),
         ),
         child: Row(
+          crossAxisAlignment: CrossAxisAlignment.start,
           children: [
+            const Icon(Icons.bubble_chart_rounded, color: ZenColors.jadeMid, size: 22),
+            const SizedBox(width: 10),
             Expanded(
               child: Text(
                 q.text,
-                style: ZenTypography.body.copyWith(
+                style: ZenTextStyles.body.copyWith(
+                  fontSize: 16.5,
+                  height: 1.28,
+                  color: ZenColors.inkStrong,
                   fontWeight: FontWeight.w600,
-                  color: ZenColors.oxfordBlue,
                 ),
               ),
             ),
-            const SizedBox(width: 18),
-            Container(
-              padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 6),
-              decoration: BoxDecoration(
-                color: hasVoted ? ZenColors.jadeGreen : ZenColors.oxfordBlue,
-                borderRadius: BorderRadius.circular(12),
-              ),
-              child: Text(
-                "${q.votes}",
-                style: ZenTypography.body.copyWith(
-                  color: Colors.white,
-                  fontWeight: FontWeight.bold,
-                  fontSize: 15,
-                ),
-              ),
+            const SizedBox(width: 10),
+            _VoteButton(
+              votes: q.votes,
+              hasVoted: hasVoted,
+              onTap: onVote,
             ),
           ],
         ),
@@ -102,39 +350,45 @@ class _CommunityQuestionVotingState extends State<CommunityQuestionVoting> {
   }
 }
 
-// Erweiterung für Question, falls copyWith nicht im Model definiert ist
-extension QuestionCopy on Question {
-  Question copyWith({
-    String? id,
-    String? text,
-    int? votes,
-    String? category,
-    List<String>? tags,
-    List<String>? options,
-    int? priority,
-    bool? isSystem,
-    String? author,
-    int? usageCount,
-    DateTime? createdAt,
-    bool? adultsOnly,
-    bool? canExport,
-    String? extra,
-  }) {
-    return Question(
-      id: id ?? this.id,
-      text: text ?? this.text,
-      category: category ?? this.category,
-      tags: tags ?? this.tags,
-      options: options ?? this.options,
-      priority: priority ?? this.priority,
-      isSystem: isSystem ?? this.isSystem,
-      author: author ?? this.author,
-      usageCount: usageCount ?? this.usageCount,
-      createdAt: createdAt ?? this.createdAt,
-      votes: votes ?? this.votes,
-      adultsOnly: adultsOnly ?? this.adultsOnly,
-      canExport: canExport ?? this.canExport,
-      extra: extra ?? this.extra,
+class _VoteButton extends StatelessWidget {
+  final int votes;
+  final bool hasVoted;
+  final VoidCallback onTap;
+
+  const _VoteButton({
+    required this.votes,
+    required this.hasVoted,
+    required this.onTap,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final c = hasVoted ? ZenColors.sage : ZenColors.jade;
+    return Semantics(
+      button: true,
+      label: hasVoted ? "Bereits abgestimmt. $votes Stimmen." : "Abstimmen. Aktuell $votes Stimmen.",
+      child: GestureDetector(
+        onTap: hasVoted ? null : onTap,
+        child: AnimatedContainer(
+          duration: const Duration(milliseconds: 220),
+          padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
+          decoration: BoxDecoration(
+            color: c,
+            borderRadius: BorderRadius.circular(15),
+            boxShadow: hasVoted ? [] : [ZenShadows.soft],
+          ),
+          child: Row(
+            children: [
+              const Icon(Icons.favorite_rounded, color: Colors.white, size: 18),
+              const SizedBox(width: 5),
+              Text(
+                "$votes",
+                style: ZenTextStyles.button.copyWith(fontSize: 15.5, color: Colors.white),
+              ),
+            ],
+          ),
+        ),
+      ),
     );
   }
-}
\ No newline at end of file
+}
diff --git a/zen_project1337/lib/features/impulse/impulse_screen.dart b/zen_project1337/lib/features/impulse/impulse_screen.dart
index 9517dba..fe4504e 100644
--- a/zen_project1337/lib/features/impulse/impulse_screen.dart
+++ b/zen_project1337/lib/features/impulse/impulse_screen.dart
@@ -1,14 +1,41 @@
+// lib/features/impulse/impulse_screen.dart
+//
+// ImpulseScreen — Oxford Zen Edition (Pro-Level, swipe + share + save)
+// -------------------------------------------------------------------
+// • Swipe durch Impulse (PageView), sanfte Fade/Scale-Transitions
+// • Ruhiger Hintergrund mit Gradient & Fallbacks (kein Crash bei fehlendem Bild)
+// • A11y: Semantics-Labels, große Tap-Ziele, klare Hierarchie
+// • Soundscape-Toggle + pro-Impulse-Audio (nutzt vorhandene assets/audio/*.mp3)
+// • Quick-Actions: Teilen, Als Gedanke speichern, Nächster Impuls
+// • Defensiv: kein blindes Vertrauen in Provider/Assets; weiche Fehlerbehandlung
+
+import 'dart:ui' show ImageFilter;
 import 'package:flutter/material.dart';
-import 'package:lottie/lottie.dart';
+import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
-import '../../audio/soundscape_manager.dart';
+import 'package:share_plus/share_plus.dart';
+
+import '../../shared/zen_style.dart';
 import '../../shared/ui/zen_widgets.dart';
+import '../../audio/soundscape_manager.dart';
+import '../../models/journal_entries_provider.dart';
+
+const Duration _animShort = Duration(milliseconds: 160);
+const Duration _animMed = Duration(milliseconds: 260);
+
+class ZenImpulse {
+  final String title;
+  final String text;
+  final String image; // Background pro Impuls (Asset)
+  final String audio; // Lokales Audio-Asset (nutzt SoundscapeManager)
 
-/// ImpulseScreen – Spielerische, inspirierende Micro-Coachings und Tagesimpulse.
-/// - Animierte Zen-Karten (SVG/Lottie)
-/// - Täglicher Impuls, Mini-Challenge oder Meditations-Call
-/// - Audiounterstützung, Soundscape/Voice optional
-/// - "Nächster Impuls"-Button für Abwechslung
+  const ZenImpulse({
+    required this.title,
+    required this.text,
+    required this.image,
+    required this.audio,
+  });
+}
 
 class ImpulseScreen extends StatefulWidget {
   const ImpulseScreen({super.key});
@@ -17,120 +44,226 @@ class ImpulseScreen extends StatefulWidget {
   State<ImpulseScreen> createState() => _ImpulseScreenState();
 }
 
-class _ImpulseScreenState extends State<ImpulseScreen> {
-  int _current = 0;
+class _ImpulseScreenState extends State<ImpulseScreen>
+    with SingleTickerProviderStateMixin {
+  late final PageController _page;
+  late final AnimationController _glowCtrl;
 
-  // Beispielhafte Zen-Impulse (kann aus Backend/API kommen)
-  final List<ZenImpulse> _impulses = [
+  int _index = 0;
+
+  // Kurze, klare Impulse – ruhig formuliert, nicht belehrend.
+  // Audio nutzt DEINE vorhandenen Assets (siehe pubspec: assets/audio/*).
+  final List<ZenImpulse> _impulses = const [
     ZenImpulse(
-      title: "Atem beobachten",
-      text: "Schließe für eine Minute die Augen. Spüre, wie dein Atem kommt und geht, ohne ihn zu steuern.",
-      animation: "assets/lottie/zen_breath.json",
-      audio: "audio/breath.mp3",
+      title: 'Atem beobachten',
+      text:
+          'Nimm einen Moment wahr, ohne etwas zu tun. Spüre deinen Atem – Ein, Aus. Mehr braucht es gerade nicht.',
+      image: 'assets/startbild4.png',
+      audio: 'assets/audio/neutral_flow.mp3',
     ),
     ZenImpulse(
-      title: "Der innere Garten",
-      text: "Stell dir vor, dein Geist ist ein Garten. Was braucht er heute, um zu blühen?",
-      animation: "assets/lottie/zen_garden.json",
-      audio: "audio/garden.mp3",
+      title: 'Der innere Garten',
+      text:
+          'Stell dir deinen Geist als Garten vor. Was wächst? Was darf gelockert werden? Was braucht Wasser – oder Ruhe?',
+      image: 'assets/startbild5.png',
+      audio: 'assets/audio/birds_garden.mp3',
     ),
     ZenImpulse(
-      title: "Mini-Challenge",
-      text: "Heute: Sag dir selbst einmal bewusst ‚Ich bin genug‘.",
-      animation: "assets/lottie/zen_selflove.json",
-      audio: "audio/selflove.mp3",
+      title: 'Kleine Freundlichkeit',
+      text:
+          'Wem – oder dir selbst – kannst du heute eine kleine Freundlichkeit schenken? Mach sie winzig. Aber echt.',
+      image: 'assets/startbild6.png',
+      audio: 'assets/audio/sunshine_zen.mp3',
     ),
     ZenImpulse(
-      title: "Zen-Koan",
-      text: "Was ist deine größte Stärke, wenn niemand zuschaut?",
-      animation: "assets/lottie/zen_koan.json",
-      audio: "audio/koan.mp3",
+      title: 'Zen-Koan',
+      text:
+          'Wer bist du, wenn niemand zusieht? Lass die Frage wirken. Keine Eile. Nur Raum.',
+      image: 'assets/startbild3.png',
+      audio: 'assets/audio/clouds_ambience.mp3',
     ),
   ];
 
-  void _nextImpulse() {
-    setState(() {
-      _current = (_current + 1) % _impulses.length;
-    });
-    // Optional: Soundscape wechseln, kleine Animation abspielen etc.
+  @override
+  void initState() {
+    super.initState();
+    _page = PageController();
+    _glowCtrl = AnimationController(vsync: this, duration: const Duration(seconds: 3))
+      ..repeat(reverse: true);
+  }
+
+  @override
+  void dispose() {
+    _glowCtrl.dispose();
+    _page.dispose();
+    super.dispose();
+  }
+
+  void _next() {
+    final next = (_index + 1).clamp(0, _impulses.length - 1);
+    if (next == _index) {
+      HapticFeedback.selectionClick();
+      ZenToast.show(context, 'Letzter Impuls erreicht');
+      return;
+    }
+    _page.animateToPage(
+      next,
+      duration: _animMed,
+      curve: Curves.easeOutCubic,
+    );
+  }
+
+  Future<void> _playAudio(ZenImpulse imp) async {
+    try {
+      await context.read<SoundscapeManager>().play(imp.audio, fadeIn: 1.2);
+      ZenToast.show(context, 'Audio gestartet');
+    } catch (_) {
+      ZenToast.show(context, 'Audio nicht verfügbar');
+    }
+    HapticFeedback.lightImpact();
+  }
+
+  Future<void> _share(ZenImpulse imp) async {
+    final text = '${imp.title}\n\n${imp.text}';
+    await Share.share(text, subject: 'Zen-Impuls');
+    HapticFeedback.selectionClick();
+  }
+
+  Future<void> _saveAsNote(ZenImpulse imp) async {
+    try {
+      final p = context.read<JournalEntriesProvider>();
+      p.addDiary(text: '${imp.title}\n\n${imp.text}', moodLabel: 'Neutral');
+      ZenToast.show(context, 'Als Gedanke gespeichert');
+    } catch (_) {
+      ZenToast.show(context, 'Konnte nicht speichern');
+    }
+    HapticFeedback.lightImpact();
   }
 
   @override
   Widget build(BuildContext context) {
-    final zen = _impulses[_current];
-    final theme = Theme.of(context);
+    final isWide = MediaQuery.of(context).size.width >= 680;
 
     return Scaffold(
       extendBodyBehindAppBar: true,
       appBar: ZenAppBar(
-        title: "Impulse",
-        showBack: false,
-        onSoundscapeTap: () => SoundscapeManager.of(context).toggle(),
+        title: 'Impulse',
+        showBack: true,
+        actions: [
+          IconButton(
+            icon: const Icon(Icons.music_note_rounded, color: ZenColors.jade),
+            tooltip: 'Soundscape wechseln',
+            onPressed: () => context.read<SoundscapeManager>().toggle(),
+          ),
+        ],
       ),
       body: Stack(
         children: [
-          Positioned.fill(child: ZenBackground()),
-          Center(
-            child: SingleChildScrollView(
-              child: Column(
-                mainAxisAlignment: MainAxisAlignment.center,
-                children: [
-                  // Zen-Animation (Lottie oder SVG, fallback: Icon)
-                  Container(
-                    constraints: const BoxConstraints(maxWidth: 320, maxHeight: 220),
-                    child: Lottie.asset(
-                      zen.animation,
-                      repeat: false,
-                      fit: BoxFit.contain,
-                    ),
-                  ),
-                  const SizedBox(height: 22),
-                  // Zen-Impuls Karte
-                  Card(
-                    color: Colors.white.withOpacity(0.98),
-                    elevation: 5,
-                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(24)),
-                    child: Padding(
-                      padding: const EdgeInsets.symmetric(vertical: 24, horizontal: 22),
+          // Hintergrund (Bild → Wash → leichter Blur → Gradient)
+          Positioned.fill(child: _SafeBg(asset: _impulses[_index].image)),
+          const Positioned.fill(
+            child: DecoratedBox(decoration: BoxDecoration(gradient: ZenGradients.screen)),
+          ),
+          Positioned.fill(
+            child: BackdropFilter(
+              filter: ImageFilter.blur(sigmaX: 2.5, sigmaY: 2.5),
+              child: const SizedBox.shrink(),
+            ),
+          ),
+
+          // Panda-Badge (klein, freundlich)
+          Positioned(
+            top: 72,
+            right: 24,
+            child: _PandaBadge(glowCtrl: _glowCtrl),
+          ),
+
+          // Inhalt: PageView mit sanftem Wechsel
+          SafeArea(
+            child: Center(
+              child: AnimatedSwitcher(
+                duration: _animMed,
+                switchInCurve: Curves.easeOutCubic,
+                switchOutCurve: Curves.easeInCubic,
+                layoutBuilder: (current, previous) => Stack(
+                  alignment: Alignment.center,
+                  children: [...previous, if (current != null) current],
+                ),
+                transitionBuilder: (child, animation) {
+                  final fade = CurvedAnimation(
+                    parent: animation,
+                    curve: Curves.easeOutCubic,
+                    reverseCurve: Curves.easeInCubic,
+                  );
+                  final scale = Tween<double>(begin: 0.985, end: 1.0).animate(fade);
+                  return FadeTransition(opacity: fade, child: ScaleTransition(scale: scale, child: child));
+                },
+                child: Padding(
+                  key: ValueKey(_index),
+                  padding: EdgeInsets.fromLTRB(20, isWide ? 40 : 24, 20, isWide ? 40 : 24),
+                  child: ConstrainedBox(
+                    constraints: const BoxConstraints(maxWidth: 560),
+                    child: ZenCard(
+                      color: Colors.white.withOpacity(.94),
+                      borderRadius: const BorderRadius.all(ZenRadii.l),
+                      elevation: 6,
+                      padding: const EdgeInsets.fromLTRB(22, 22, 22, 18),
+                      showWatermark: true,
                       child: Column(
                         mainAxisSize: MainAxisSize.min,
                         children: [
-                          Text(
-                            zen.title,
-                            style: theme.textTheme.titleLarge?.copyWith(
-                              fontWeight: FontWeight.bold,
-                              color: const Color(0xFF365486),
-                              fontSize: 22,
+                          // PageView (ein Card-Inhalt je Page)
+                          SizedBox(
+                            height: isWide ? 300 : 320,
+                            child: PageView.builder(
+                              controller: _page,
+                              physics: const BouncingScrollPhysics(),
+                              onPageChanged: (i) => setState(() => _index = i),
+                              itemCount: _impulses.length,
+                              itemBuilder: (_, i) => _ImpulseCardBody(
+                                impulse: _impulses[i],
+                                onPlay: () => _playAudio(_impulses[i]),
+                                onShare: () => _share(_impulses[i]),
+                                onSave: () => _saveAsNote(_impulses[i]),
+                              ),
                             ),
                           ),
-                          const SizedBox(height: 13),
-                          Text(
-                            zen.text,
-                            style: theme.textTheme.bodyLarge?.copyWith(
-                              color: Colors.black87,
-                              fontSize: 17,
-                            ),
-                            textAlign: TextAlign.center,
-                          ),
-                          const SizedBox(height: 18),
-                          // Audioplayer-Button (optional)
-                          ZenAudioButton(asset: zen.audio),
+                          const SizedBox(height: 14),
+
+                          // Dots
+                          _Dots(count: _impulses.length, index: _index),
                         ],
                       ),
                     ),
                   ),
-                  const SizedBox(height: 30),
-                  ElevatedButton.icon(
-                    icon: const Icon(Icons.bolt_rounded, color: Color(0xFFFFD580)),
-                    label: const Text("Nächster Impuls"),
-                    style: ElevatedButton.styleFrom(
-                      backgroundColor: theme.primaryColor,
-                      foregroundColor: Colors.white,
-                      padding: const EdgeInsets.symmetric(horizontal: 32, vertical: 15),
-                      textStyle: const TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
-                      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
+                ),
+              ),
+            ),
+          ),
+
+          // Quick Actions unten
+          Positioned(
+            left: ZenSpacing.l,
+            right: ZenSpacing.l,
+            bottom: ZenSpacing.xl,
+            child: SafeArea(
+              top: false,
+              child: Row(
+                children: [
+                  Expanded(
+                    child: ZenOutlineButton(
+                      label: 'Teilen',
+                      icon: Icons.ios_share_rounded,
+                      onPressed: () => _share(_impulses[_index]),
+                    ),
+                  ),
+                  const SizedBox(width: 12),
+                  Expanded(
+                    child: ZenPrimaryButton(
+                      label: 'Nächster Impuls',
+                      icon: Icons.refresh_rounded,
+                      onPressed: _next,
                     ),
-                    onPressed: _nextImpulse,
                   ),
                 ],
               ),
@@ -142,17 +275,204 @@ class _ImpulseScreenState extends State<ImpulseScreen> {
   }
 }
 
-/// Model für einen Zen-Impuls
-class ZenImpulse {
-  final String title;
-  final String text;
-  final String animation; // Lottie-File
-  final String audio;     // Audio-File
+// ===== Subwidgets =============================================================
 
-  ZenImpulse({
-    required this.title,
-    required this.text,
-    required this.animation,
-    required this.audio,
+class _ImpulseCardBody extends StatelessWidget {
+  final ZenImpulse impulse;
+  final VoidCallback onPlay;
+  final VoidCallback onShare;
+  final VoidCallback onSave;
+
+  const _ImpulseCardBody({
+    required this.impulse,
+    required this.onPlay,
+    required this.onShare,
+    required this.onSave,
   });
+
+  @override
+  Widget build(BuildContext context) {
+    return SelectionArea(
+      child: Column(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          // Headline
+          Semantics(
+            header: true,
+            child: Text(
+              impulse.title,
+              textAlign: TextAlign.center,
+              style: ZenTextStyles.h2.copyWith(
+                color: ZenColors.jade,
+                fontSize: 22,
+                fontWeight: FontWeight.w800,
+                letterSpacing: .2,
+              ),
+            ),
+          ),
+          const SizedBox(height: 12),
+          // Text
+          Text(
+            impulse.text,
+            textAlign: TextAlign.center,
+            style: ZenTextStyles.body.copyWith(
+              color: ZenColors.inkStrong,
+              fontSize: 17,
+              height: 1.36,
+            ),
+          ),
+          const SizedBox(height: 18),
+
+          // Audio + Save Row
+          Row(
+            mainAxisAlignment: MainAxisAlignment.center,
+            children: [
+              _AudioButton(onPressed: onPlay),
+              const SizedBox(width: 10),
+              OutlinedButton.icon(
+                onPressed: onSave,
+                icon: const Icon(Icons.bookmark_add_outlined, color: ZenColors.jade),
+                label: const Text('Als Gedanke'),
+                style: OutlinedButton.styleFrom(
+                  foregroundColor: ZenColors.jade,
+                  side: const BorderSide(color: ZenColors.jade, width: 1.1),
+                  padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 14),
+                  shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.m)),
+                  textStyle: const TextStyle(fontWeight: FontWeight.w700, fontSize: 15.5),
+                ),
+              ),
+              const SizedBox(width: 10),
+              OutlinedButton.icon(
+                onPressed: onShare,
+                icon: const Icon(Icons.ios_share_rounded, color: ZenColors.jade),
+                label: const Text('Teilen'),
+                style: OutlinedButton.styleFrom(
+                  foregroundColor: ZenColors.jade,
+                  side: const BorderSide(color: ZenColors.jade, width: 1.1),
+                  padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 14),
+                  shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.m)),
+                  textStyle: const TextStyle(fontWeight: FontWeight.w700, fontSize: 15.5),
+                ),
+              ),
+            ],
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+class _AudioButton extends StatelessWidget {
+  final VoidCallback onPressed;
+  const _AudioButton({required this.onPressed});
+
+  @override
+  Widget build(BuildContext context) {
+    return Semantics(
+      button: true,
+      label: 'Audio abspielen',
+      hint: 'Tippen, um den Impuls als Audio zu hören',
+      child: OutlinedButton.icon(
+        onPressed: onPressed,
+        icon: const Icon(Icons.play_arrow_rounded, color: ZenColors.jade),
+        label: const Text('Abspielen'),
+        style: OutlinedButton.styleFrom(
+          foregroundColor: ZenColors.jade,
+          side: const BorderSide(color: ZenColors.jade, width: 1.1),
+          padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 18),
+          shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.m)),
+          textStyle: const TextStyle(fontWeight: FontWeight.w700, fontSize: 16),
+        ),
+      ),
+    );
+  }
+}
+
+class _PandaBadge extends StatelessWidget {
+  final AnimationController glowCtrl;
+  const _PandaBadge({required this.glowCtrl});
+
+  @override
+  Widget build(BuildContext context) {
+    return AnimatedBuilder(
+      animation: glowCtrl,
+      builder: (_, __) {
+        final blur = 14.0 + 12.0 * glowCtrl.value;
+        return Container(
+          decoration: BoxDecoration(
+            shape: BoxShape.circle,
+            boxShadow: [
+              BoxShadow(
+                color: ZenColors.jade.withOpacity(.10 + .10 * glowCtrl.value),
+                blurRadius: blur,
+                spreadRadius: 2.0 + 2.0 * glowCtrl.value,
+              ),
+            ],
+          ),
+          child: Image.asset(
+            'assets/panda.png',
+            width: 64,
+            height: 64,
+            fit: BoxFit.contain,
+            errorBuilder: (_, __, ___) => const Icon(Icons.pets_rounded, color: ZenColors.jade, size: 40),
+          ),
+        );
+      },
+    );
+  }
+}
+
+class _Dots extends StatelessWidget {
+  final int count;
+  final int index;
+  const _Dots({required this.count, required this.index});
+
+  @override
+  Widget build(BuildContext context) {
+    return Semantics(
+      label: 'Impuls ${index + 1} von $count',
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: List.generate(
+          count,
+          (i) => AnimatedContainer(
+            duration: _animShort,
+            margin: const EdgeInsets.symmetric(horizontal: 4),
+            width: i == index ? 10 : 8,
+            height: i == index ? 10 : 8,
+            decoration: BoxDecoration(
+              color: i == index ? ZenColors.jade : ZenColors.cloud,
+              shape: BoxShape.circle,
+              boxShadow: i == index
+                  ? [
+                      BoxShadow(
+                        color: ZenColors.jade.withOpacity(.22),
+                        blurRadius: 8,
+                        offset: const Offset(0, 2),
+                      ),
+                    ]
+                  : null,
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+class _SafeBg extends StatelessWidget {
+  final String asset;
+  const _SafeBg({required this.asset});
+
+  @override
+  Widget build(BuildContext context) {
+    return Image.asset(
+      asset,
+      fit: BoxFit.cover,
+      alignment: Alignment.topCenter,
+      errorBuilder: (_, __, ___) => const DecoratedBox(
+        decoration: BoxDecoration(gradient: ZenGradients.screen),
+      ),
+    );
+  }
 }
diff --git a/zen_project1337/lib/features/journey/journey_map.dart b/zen_project1337/lib/features/journey/journey_map.dart
index b8aabdd..81f1639 100644
--- a/zen_project1337/lib/features/journey/journey_map.dart
+++ b/zen_project1337/lib/features/journey/journey_map.dart
@@ -1,250 +1,814 @@
 // lib/features/journey/journey_map.dart
+//
+// JourneyMapScreen — v6 Ultra (Probiermodus, A11y, Safe-Nav, Glass-UI)
+// -------------------------------------------------------------------
+// • Probiermodus (10 min): nichts wird gespeichert. Banner + Restzeit + Auto-Off.
+// • Activity-Reset: jeder Tap/Pan verlängert die Frist (max. 10 min ab letztem Input).
+// • Back-Compat: spiegelt Flags auf alte Ghost-Keys (falls Alt-Code noch liest).
+// • Safe-Nav: _navLocked, maybeOf-Lookups, mounted-Guards, Haptics.
+// • Grid-Tiles (Gedankenbuch/Reflexion/Story/Impuls/Pro) wie bei dir – poliert.
+// • Footer-Quote animiert; Backdrop zart entsättigt + Wash.
+// • Keine neuen Deps. Kompiliert mit deinen Tokens/Widgets.
+//
+// Hinweis: Speichersperre ist UI-seitig (Banner/Toast). Die eigentliche Persistenz
+// blockierst du in Providers mit dem Flag `settings:trial_mode` (Phase 2/3).
 
+import 'dart:ui';
+import 'dart:async';
 import 'package:flutter/material.dart';
-import 'package:lottie/lottie.dart';
-import 'package:flutter_svg/flutter_svg.dart';
-import 'package:animations/animations.dart';
+import 'package:flutter/services.dart';
+import 'package:provider/provider.dart';
+
+// Zen Designsystem
+import '../../shared/zen_style.dart' hide ZenBackdrop, ZenGlassCard; // Kollisionen vermeiden
+import '../../shared/ui/zen_widgets.dart' show ZenBackdrop, ZenGlassCard, ZenInfoBar, ZenToast;
+
+// Datenmodelle
 import '../../data/mood_entry.dart';
 import '../../data/reflection_entry.dart';
-import '../../audio/soundscape_manager.dart';
-import '../../shared/ui/zen_widgets.dart';
-import 'package:provider/provider.dart';
 
-/// Zeigt den Zen Journey Map Screen.
-/// Visualisiert den Weg der Selbstreflexion als animierte Landschaft.
-class JourneyMapScreen extends StatelessWidget {
+// Provider (Journal / Gedankenbuch)
+import '../../models/journal_entries_provider.dart';
+
+// Features
+import '../gedankenbuch/gedankenbuch_entry_screen.dart';
+import '../gedankenbuch/gedankenbuch_timeline.dart';
+import '../reflection/reflection_screen.dart';
+import '../impulse/impulse_screen.dart';
+import '../pro/pro_screen.dart';
+import '../story/story_screen.dart';
+
+// Lokales Model
+import 'package:zenyourself/models/gedankenbuch_entry.dart';
+
+// Persistenz (Settings-Flags)
+import '../../services/persistence_adapter.dart' as pa;
+
+const double _tabletMaxWidth = 720;
+const int _kStoryUnlock = StoryScreen.neededReflections;
+
+// Probiermodus (vormals „Ghost“)
+const int _kTrialMinutes = 10;
+const String _kTrialFlag = 'settings:trial_mode';
+const String _kTrialUntil = 'settings:trial_mode_until';
+// Back-Compat Spiegelung auf alte Keys (falls Alt-Code noch darauf hört)
+const String _kGhostFlag = pa.PersistenceAdapter.kGhostMode;
+const String _kGhostUntil = 'settings:ghost_mode_until';
+
+class JourneyMapScreen extends StatefulWidget {
   final List<MoodEntry> moodEntries;
   final List<ReflectionEntry> reflections;
 
   const JourneyMapScreen({
-    super.key,
+    Key? key,
     required this.moodEntries,
     required this.reflections,
-  });
+  }) : super(key: key);
 
   @override
-  Widget build(BuildContext context) {
-    // Aktuelle Stimmung als Farbe
-    final latestMood = moodEntries.isNotEmpty ? moodEntries.last : null;
-    final Color moodColor = latestMood?.moodColor ?? const Color(0xFFA5CBA1);
-
-    return Scaffold(
-      extendBodyBehindAppBar: true,
-      appBar: AppBar(
-        backgroundColor: Colors.transparent,
-        elevation: 0,
-        title: const Text(
-          'Deine Reise',
-          style: TextStyle(
-            fontWeight: FontWeight.bold,
-            fontSize: 23,
-            color: Color(0xFF002147),
-          ),
+  State<JourneyMapScreen> createState() => _JourneyMapScreenState();
+}
+
+class _JourneyMapScreenState extends State<JourneyMapScreen>
+    with TickerProviderStateMixin {
+  late final AnimationController _introCtrl;
+  late final AnimationController _tilesCtrl;
+
+  // Nav/Tap-Guard
+  bool _navLocked = false;
+
+  // Lokale Gedankenbuch-Sammlung (bis Timeline vollständig migriert ist)
+  final List<GedankenbuchEntry> _entries = [];
+
+  // Probiermodus-State
+  bool _trialOn = false;
+  DateTime? _trialUntil;
+  Timer? _trialTicker;
+
+  @override
+  void initState() {
+    super.initState();
+    _introCtrl = AnimationController(vsync: this, duration: animLong)..forward();
+    _tilesCtrl = AnimationController(vsync: this, duration: animMed);
+    Future.delayed(const Duration(milliseconds: 220), () {
+      if (mounted) _tilesCtrl.forward();
+    });
+    _loadTrialState();
+  }
+
+  @override
+  void dispose() {
+    _introCtrl.dispose();
+    _tilesCtrl.dispose();
+    _trialTicker?.cancel();
+    super.dispose();
+  }
+
+  // =========================
+  // Probiermodus (Trial Mode)
+  // =========================
+  Future<void> _loadTrialState() async {
+    final store = pa.PersistenceAdapter.instance;
+    await store.init();
+
+    // Lesen: bevorzugt Trial-Keys; fallback auf alte Ghost-Keys
+    final on = (await store.getBool(_kTrialFlag)) ??
+        (await store.getBool(_kGhostFlag)) ??
+        false;
+
+    DateTime? until;
+    final untilIso =
+        (await store.getString(_kTrialUntil)) ?? (await store.getString(_kGhostUntil));
+    if (untilIso != null && untilIso.isNotEmpty) {
+      try { until = DateTime.parse(untilIso); } catch (_) {}
+    }
+
+    if (!mounted) return;
+    setState(() {
+      _trialOn = on;
+      _trialUntil = until;
+    });
+    _restartTrialTicker();
+  }
+
+  Future<void> _setTrial(bool on) async {
+    if (!mounted) return;
+    final store = pa.PersistenceAdapter.instance;
+    await store.init();
+
+    setState(() => _trialOn = on);
+    await store.setBool(_kTrialFlag, on);
+    await store.setBool(_kGhostFlag, on); // Back-Compat spiegeln
+
+    if (on) {
+      await _bumpTrialExpiry();
+      ZenToast.show(context, 'Probiermodus aktiviert – es wird nichts gespeichert.');
+    } else {
+      _trialUntil = null;
+      await store.remove(_kTrialUntil);
+      await store.remove(_kGhostUntil);
+      ZenToast.show(context, 'Probiermodus beendet.');
+    }
+    _restartTrialTicker();
+  }
+
+  Future<void> _bumpTrialExpiry() async {
+    final store = pa.PersistenceAdapter.instance;
+    final newUntil = DateTime.now().toUtc().add(Duration(minutes: _kTrialMinutes));
+    setState(() => _trialUntil = newUntil);
+    await store.setString(_kTrialUntil, newUntil.toIso8601String());
+    await store.setString(_kGhostUntil, newUntil.toIso8601String()); // Back-Compat
+  }
+
+  void _restartTrialTicker() {
+    _trialTicker?.cancel();
+    if (!_trialOn || _trialUntil == null) return;
+
+    _trialTicker = Timer.periodic(const Duration(seconds: 30), (_) {
+      if (!_trialOn || _trialUntil == null || !mounted) return;
+      final now = DateTime.now().toUtc();
+      if (now.isAfter(_trialUntil!)) {
+        _setTrial(false);
+      } else {
+        setState(() {}); // Restzeit aktualisieren
+      }
+    });
+  }
+
+  void _registerUserActivity() {
+    if (_trialOn) _bumpTrialExpiry();
+  }
+
+  String _formatRemaining() {
+    if (_trialUntil == null) return '';
+    final now = DateTime.now().toUtc();
+    final diff = _trialUntil!.difference(now);
+    final secs = diff.inSeconds.clamp(0, _kTrialMinutes * 60);
+    final m = secs ~/ 60;
+    final s = secs % 60;
+    String two(int n) => n.toString().padLeft(2, '0');
+    return '${two(m)}:${two(s)}';
+  }
+
+  // =========================
+  // Gedankenbuch CRUD (lokal)
+  // =========================
+  bool _isDuplicateLocal({
+    required String text,
+    required bool isReflection,
+    String? aiQuestion,
+    Duration within = const Duration(seconds: 5),
+  }) {
+    if (_entries.isEmpty) return false;
+    final now = DateTime.now();
+    for (final e in _entries) {
+      final closeInTime = now.difference(e.date).abs() <= within;
+      if (closeInTime &&
+          e.text == text &&
+          e.isReflection == isReflection &&
+          (e.aiQuestion ?? '') == (aiQuestion ?? '')) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+  void _addEntry(
+    String text,
+    String mood, {
+    bool isReflection = false,
+    String? aiQuestion,
+  }) {
+    if (!mounted) return;
+
+    if (_isDuplicateLocal(
+      text: text,
+      isReflection: isReflection,
+      aiQuestion: aiQuestion,
+    )) {
+      return;
+    }
+
+    setState(() {
+      _entries.add(
+        GedankenbuchEntry(
+          text: text,
+          mood: mood,
+          date: DateTime.now(),
+          isReflection: isReflection,
+          aiQuestion: aiQuestion,
         ),
-        centerTitle: true,
+      );
+    });
+  }
+
+  void _editEntry(
+    int idx,
+    String newText,
+    String newMood, {
+    bool isReflection = false,
+  }) {
+    if (!mounted || idx < 0 || idx >= _entries.length) return;
+    setState(() {
+      _entries[idx] = GedankenbuchEntry(
+        text: newText,
+        mood: newMood,
+        date: _entries[idx].date,
+        isReflection: isReflection,
+        aiQuestion: _entries[idx].aiQuestion,
+      );
+    });
+  }
+
+  void _deleteEntry(int idx) {
+    if (!mounted || idx < 0 || idx >= _entries.length) return;
+    setState(() => _entries.removeAt(idx));
+  }
+
+  // =========================
+  // Safe Navigation
+  // =========================
+  Future<T?> _pushLocked<T>(Route<T> route) async {
+    if (_navLocked) return null;
+    _navLocked = true;
+    try {
+      final nav = Navigator.maybeOf(context);
+      if (nav == null) {
+        _navLocked = false;
+        return null;
+      }
+      final res = await nav.push(route);
+      return res;
+    } finally {
+      if (!mounted) {
+        _navLocked = false;
+      } else {
+        Future.delayed(const Duration(milliseconds: 250), () {
+          if (mounted) _navLocked = false;
+        });
+      }
+    }
+  }
+
+  Future<void> _openReflection() async {
+    HapticFeedback.selectionClick();
+    if (_trialOn) {
+      ZenToast.show(context, 'Probiermodus: Deine Antworten werden nicht gespeichert.');
+    }
+    await _pushLocked(
+      MaterialPageRoute(builder: (ctx) => const ReflectionScreen()),
+    );
+  }
+
+  void _showLockedSnack(int remaining) {
+    if (!mounted) return;
+    final plural = remaining == 1 ? 'Runde' : 'Runden';
+    final msg = 'Noch $remaining komplette $plural bis zur Kurzgeschichte.';
+    final messenger = ScaffoldMessenger.maybeOf(context);
+    if (messenger == null) return;
+    messenger.showSnackBar(
+      SnackBar(
+        content: Text(msg),
+        behavior: SnackBarBehavior.floating,
+        duration: const Duration(seconds: 2),
       ),
-      body: Stack(
-        children: [
-          // 1. Animierter Zen-Hintergrund (Lottie – Berge, Wolken, Wasser)
-          Positioned.fill(
-            child: Lottie.asset(
-              'assets/zen_background.json',
-              fit: BoxFit.cover,
-              delegates: LottieDelegates(
-                values: [
-                  ValueDelegate.color(
-                    const ['**'],
-                    value: moodColor,
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final size = MediaQuery.of(context).size;
+    final isCompact = size.width < 520;
+    final gridCount = isCompact ? 1 : 2;
+    final maxGridWidth = size.width < _tabletMaxWidth ? 480.0 : 720.0;
+    final tt = Theme.of(context).textTheme;
+
+    final journal = context.watch<JournalEntriesProvider?>();
+    final reflectionsCount =
+        (journal != null ? journal.reflections.length : null) ??
+            widget.reflections.length;
+
+    final storyUnlocked = reflectionsCount >= _kStoryUnlock;
+    final remaining = storyUnlocked ? 0 : (_kStoryUnlock - reflectionsCount);
+
+    final overlay = Theme.of(context).brightness == Brightness.dark
+        ? SystemUiOverlayStyle.light
+        : SystemUiOverlayStyle.dark;
+
+    return GestureDetector(
+      behavior: HitTestBehavior.translucent,
+      onTap: _registerUserActivity,
+      onPanDown: (_) => _registerUserActivity(),
+      child: AnnotatedRegion<SystemUiOverlayStyle>(
+        value: overlay,
+        child: Scaffold(
+          extendBodyBehindAppBar: true,
+          backgroundColor: Colors.transparent,
+          body: Stack(
+            children: [
+              // 0) Backdrop
+              const PositionedFillBackdrop(),
+
+              // 1) Zurück-Button
+              SafeArea(
+                child: Padding(
+                  padding: const EdgeInsets.only(
+                    top: ZenSpacing.l,
+                    left: ZenSpacing.l,
                   ),
-                ],
+                  child: const _BackButton(),
+                ),
               ),
-              repeat: true,
-              animate: true,
-            ),
-          ),
-          // 2. Zen-Weg mit Meilensteinen (SVG + animiert)
-          Center(
-            child: SingleChildScrollView(
-              child: SizedBox(
-                width: 410,
-                child: Column(
-                  mainAxisAlignment: MainAxisAlignment.center,
-                  children: [
-                    const SizedBox(height: 60),
-                    // Zen-Avatar/Mentor (optional animiert)
-                    Hero(
-                      tag: 'zen_mentor',
-                      child: ZenAvatar(size: 72),
+
+              // 2) Inhalt
+              SafeArea(
+                child: Center(
+                  child: SingleChildScrollView(
+                    padding: EdgeInsets.fromLTRB(
+                      ZenSpacing.m,
+                      size.height < 700 ? ZenSpacing.m : ZenSpacing.xl,
+                      ZenSpacing.m,
+                      ZenSpacing.xl,
                     ),
-                    const SizedBox(height: 25),
-                    // Pfad-Visualisierung als SVG (dynamisch gefärbt)
-                    _ZenJourneyPath(
-                      milestones: reflections.length,
-                      moodColor: moodColor,
+                    child: ConstrainedBox(
+                      constraints: BoxConstraints(maxWidth: maxGridWidth),
+                      child: Column(
+                        mainAxisSize: MainAxisSize.min,
+                        children: [
+                          // Headline
+                          ScaleTransition(
+                            scale: CurvedAnimation(
+                              parent: _introCtrl,
+                              curve: Curves.elasticOut,
+                            ),
+                            child: Padding(
+                              padding: const EdgeInsets.only(bottom: ZenSpacing.m),
+                              child: Text(
+                                'Was brauchst du?',
+                                textAlign: TextAlign.center,
+                                style: tt.headlineMedium!.copyWith(
+                                  fontSize: 24,
+                                  color: ZenColors.deepSage,
+                                  fontWeight: FontWeight.w900,
+                                  letterSpacing: .2,
+                                  shadows: [
+                                    Shadow(
+                                      blurRadius: 8,
+                                      color: Colors.black.withOpacity(.08),
+                                      offset: const Offset(0, 2),
+                                    ),
+                                  ],
+                                ),
+                              ),
+                            ),
+                          ),
+
+                          // Probiermodus-Banner
+                          if (_trialOn)
+                            Padding(
+                              padding: const EdgeInsets.only(bottom: 8),
+                              child: ZenInfoBar(
+                                message:
+                                    'Probiermodus aktiv · Auto-Ende in ${_formatRemaining()}',
+                                actionLabel: 'Beenden',
+                                onAction: () => _setTrial(false),
+                                color: ZenColors.jade.withOpacity(.10),
+                              ),
+                            ),
+
+                          // Probiermodus-Karte (Switch)
+                          ZenGlassCard(
+                            padding: const EdgeInsets.fromLTRB(16, 14, 16, 6),
+                            child: Column(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: [
+                                Text('Probiermodus (ohne Speicherung)',
+                                    style: Theme.of(context).textTheme.titleMedium),
+                                const SizedBox(height: 6),
+                                Text(
+                                  'Du kannst alles testen. In diesem Modus werden '
+                                  'keine neuen Einträge gespeichert, keine Exporte erstellt '
+                                  'und keine Benachrichtigungen gesendet. '
+                                  'Der Modus endet automatisch nach Inaktivität (~${_kTrialMinutes} min).',
+                                  style: ZenTextStyles.caption,
+                                ),
+                                const SizedBox(height: 8),
+                                SwitchListTile.adaptive(
+                                  contentPadding: EdgeInsets.zero,
+                                  title: Text(
+                                    _trialOn ? 'Probiermodus ist AKTIV' : 'Probiermodus ist AUS',
+                                    style: TextStyle(
+                                      fontWeight: FontWeight.w700,
+                                      color: _trialOn ? ZenColors.deepSage
+                                                      : Theme.of(context).colorScheme.onSurface,
+                                    ),
+                                  ),
+                                  subtitle: _trialOn && _trialUntil != null
+                                      ? Text('Auto-Ende in ${_formatRemaining()}',
+                                          style: ZenTextStyles.caption)
+                                      : const Text('Kann jederzeit ein-/ausgeschaltet werden.'),
+                                  value: _trialOn,
+                                  onChanged: (v) => _setTrial(v),
+                                ),
+                                const SizedBox(height: 4),
+                              ],
+                            ),
+                          ),
+
+                          const SizedBox(height: 12),
+
+                          // Grid aus Glas-Kacheln
+                          FadeTransition(
+                            opacity: CurvedAnimation(
+                              parent: _tilesCtrl,
+                              curve: Curves.easeOutCubic,
+                            ),
+                            child: LayoutBuilder(
+                              builder: (context, c) {
+                                return GridView(
+                                  shrinkWrap: true,
+                                  physics: const NeverScrollableScrollPhysics(),
+                                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                                    crossAxisCount: gridCount,
+                                    mainAxisSpacing: ZenSpacing.m,
+                                    crossAxisSpacing: ZenSpacing.m,
+                                    childAspectRatio: isCompact ? 16 / 5 : 16 / 4.6,
+                                  ),
+                                  children: [
+                                    _OptionTile(
+                                      icon: Icons.menu_book_rounded,
+                                      label: 'Gedankenbuch',
+                                      subtitle: _trialOn
+                                          ? 'Vorschau · nichts wird gespeichert'
+                                          : 'Lass deine Gedanken los',
+                                      onTap: () {
+                                        HapticFeedback.selectionClick();
+                                        if (_trialOn) {
+                                          ZenToast.show(context,
+                                              'Probiermodus: Deine Änderungen sind temporär.');
+                                        }
+                                        _pushLocked(
+                                          MaterialPageRoute(
+                                            builder: (_) => GedankenbuchTimelineScreen(
+                                              entries: _entries,
+                                              onAdd: _addEntry,
+                                              onEdit: _editEntry,
+                                              onDelete: _deleteEntry,
+                                            ),
+                                          ),
+                                        );
+                                      },
+                                    ),
+                                    _OptionTile(
+                                      icon: Icons.psychology_alt_rounded,
+                                      label: 'Selbstreflexion',
+                                      subtitle: _trialOn
+                                          ? 'Testlauf · Antworten werden nicht gespeichert'
+                                          : 'Ordne deine Gedanken',
+                                      onTap: _openReflection,
+                                    ),
+                                    _OptionTile(
+                                      icon: Icons.auto_stories_rounded,
+                                      label: 'Kurzgeschichte',
+                                      subtitle: storyUnlocked
+                                          ? (_trialOn
+                                              ? 'Vorschau · ohne Speicherung'
+                                              : 'Therapeutische Kurzgeschichte lesen')
+                                          : 'Noch $remaining bis freigeschaltet',
+                                      locked: !storyUnlocked,
+                                      lockHint:
+                                          'Noch $remaining vollständige Runde${remaining == 1 ? '' : 'n'} bis zur Story',
+                                      onTap: () {
+                                        if (!storyUnlocked) {
+                                          HapticFeedback.selectionClick();
+                                          _showLockedSnack(remaining);
+                                          return;
+                                        }
+                                        HapticFeedback.selectionClick();
+                                        if (_trialOn) {
+                                          ZenToast.show(context,
+                                              'Probiermodus: Story-Fortschritt wird nicht gespeichert.');
+                                        }
+                                        _pushLocked(
+                                          MaterialPageRoute(
+                                            builder: (_) => const StoryScreen(),
+                                          ),
+                                        );
+                                      },
+                                    ),
+                                    _OptionTile(
+                                      icon: Icons.bubble_chart_rounded,
+                                      label: 'Impuls',
+                                      subtitle:
+                                          _trialOn ? 'Vorschau · ohne Speicherung' : 'Atem & Mini-Reset',
+                                      onTap: () {
+                                        HapticFeedback.selectionClick();
+                                        if (_trialOn) {
+                                          ZenToast.show(context,
+                                              'Probiermodus: Session wird nicht gespeichert.');
+                                        }
+                                        _pushLocked(
+                                          MaterialPageRoute(
+                                            builder: (_) => const ImpulseScreen(),
+                                          ),
+                                        );
+                                      },
+                                    ),
+                                    _OptionTile(
+                                      icon: Icons.insights_rounded,
+                                      label: 'Dich erkennen',
+                                      subtitle: 'Dein Weg in Bildern',
+                                      onTap: () {
+                                        HapticFeedback.selectionClick();
+                                        _pushLocked(
+                                          MaterialPageRoute(
+                                            builder: (_) => ProScreen(
+                                              moodEntries: widget.moodEntries,
+                                              reflectionEntries: widget.reflections,
+                                            ),
+                                          ),
+                                        );
+                                      },
+                                    ),
+                                  ],
+                                );
+                              },
+                            ),
+                          ),
+                        ],
+                      ),
                     ),
-                    const SizedBox(height: 20),
-                    // Reflexions-Meilensteine (Blätter, Steine, Symbole)
-                    _JourneyMilestones(reflections: reflections, moodEntries: moodEntries),
-                    const SizedBox(height: 60),
-                  ],
+                  ),
                 ),
               ),
-            ),
-          ),
-          // 3. (Optional) Soundscape Toggle
-          Positioned(
-            top: 38,
-            right: 24,
-            child: ZenSoundscapeToggle(),
+
+              // 3) Footer-Zitat
+              Positioned(
+                left: 0,
+                right: 0,
+                bottom: ZenSpacing.l,
+                child: SafeArea(
+                  top: false,
+                  child: Center(
+                    child: Opacity(
+                      opacity: .98,
+                      child: AnimatedSwitcher(
+                        duration: animShort,
+                        child: Text(
+                          _randomQuote(reflectionsCount),
+                          key: ValueKey(reflectionsCount % 7),
+                          textAlign: TextAlign.center,
+                          style: Theme.of(context).textTheme.titleMedium!.copyWith(
+                                color: ZenColors.deepSage,
+                                fontStyle: FontStyle.italic,
+                                fontSize: 16.0,
+                                shadows: const [
+                                  Shadow(
+                                    blurRadius: 6,
+                                    color: Colors.black26,
+                                    offset: Offset(0, 2),
+                                  ),
+                                ],
+                              ),
+                        ),
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ],
           ),
-          // 4. (Optional) „Level Up“-Banner (Gamification)
-          if (reflections.length % 7 == 0 && reflections.isNotEmpty)
-            Positioned(
-              bottom: 45,
-              left: 0,
-              right: 0,
-              child: ZenLevelUpBanner(level: reflections.length ~/ 7),
-            ),
-        ],
+        ),
       ),
     );
   }
-}
 
-/// Zen-Weg als SVG (dynamisch gefärbt, animiert)
-class _ZenJourneyPath extends StatelessWidget {
-  final int milestones;
-  final Color moodColor;
+  String _randomQuote(int idx) {
+    const quotes = [
+      'Manchmal reicht es, einfach da zu sein.',
+      'Ruhe finden beginnt mit dem Annehmen.',
+      'Dein Weg darf leicht sein.',
+      'Es ist okay, einfach zu fühlen.',
+      'Heute darfst du einfach du sein.',
+      'Die Stille kennt keinen Plan.',
+      'Atme. Mehr musst du nicht tun.',
+    ];
+    return quotes[idx % quotes.length];
+  }
+}
 
-  const _ZenJourneyPath({
-    required this.milestones,
-    required this.moodColor,
-  });
+/// Backdrop (separat, damit oben const genutzt werden kann)
+class PositionedFillBackdrop extends StatelessWidget {
+  const PositionedFillBackdrop({super.key});
 
   @override
   Widget build(BuildContext context) {
-    // Pfad dynamisch färben je nach Stimmung/Fortschritt
-    return AnimatedContainer(
-      duration: const Duration(milliseconds: 900),
-      curve: Curves.easeInOut,
-      child: SvgPicture.asset(
-        'assets/zen_path.svg',
-        colorFilter: ColorFilter.mode(moodColor, BlendMode.modulate),
-        width: 320,
-        height: 88,
-        fit: BoxFit.contain,
+    return const Positioned.fill(
+      child: ZenBackdrop(
+        asset: 'assets/zen_journey_bg.png',
+        glow: .36,
+        vignette: .12,
+        enableHaze: true,
+        hazeStrength: .12,
+        saturation: .94,
+        wash: .10,
       ),
     );
   }
 }
 
-/// Meilensteine: Einträge als Blätter, Steine, Symbole visualisieren
-class _JourneyMilestones extends StatelessWidget {
-  final List<ReflectionEntry> reflections;
-  final List<MoodEntry> moodEntries;
-
-  const _JourneyMilestones({
-    required this.reflections,
-    required this.moodEntries,
-  });
+/// Zurück-Button im kreisrunden Stil
+class _BackButton extends StatelessWidget {
+  const _BackButton();
 
   @override
   Widget build(BuildContext context) {
-    return Row(
-      mainAxisAlignment: MainAxisAlignment.center,
-      children: List.generate(reflections.length, (i) {
-        final mood = i < moodEntries.length ? moodEntries[i].moodColor : const Color(0xFFB2B2B2);
-        return Padding(
-          padding: const EdgeInsets.symmetric(horizontal: 5),
-          child: ZenMilestoneIcon(
-            icon: i % 7 == 0 ? Icons.emoji_events : Icons.spa,
-            color: mood,
-            scale: i % 7 == 0 ? 1.4 : 1.0,
-            levelUp: i % 7 == 0,
+    return Semantics(
+      button: true,
+      label: 'Zurück',
+      child: Material(
+        color: Colors.transparent,
+        child: InkWell(
+          borderRadius: const BorderRadius.all(ZenRadii.l),
+          onTap: () => Navigator.maybeOf(context)?.maybePop(),
+          child: Container(
+            width: 46,
+            height: 46,
+            decoration: BoxDecoration(
+              color: ZenColors.surface.withOpacity(.49),
+              shape: BoxShape.circle,
+              boxShadow: ZenShadows.card,
+              border: Border.all(
+                color: ZenColors.sage.withOpacity(.18),
+                width: 1.2,
+              ),
+            ),
+            child: const Icon(
+              Icons.arrow_back_rounded,
+              color: ZenColors.deepSage,
+              size: 26,
+            ),
           ),
-        );
-      }),
+        ),
+      ),
     );
   }
 }
 
-/// (Optional) Zen-Soundscape-Toggle (oben rechts)
-class ZenSoundscapeToggle extends StatelessWidget {
-  @override
-  Widget build(BuildContext context) {
-    return IconButton(
-      icon: const Icon(Icons.music_note, color: Color(0xFF365486), size: 29),
-      tooltip: "Zen-Soundscape an/aus",
-      onPressed: () => SoundscapeManager.of(context).toggle(),
-    );
-  }
-}
+/// Glas-Kachel (ruhige CTAs)
+class _OptionTile extends StatelessWidget {
+  final IconData icon;
+  final String label;
+  final String subtitle;
+  final VoidCallback onTap;
+  final bool locked;
+  final String? lockHint;
+
+  const _OptionTile({
+    required this.icon,
+    required this.label,
+    required this.subtitle,
+    required this.onTap,
+    this.locked = false,
+    this.lockHint,
+  });
 
-/// (Optional) Level-Up-Banner (Gamification)
-class ZenLevelUpBanner extends StatelessWidget {
-  final int level;
-  const ZenLevelUpBanner({required this.level});
   @override
   Widget build(BuildContext context) {
-    return OpenContainer(
-      closedElevation: 5,
-      closedColor: const Color(0xFFA5CBA1),
-      openColor: Colors.white,
-      closedShape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(22)),
-      openBuilder: (context, _) => Center(child: ZenQuoteWidget(level: level)),
-      closedBuilder: (context, open) => GestureDetector(
-        onTap: open,
-        child: Padding(
-          padding: const EdgeInsets.symmetric(horizontal: 60, vertical: 8),
-          child: Row(
-            mainAxisAlignment: MainAxisAlignment.center,
-            children: [
-              const Icon(Icons.stars, color: Color(0xFFFFD580), size: 30),
-              const SizedBox(width: 12),
-              Text(
-                "Zen Level $level erreicht!",
-                style: const TextStyle(
-                  color: Color(0xFF002147),
-                  fontWeight: FontWeight.bold,
-                  fontSize: 16,
-                ),
+    final tt = Theme.of(context).textTheme;
+
+    final tile = Opacity(
+      opacity: locked ? 0.65 : 1.0,
+      child: ZenGlassCard(
+        padding: const EdgeInsets.symmetric(
+          horizontal: ZenSpacing.m,
+          vertical: ZenSpacing.s,
+        ),
+        topOpacity: .22,
+        bottomOpacity: .08,
+        borderOpacity: .16,
+        child: Row(
+          children: [
+            // Icon-Badge
+            Container(
+              width: 42,
+              height: 42,
+              decoration: BoxDecoration(
+                color: ZenColors.cta.withOpacity(.12),
+                shape: BoxShape.circle,
+                border: Border.all(color: ZenColors.cta.withOpacity(.35)),
               ),
-            ],
-          ),
+              child: Icon(icon, color: ZenColors.cta, size: 22),
+            ),
+            const SizedBox(width: 12),
+            // Text
+            Expanded(
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                mainAxisAlignment: MainAxisAlignment.center,
+                children: [
+                  Text(
+                    label,
+                    maxLines: 1,
+                    overflow: TextOverflow.ellipsis,
+                    style: tt.labelLarge!.copyWith(
+                      color: ZenColors.cta,
+                      fontWeight: FontWeight.w700,
+                      fontSize: 17.2,
+                      letterSpacing: .1,
+                    ),
+                  ),
+                  const SizedBox(height: 2),
+                  Text(
+                    subtitle,
+                    maxLines: 2,
+                    overflow: TextOverflow.ellipsis,
+                    style: tt.bodyMedium!.copyWith(
+                      color: ZenColors.cta.withOpacity(.82),
+                      fontStyle: FontStyle.italic,
+                      fontSize: 13,
+                      height: 1.15,
+                    ),
+                  ),
+                ],
+              ),
+            ),
+            const SizedBox(width: 8),
+            Icon(
+              locked ? Icons.lock_rounded : Icons.chevron_right_rounded,
+              color: ZenColors.cta,
+            ),
+          ],
         ),
       ),
     );
-  }
-}
-
-/// Zitat oder Weisheit beim Level-Up (optional)
-class ZenQuoteWidget extends StatelessWidget {
-  final int level;
-  const ZenQuoteWidget({required this.level});
 
-  @override
-  Widget build(BuildContext context) {
-    // Für echtes Projekt: Quotes aus einer Datenbank oder API
-    const quotes = [
-      "Ruhe im Geist ist der Anfang wahrer Erkenntnis.",
-      "Jeder Schritt auf dem Pfad ist ein Sieg über dich selbst.",
-      "Tiefe Erkenntnis entsteht aus achtsamer Beobachtung.",
-      "Im Loslassen liegt die Kraft.",
-      "Dein innerer Garten wächst mit jedem Gedanken.",
-    ];
-    final quote = quotes[level % quotes.length];
-
-    return Center(
-      child: Padding(
-        padding: const EdgeInsets.all(30.0),
-        child: Text(
-          '"$quote"',
-          style: const TextStyle(
-            fontStyle: FontStyle.italic,
-            fontSize: 22,
-            color: Color(0xFF365486),
-          ),
-          textAlign: TextAlign.center,
+    return Semantics(
+      button: true,
+      label: label,
+      hint: locked ? (lockHint ?? 'Gesperrt') : subtitle,
+      child: Material(
+        color: Colors.transparent,
+        child: InkWell(
+          borderRadius: const BorderRadius.all(ZenRadii.xl),
+          splashColor: ZenColors.cta.withOpacity(.12),
+          highlightColor: ZenColors.cta.withOpacity(.06),
+          onTap: () {
+            if (locked) {
+              HapticFeedback.selectionClick();
+              final msg = lockHint ?? 'Noch etwas Geduld – bald freigeschaltet.';
+              ScaffoldMessenger.maybeOf(context)?.showSnackBar(
+                SnackBar(
+                  content: Text(msg),
+                  behavior: SnackBarBehavior.floating,
+                  duration: const Duration(seconds: 2),
+                ),
+              );
+              return;
+            }
+            onTap();
+          },
+          child: tile,
         ),
       ),
     );
diff --git a/zen_project1337/lib/features/pro/pro_screen.dart b/zen_project1337/lib/features/pro/pro_screen.dart
index c7cb7d7..4cc8879 100644
--- a/zen_project1337/lib/features/pro/pro_screen.dart
+++ b/zen_project1337/lib/features/pro/pro_screen.dart
@@ -1,220 +1,464 @@
+// lib/features/pro/pro_screen.dart
+//
+// ProScreen — Oxford Journey Board (Unified Backdrop, glass bubbles)
+// ------------------------------------------------------------------
+// WHY:
+// - Video-Export ausgeblendet (Roadmap).
+// - PDF/CSV Export per try/catch abgesichert + klare Snackbars.
+// - A11y: Semantics-Labels für Export-Buttons.
+// - Provider-first Kennzahlen & Sparkline bleiben erhalten.
+// - Keine neuen Abhängigkeiten, nur behutsame Anpassungen.
+
+import 'dart:ui';
 import 'package:flutter/material.dart';
-import 'package:lottie/lottie.dart';
-import '../../shared/ui/zen_widgets.dart';
+import 'package:fl_chart/fl_chart.dart';
+import 'package:provider/provider.dart';
+
+// Shared UI & Design (Alias-Imports → keine Namenskollisionen)
+import '../../shared/zen_style.dart' as zs
+    hide ZenBackdrop, ZenGlassCard, ZenAppBar;
+import '../../shared/ui/zen_widgets.dart' as zw
+    show ZenBackdrop, ZenGlassCard, ZenAppBar;
+
+// Domain (Legacy-Fallback)
 import '../../data/mood_entry.dart';
 import '../../data/reflection_entry.dart';
-import '../calendar/mood_heatmap.dart';
+
+// Journal (neu)
+import '../../models/journal_entries_provider.dart';
+import '../../data/journal_entry.dart';
+
+// Export (AnonExportWidget)
 import '../therapist/anon_export.dart';
 
-/// ProScreen: Dein „Control Room“ für Analyse, Export, Visualisierung.
-/// Für alle, die mehr wollen als „Feelgood“ – inklusive Therapeuten/Profis.
-/// 
-/// - Heatmap als Kunstwerk (z. B. animiertes Wasser/Landschaft)
-/// - Monatsrückblick: Zahlen, Zitate, Erfolge, Audio
-/// - Export als PDF, CSV oder animiertes Video (Demo)
-/// - Pro-Settings: Privacy, Data Control
+// ------------------------------------------------------------------
 
 class ProScreen extends StatelessWidget {
+  /// Legacy-Props bleiben für Export/Fallback erhalten.
   final List<MoodEntry> moodEntries;
   final List<ReflectionEntry> reflectionEntries;
 
   const ProScreen({
-    super.key,
+    Key? key,
     required this.moodEntries,
     required this.reflectionEntries,
-  });
+  }) : super(key: key);
 
   @override
   Widget build(BuildContext context) {
-    // Hole die letzten 30 Mood-Entries für Heatmap
-    final last30 = moodEntries.length > 30
-        ? moodEntries.sublist(moodEntries.length - 30)
-        : moodEntries;
+    final tt = Theme.of(context).textTheme;
+    final size = MediaQuery.of(context).size;
+    final isMobile = size.width < 470;
+
+    // ---- Provider (neu) -----------------------------------------------------
+    final prov = context.watch<JournalEntriesProvider?>();
+    final hasProv = prov != null;
+
+    // Serie & Kennzahlen aus Provider (−2 … +2); Fallbacks auf Legacy.
+    final series = hasProv
+        ? _seriesFromProvider(prov!, days: 30)
+        : _fallbackSeriesFromMoodEntries(moodEntries);
+
+    final avgMood = hasProv
+        ? _averageMoodFromProvider(prov!, window: const Duration(days: 30))
+        : _fallbackAvgMoodFromMoodEntries(moodEntries);
+
+    final reflectionsCount = hasProv
+        ? prov!.entries.where(_isReflectionEntry).length
+        : reflectionEntries.length;
+
+    final activeDays = hasProv
+        ? _activeDaysCountFromProvider(prov!)
+        : moodEntries.map((e) => e.dayTag).toSet().length;
+
+    final lastInsights = hasProv
+        ? prov!.entries.where(_isReflectionEntry).take(5).toList()
+        : const <JournalEntry>[];
+
+    final last7MoodLegacy = moodEntries.takeLast(7);
+    final last7FromSeries = series.takeLast(7);
 
-    // Berechne zentrale Werte für Statistiken
-    final moodAvg = moodEntries.isEmpty
-        ? 0.0
-        : moodEntries.map((e) => e.moodScore).reduce((a, b) => a + b) / moodEntries.length;
+    final showMoodGraph =
+        size.width > 410 && size.height > 670 && (series.length >= 4);
 
     return Scaffold(
-      appBar: ZenAppBar(
-        title: "Pro Dashboard",
-        showBack: false,
-        onSoundscapeTap: () {}, // Optional: Soundscape wechseln
+      extendBodyBehindAppBar: true,
+      backgroundColor: Colors.transparent,
+      appBar: zw.ZenAppBar(
+        title: null,
+        actions: const [
+          Padding(
+            padding: EdgeInsets.only(right: 4),
+            child: Icon(Icons.settings_outlined, color: zs.ZenColors.deepSage),
+          ),
+        ],
+        showBack: true,
       ),
       body: Stack(
         children: [
-          Positioned.fill(child: ZenBackground()),
-          SingleChildScrollView(
-            padding: const EdgeInsets.all(18),
-            child: Column(
-              crossAxisAlignment: CrossAxisAlignment.start,
-              children: [
-                // Animierte Header-Visual (z.B. Wasser, Berglandschaft)
-                Center(
-                  child: Lottie.asset(
-                    "assets/lottie/zen_wave.json",
-                    width: 200,
-                    repeat: true,
-                    fit: BoxFit.contain,
-                  ),
-                ),
-                const SizedBox(height: 22),
-                Text(
-                  "Dein Wachstum im Blick",
-                  style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                        fontWeight: FontWeight.bold,
-                        color: Color(0xFF002147),
-                        fontSize: 23,
-                      ),
-                ),
-                const SizedBox(height: 10),
-
-                // Mood-Heatmap als Kunstwerk
-                Card(
-                  elevation: 3,
-                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
-                  color: Colors.white.withOpacity(0.95),
-                  child: Padding(
-                    padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 10),
-                    child: MoodHeatmap(
-                      moodEntries: last30,
-                      days: 30,
-                      asArtwork: true, // Optional: Heatmap mit künstlerischer Optik
-                    ),
-                  ),
-                ),
-                const SizedBox(height: 18),
-
-                // Statistiken & Highlights
-                Card(
-                  elevation: 2,
-                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-                  color: Color(0xFFEFF3F8),
-                  child: Padding(
-                    padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 18),
-                    child: Row(
-                      mainAxisAlignment: MainAxisAlignment.spaceAround,
+          // 0) Einheitlicher Backdrop (extra milchig)
+          const Positioned.fill(
+            child: zw.ZenBackdrop(
+              asset: 'assets/pro_screen.png',
+              alignment: Alignment.center,
+              glow: .38,
+              vignette: .14,
+              enableHaze: true,
+              hazeStrength: .18,
+              saturation: .92,
+              wash: .12,
+            ),
+          ),
+
+          // 1) Inhalt
+          Center(
+            child: SingleChildScrollView(
+              padding: EdgeInsets.symmetric(
+                horizontal: isMobile ? 12 : 20,
+                vertical: isMobile ? 20 : 36,
+              ),
+              child: ConstrainedBox(
+                constraints: const BoxConstraints(maxWidth: 560),
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.center,
+                  children: [
+                    // Panda & Titel
+                    Column(
                       children: [
-                        _ProStatTile(
-                          label: "Avg. Mood",
-                          value: moodAvg.toStringAsFixed(2),
-                          icon: Icons.emoji_emotions_outlined,
-                        ),
-                        _ProStatTile(
-                          label: "Reflections",
-                          value: reflectionEntries.length.toString(),
-                          icon: Icons.self_improvement,
+                        AnimatedPandaGlow(size: isMobile ? 88 : 112),
+                        const SizedBox(height: 6),
+                        Text(
+                          'Deine Reise',
+                          textAlign: TextAlign.center,
+                          style: tt.headlineMedium!.copyWith(
+                            fontSize: 28,
+                            color: zs.ZenColors.deepSage,
+                            fontWeight: FontWeight.w900,
+                            letterSpacing: 0.1,
+                            shadows: [
+                              Shadow(
+                                blurRadius: 8,
+                                color: Colors.black.withOpacity(.08),
+                                offset: const Offset(0, 2),
+                              ),
+                            ],
+                          ),
                         ),
-                        _ProStatTile(
-                          label: "Tage aktiv",
-                          value: moodEntries.map((e) => e.dayTag).toSet().length.toString(),
-                          icon: Icons.calendar_today_rounded,
+                        const SizedBox(height: 6),
+                        Opacity(
+                          opacity: 0.92,
+                          child: Text(
+                            _randomMantra(reflectionsCount),
+                            textAlign: TextAlign.center,
+                            style: tt.bodySmall!.copyWith(
+                              fontSize: 14.5,
+                              fontStyle: FontStyle.italic,
+                              color: zs.ZenColors.sage,
+                            ),
+                          ),
                         ),
+                        const SizedBox(height: 12),
                       ],
                     ),
-                  ),
-                ),
-                const SizedBox(height: 22),
-
-                // Export & Sharing
-                Text(
-                  "Dein Monat als PDF, CSV oder Video",
-                  style: Theme.of(context).textTheme.titleMedium?.copyWith(
-                        fontWeight: FontWeight.w600,
-                        color: Color(0xFF365486),
-                        fontSize: 17,
+
+                    // Mood-Trend — Glas-Bubble im Journey-Stil
+                    ClipRRect(
+                      borderRadius: const BorderRadius.all(zs.ZenRadii.l),
+                      child: BackdropFilter(
+                        filter: ImageFilter.blur(sigmaX: 10, sigmaY: 10),
+                        child: zw.ZenGlassCard(
+                          padding: const EdgeInsets.symmetric(
+                            horizontal: 20,
+                            vertical: 16,
+                          ),
+                          topOpacity: .26,
+                          bottomOpacity: .10,
+                          borderOpacity: .18,
+                          borderRadius: const BorderRadius.all(zs.ZenRadii.l),
+                          child: Column(
+                            crossAxisAlignment: CrossAxisAlignment.stretch,
+                            children: [
+                              Row(
+                                mainAxisAlignment: MainAxisAlignment.center,
+                                children: [
+                                  const Icon(Icons.stacked_line_chart_rounded,
+                                      size: 18, color: zs.ZenColors.jadeMid),
+                                  const SizedBox(width: 8),
+                                  Text(
+                                    'Stimmung – letzter Monat',
+                                    style: tt.bodyMedium!.copyWith(
+                                      color: zs.ZenColors.deepSage,
+                                      fontWeight: FontWeight.w700,
+                                    ),
+                                  ),
+                                ],
+                              ),
+                              const SizedBox(height: 10),
+                              if (showMoodGraph)
+                                ZenMoodGraphSeries(series: series)
+                              else
+                                (hasProv && last7FromSeries.isNotEmpty)
+                                    ? _ZenMoodBarSeries(last7: last7FromSeries)
+                                    : _ZenMoodBar(last7: last7MoodLegacy),
+                              const SizedBox(height: 12),
+                              Align(
+                                alignment: Alignment.center,
+                                child: Text(
+                                  'Ø Stimmung: ${avgMood.toStringAsFixed(2)}',
+                                  style: tt.bodyMedium!.copyWith(
+                                    color: zs.ZenColors.deepSage,
+                                    fontWeight: FontWeight.w700,
+                                    fontSize: 16.0,
+                                  ),
+                                ),
+                              ),
+                            ],
+                          ),
+                        ),
                       ),
-                ),
-                const SizedBox(height: 8),
-                Row(
-                  children: [
-                    ZenExportButton(
-                      label: "Export PDF",
-                      icon: Icons.picture_as_pdf_rounded,
-                      onPressed: () => AnonExportWidget.exportAsPDF(context, moodEntries, reflectionEntries),
                     ),
-                    const SizedBox(width: 12),
-                    ZenExportButton(
-                      label: "Export CSV",
-                      icon: Icons.file_upload,
-                      onPressed: () => AnonExportWidget.exportAsCSV(context, moodEntries),
+
+                    const SizedBox(height: 16),
+
+                    // Statistiken — Bubble
+                    Semantics(
+                      label: 'Statistiken',
+                      child: ClipRRect(
+                        borderRadius: const BorderRadius.all(zs.ZenRadii.l),
+                        child: BackdropFilter(
+                          filter: ImageFilter.blur(sigmaX: 8, sigmaY: 8),
+                          child: zw.ZenGlassCard(
+                            padding: const EdgeInsets.symmetric(
+                                vertical: 14, horizontal: 10),
+                            topOpacity: .24,
+                            bottomOpacity: .10,
+                            borderOpacity: .16,
+                            borderRadius: const BorderRadius.all(zs.ZenRadii.l),
+                            child: Row(
+                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+                              children: [
+                                _ProStatTile(
+                                  label: 'Reflexionen',
+                                  value: '$reflectionsCount',
+                                  icon: Icons.psychology_alt_rounded,
+                                ),
+                                _vSep(),
+                                _ProStatTile(
+                                  label: 'Aktive Tage',
+                                  value: '$activeDays',
+                                  icon: Icons.calendar_today_rounded,
+                                ),
+                                _vSep(),
+                                _ProStatTile(
+                                  label: 'Ø Mood',
+                                  value: avgMood.toStringAsFixed(2),
+                                  icon: Icons.mood_rounded,
+                                ),
+                              ],
+                            ),
+                          ),
+                        ),
+                      ),
                     ),
-                    const SizedBox(width: 12),
-                    ZenExportButton(
-                      label: "Monatsvideo",
-                      icon: Icons.movie_filter,
-                      onPressed: () {
-                        // Demo: Show a Lottie animation as „video"
-                        showDialog(
-                          context: context,
-                          builder: (ctx) => AlertDialog(
-                            content: Lottie.asset("assets/lottie/zen_movie.json", width: 300),
-                            actions: [
-                              TextButton(
-                                child: const Text("Schließen"),
-                                onPressed: () => Navigator.of(ctx).pop(),
+
+                    const SizedBox(height: 24),
+
+                    // Export-Bereich — Bubble (PDF guarded, CSV stabil; Video ausgeblendet)
+                    ClipRRect(
+                      borderRadius: const BorderRadius.all(zs.ZenRadii.m),
+                      child: BackdropFilter(
+                        filter: ImageFilter.blur(sigmaX: 8, sigmaY: 8),
+                        child: zw.ZenGlassCard(
+                          padding: const EdgeInsets.symmetric(
+                            horizontal: 16,
+                            vertical: 14,
+                          ),
+                          topOpacity: .22,
+                          bottomOpacity: .10,
+                          borderOpacity: .14,
+                          borderRadius: const BorderRadius.all(zs.ZenRadii.m),
+                          child: Column(
+                            children: [
+                              Text(
+                                'Monatsdaten exportieren',
+                                textAlign: TextAlign.center,
+                                style: tt.titleMedium!.copyWith(
+                                  fontWeight: FontWeight.w700,
+                                  color: zs.ZenColors.sage,
+                                  fontSize: isMobile ? 15.1 : 15.9,
+                                ),
+                              ),
+                              const SizedBox(height: 10),
+                              Row(
+                                mainAxisAlignment: MainAxisAlignment.center,
+                                children: [
+                                  _ProExportCircleButton(
+                                    icon: Icons.picture_as_pdf_rounded,
+                                    label: 'PDF',
+                                    semanticsLabel:
+                                        'Monatsdaten als PDF exportieren',
+                                    onTap: () {
+                                      try {
+                                        AnonExportWidget.exportAsPDF(
+                                          context,
+                                          moodEntries,
+                                          reflectionEntries,
+                                        );
+                                      } catch (_) {
+                                        ScaffoldMessenger.of(context)
+                                            .showSnackBar(
+                                          const SnackBar(
+                                            content: Text(
+                                              'PDF-Export nicht möglich. Bitte später erneut versuchen.',
+                                            ),
+                                            behavior:
+                                                SnackBarBehavior.floating,
+                                          ),
+                                        );
+                                      }
+                                    },
+                                  ),
+                                  const SizedBox(width: 18),
+                                  _ProExportCircleButton(
+                                    icon: Icons.grid_on_rounded,
+                                    label: 'CSV',
+                                    semanticsLabel:
+                                        'Monatsdaten als CSV exportieren',
+                                    onTap: () {
+                                      try {
+                                        AnonExportWidget.exportAsCSV(
+                                          context,
+                                          moodEntries,
+                                        );
+                                      } catch (_) {
+                                        ScaffoldMessenger.of(context)
+                                            .showSnackBar(
+                                          const SnackBar(
+                                            content: Text(
+                                              'CSV-Export nicht möglich. Bitte später erneut versuchen.',
+                                            ),
+                                            behavior:
+                                                SnackBarBehavior.floating,
+                                          ),
+                                        );
+                                      }
+                                    },
+                                  ),
+                                  // Video-Export ist ausgeblendet (Roadmap)
+                                ],
                               ),
                             ],
                           ),
-                        );
-                      },
+                        ),
+                      ),
                     ),
-                  ],
-                ),
-                const SizedBox(height: 25),
 
-                // Monatsreflexionen/Highlights
-                Text(
-                  "Monatsreflexion & Zitate",
-                  style: Theme.of(context).textTheme.titleMedium?.copyWith(
-                        fontWeight: FontWeight.bold,
-                        color: Color(0xFF365486),
-                        fontSize: 17,
+                    const SizedBox(height: 18),
+
+                    // Letzte Einsichten — Bubble (Provider-first)
+                    if ((hasProv && lastInsights.isNotEmpty) ||
+                        reflectionEntries.isNotEmpty)
+                      ClipRRect(
+                        borderRadius: const BorderRadius.all(zs.ZenRadii.m),
+                        child: BackdropFilter(
+                          filter: ImageFilter.blur(sigmaX: 6, sigmaY: 6),
+                          child: zw.ZenGlassCard(
+                            topOpacity: .20,
+                            bottomOpacity: .10,
+                            borderOpacity: .14,
+                            borderRadius:
+                                const BorderRadius.all(zs.ZenRadii.m),
+                            padding: const EdgeInsets.symmetric(
+                              vertical: 10,
+                              horizontal: 12,
+                            ),
+                            margin: const EdgeInsets.only(bottom: 10),
+                            child: Column(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: [
+                                Text(
+                                  'Deine letzten Einsichten',
+                                  style: tt.titleMedium!.copyWith(
+                                    color: zs.ZenColors.sage,
+                                    fontSize: isMobile ? 14.3 : 15.5,
+                                  ),
+                                ),
+                                const SizedBox(height: 7),
+                                ..._buildInsightsList(
+                                  context: context,
+                                  tt: tt,
+                                  prov: prov,
+                                  lastInsights: lastInsights,
+                                  legacy: reflectionEntries,
+                                ),
+                              ],
+                            ),
+                          ),
+                        ),
                       ),
-                ),
-                const SizedBox(height: 7),
-                ...reflectionEntries.reversed
-                    .take(5)
-                    .map((e) => ListTile(
-                          leading: Icon(Icons.bubble_chart_rounded, color: Color(0xFFA5CBA1)),
-                          title: Text(
-                            e.text,
-                            style: const TextStyle(fontWeight: FontWeight.w500, fontSize: 16),
+
+                    // Privacy / Features — kleine Bubble
+                    Padding(
+                      padding: const EdgeInsets.symmetric(vertical: 2.0),
+                      child: ClipRRect(
+                        borderRadius: const BorderRadius.all(zs.ZenRadii.s),
+                        child: BackdropFilter(
+                          filter: ImageFilter.blur(sigmaX: 4, sigmaY: 4),
+                          child: zw.ZenGlassCard(
+                            topOpacity: .16,
+                            bottomOpacity: .08,
+                            borderOpacity: .12,
+                            borderRadius:
+                                const BorderRadius.all(zs.ZenRadii.s),
+                            padding: const EdgeInsets.symmetric(
+                                vertical: 8, horizontal: 10),
+                            child: Column(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: [
+                                Text('• Daten bleiben lokal & anonym',
+                                    style: tt.bodySmall),
+                                Text('• Export jederzeit möglich',
+                                    style: tt.bodySmall),
+                                Text('• Deine Reflexionen gehören nur dir',
+                                    style: tt.bodySmall),
+                                Text('• Keine Werbung, maximale Kontrolle',
+                                    style: tt.bodySmall),
+                              ],
+                            ),
                           ),
-                          subtitle: Text("Am ${_formatDate(e.timestamp)}"),
-                        )),
-                const SizedBox(height: 34),
-
-                // Privacy/Settings Bereich
-                Text(
-                  "Pro Settings & Datenschutz",
-                  style: Theme.of(context).textTheme.titleMedium?.copyWith(
-                        fontWeight: FontWeight.bold,
-                        color: Color(0xFF365486),
-                        fontSize: 17,
+                        ),
                       ),
-                ),
-                const SizedBox(height: 8),
-                Card(
-                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(14)),
-                  elevation: 2,
-                  color: Color(0xFFF8F9FB),
-                  child: Padding(
-                    padding: const EdgeInsets.all(16),
-                    child: Column(
-                      crossAxisAlignment: CrossAxisAlignment.start,
-                      children: const [
-                        Text("• Alle Daten lokal & anonym"),
-                        Text("• Export jederzeit möglich"),
-                        Text("• Deine Reflexionen gehören nur dir"),
-                        Text("• Pro-Features: Keine Werbung, maximale Kontrolle"),
-                      ],
                     ),
-                  ),
+
+                    const SizedBox(height: 12),
+
+                    // Affirmation
+                    Opacity(
+                      opacity: 0.96,
+                      child: Row(
+                        mainAxisAlignment: MainAxisAlignment.center,
+                        children: [
+                          const Icon(Icons.spa_rounded,
+                              color: zs.ZenColors.sage, size: 21),
+                          const SizedBox(width: 7),
+                          Text(
+                            'Du darfst einfach da sein.',
+                            style: tt.bodyMedium!.copyWith(
+                              fontWeight: FontWeight.w600,
+                              color: zs.ZenColors.deepSage,
+                              fontSize: isMobile ? 14.1 : 15.2,
+                              letterSpacing: 0.02,
+                            ),
+                          ),
+                          const SizedBox(width: 6),
+                          const Text('🤍', style: TextStyle(fontSize: 16.5)),
+                        ],
+                      ),
+                    ),
+                    const SizedBox(height: 8),
+                  ],
                 ),
-                const SizedBox(height: 28),
-              ],
+              ),
             ),
           ),
         ],
@@ -222,10 +466,352 @@ class ProScreen extends StatelessWidget {
     );
   }
 
-  String _formatDate(DateTime dt) =>
-      "${dt.day.toString().padLeft(2, '0')}.${dt.month.toString().padLeft(2, '0')}.${dt.year}";
+  // ---- Insights-Listenaufbau (Provider-first, Legacy-Fallback) ----
+  List<Widget> _buildInsightsList({
+    required BuildContext context,
+    required TextTheme tt,
+    required JournalEntriesProvider? prov,
+    required List<JournalEntry> lastInsights,
+    required List<ReflectionEntry> legacy,
+  }) {
+    if (prov != null && lastInsights.isNotEmpty) {
+      return lastInsights.map((e) {
+        return Padding(
+          padding: const EdgeInsets.symmetric(vertical: 2.7),
+          child: ListTile(
+            dense: true,
+            contentPadding: EdgeInsets.zero,
+            leading: Icon(Icons.bubble_chart_rounded,
+                color: zs.ZenColors.deepSage.withOpacity(0.86)),
+            title: Text(
+              _bestReflectionTextJournal(e),
+              style: tt.bodyMedium!.copyWith(
+                fontWeight: FontWeight.w500,
+                fontSize: 14.2,
+              ),
+            ),
+            subtitle: Text(
+              _formatDate(e.createdAt.toLocal()),
+              style: tt.bodySmall!.copyWith(
+                fontSize: 11.5,
+                color: Colors.black54,
+              ),
+            ),
+          ),
+        );
+      }).toList();
+    }
+
+    // Legacy
+    return legacy.reversed.take(5).map((e) {
+      return Padding(
+        padding: const EdgeInsets.symmetric(vertical: 2.7),
+        child: ListTile(
+          dense: true,
+          contentPadding: EdgeInsets.zero,
+          leading: Icon(Icons.bubble_chart_rounded,
+              color: zs.ZenColors.deepSage.withOpacity(0.86)),
+          title: Text(
+            _bestReflectionTextLegacy(e),
+            style: tt.bodyMedium!.copyWith(
+              fontWeight: FontWeight.w500,
+              fontSize: 14.2,
+            ),
+          ),
+          subtitle: Text(
+            _formatDate(e.timestamp),
+            style: tt.bodySmall!.copyWith(
+              fontSize: 11.5,
+              color: Colors.black54,
+            ),
+          ),
+        ),
+      );
+    }).toList();
+  }
+
+  static String _bestReflectionTextLegacy(ReflectionEntry e) {
+    final raw = (e.aiSummary ?? e.preview(120)).trim();
+    return raw.isEmpty ? '—' : raw;
+  }
+
+  static String _bestReflectionTextJournal(JournalEntry e) {
+    final t = e.text.trim();
+    if (t.isEmpty) return '—';
+    return t.length <= 120 ? t : '${t.substring(0, 120).trimRight()}…';
+  }
+
+  static String _formatDate(DateTime dt) =>
+      '${dt.day.toString().padLeft(2, '0')}.${dt.month.toString().padLeft(2, '0')}.${dt.year}';
+
+  static String _randomMantra(int idx) {
+    const lines = [
+      'Du darfst einfach da sein.',
+      'Zeit hat keine Eile.',
+      'Heute genügt.',
+      'Hier ist Raum für dich.',
+      'Alles darf sein, wie es ist.',
+      'Atme. Mehr braucht es nicht.',
+      'Sanft ist stark genug.',
+      'Kleine Wellen, stilles Wasser.',
+      'Dein Tempo ist willkommen.',
+    ];
+    return lines[idx % lines.length];
+  }
 }
 
+// ---------- Widgets ----------
+
+class AnimatedPandaGlow extends StatefulWidget {
+  final double size;
+  const AnimatedPandaGlow({this.size = 68, Key? key}) : super(key: key);
+  @override
+  State<AnimatedPandaGlow> createState() => _AnimatedPandaGlowState();
+}
+
+class _AnimatedPandaGlowState extends State<AnimatedPandaGlow>
+    with SingleTickerProviderStateMixin {
+  late final AnimationController _glowController;
+
+  @override
+  void initState() {
+    super.initState();
+    _glowController =
+        AnimationController(vsync: this, duration: const Duration(seconds: 3))
+          ..repeat(reverse: true);
+  }
+
+  @override
+  void dispose() {
+    _glowController.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return AnimatedBuilder(
+      animation: _glowController,
+      builder: (_, __) => Container(
+        margin: const EdgeInsets.only(top: 16, bottom: 8),
+        decoration: BoxDecoration(
+          shape: BoxShape.circle,
+          boxShadow: [
+            BoxShadow(
+              color: zs.ZenColors.deepSage
+                  .withOpacity(0.10 + 0.17 * _glowController.value),
+              blurRadius: 30 + 16 * _glowController.value,
+              spreadRadius: 4 + 5 * _glowController.value,
+            ),
+          ],
+        ),
+        child: Image.asset(
+          'assets/panda.png',
+          width: widget.size,
+          height: widget.size,
+          fit: BoxFit.contain,
+          errorBuilder: (_, __, ___) =>
+              const Icon(Icons.pets, color: zs.ZenColors.deepSage, size: 42),
+        ),
+      ),
+    );
+  }
+}
+
+// MoodBar für kleine Screens (Legacy-Fallback)
+class _ZenMoodBar extends StatelessWidget {
+  final List<MoodEntry> last7;
+  const _ZenMoodBar({required this.last7});
+
+  @override
+  Widget build(BuildContext context) {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: List.generate(7, (i) {
+        final e = i < last7.length ? last7[i] : null;
+        return AnimatedContainer(
+          duration: const Duration(milliseconds: 300),
+          width: 32,
+          height: 18 + (e?.moodScore ?? 1) * 4.0,
+          margin: const EdgeInsets.symmetric(horizontal: 3),
+          decoration: BoxDecoration(
+            color: e == null
+                ? Colors.grey.withOpacity(0.12)
+                : e.color.withOpacity(0.96),
+            borderRadius: BorderRadius.circular(10),
+            boxShadow: [
+              if (e != null)
+                BoxShadow(
+                  color: e.color.withOpacity(0.10),
+                  blurRadius: 9,
+                  offset: const Offset(0, 2),
+                ),
+            ],
+            border: Border.all(
+              color: e == null
+                  ? Colors.grey.withOpacity(0.16)
+                  : e.color.withOpacity(0.35),
+              width: 1.1,
+            ),
+          ),
+          child: e == null
+              ? const Center(
+                  child: Icon(Icons.remove, size: 15, color: Colors.grey),
+                )
+              : Center(
+                  child: Text(
+                    '${e.moodScore}',
+                    style: TextStyle(
+                      fontWeight: FontWeight.w700,
+                      fontSize: 13,
+                      color: e.moodScore >= 3
+                          ? Colors.white
+                          : zs.ZenColors.deepSage,
+                    ),
+                  ),
+                ),
+        );
+      }),
+    );
+  }
+}
+
+// Alternative MoodBar für Provider-Serie (−2..+2) für kleine Screens
+class _ZenMoodBarSeries extends StatelessWidget {
+  final List<double> last7; // −2..+2
+  const _ZenMoodBarSeries({required this.last7});
+
+  @override
+  Widget build(BuildContext context) {
+    // Normiere −2..+2 → 0..4 für die gleiche Visualhöhe
+    final norm = last7.map((v) => (v + 2.0)).toList(); // 0..4
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: List.generate(7, (i) {
+        final val = i < norm.length ? norm[i] : null;
+        final color = val == null
+            ? Colors.grey.withOpacity(0.12)
+            : (val >= 3.0
+                ? zs.ZenColors.deepSage
+                : (val >= 2.0 ? zs.ZenColors.sage : Colors.grey));
+        return AnimatedContainer(
+          duration: const Duration(milliseconds: 300),
+          width: 32,
+          height: 18 + (val ?? 1) * 4.0,
+          margin: const EdgeInsets.symmetric(horizontal: 3),
+          decoration: BoxDecoration(
+            color:
+                val == null ? Colors.grey.withOpacity(0.12) : color.withOpacity(0.96),
+            borderRadius: BorderRadius.circular(10),
+            boxShadow: [
+              if (val != null)
+                BoxShadow(
+                  color: color.withOpacity(0.10),
+                  blurRadius: 9,
+                  offset: const Offset(0, 2),
+                ),
+            ],
+            border: Border.all(
+              color: val == null
+                  ? Colors.grey.withOpacity(0.16)
+                  : color.withOpacity(0.35),
+              width: 1.1,
+            ),
+          ),
+          child: val == null
+              ? const Center(
+                  child: Icon(Icons.remove, size: 15, color: Colors.grey),
+                )
+              : Center(
+                  child: Text(
+                    (val).toStringAsFixed(1),
+                    style: TextStyle(
+                      fontWeight: FontWeight.w700,
+                      fontSize: 12.5,
+                      color:
+                          (val >= 3.0) ? Colors.white : zs.ZenColors.deepSage,
+                    ),
+                  ),
+                ),
+        );
+      }),
+    );
+  }
+}
+
+// MoodGraph (fl_chart) – Provider-Serie (−2 … +2) in Glas-Bubble
+class ZenMoodGraphSeries extends StatelessWidget {
+  final List<double> series; // −2 … +2; ältestes → neuestes
+  const ZenMoodGraphSeries({required this.series});
+
+  @override
+  Widget build(BuildContext context) {
+    final data = series.takeLast(30);
+    final tt = Theme.of(context).textTheme;
+
+    return SizedBox(
+      height: 118,
+      child: LineChart(
+        LineChartData(
+          minY: -2,
+          maxY: 2,
+          gridData: FlGridData(show: false),
+          borderData: FlBorderData(show: false),
+          titlesData: FlTitlesData(show: false),
+          lineBarsData: [
+            LineChartBarData(
+              spots: List.generate(
+                data.length,
+                (i) => FlSpot(i.toDouble(), data[i]),
+              ),
+              isCurved: true,
+              gradient: const LinearGradient(
+                colors: [zs.ZenColors.deepSage, zs.ZenColors.sage],
+              ),
+              barWidth: 5.0,
+              dotData: FlDotData(show: false),
+              belowBarData: BarAreaData(
+                show: true,
+                gradient: LinearGradient(
+                  colors: [
+                    zs.ZenColors.sage.withOpacity(0.16),
+                    Colors.white.withOpacity(0.10),
+                  ],
+                  begin: Alignment.topCenter,
+                  end: Alignment.bottomCenter,
+                ),
+              ),
+            ),
+          ],
+          lineTouchData: LineTouchData(
+            touchTooltipData: LineTouchTooltipData(
+              getTooltipItems: (touchedSpots) => touchedSpots
+                  .map(
+                    (t) => LineTooltipItem(
+                      'Wert: ${t.y.toStringAsFixed(2)}',
+                      tt.bodyMedium!.copyWith(
+                        color: Colors.white,
+                        fontWeight: FontWeight.bold,
+                      ),
+                    ),
+                  )
+                  .toList(),
+            ),
+            handleBuiltInTouches: true,
+          ),
+        ),
+      ),
+    );
+  }
+}
+
+// vertikale Trennlinie
+Widget _vSep() => Container(
+      width: 1.6,
+      height: 37,
+      color: zs.ZenColors.sage.withOpacity(0.18),
+    );
+
+// Statistik-Kachel
 class _ProStatTile extends StatelessWidget {
   final String label;
   final String value;
@@ -239,20 +825,167 @@ class _ProStatTile extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
+    final tt = Theme.of(context).textTheme;
     return Column(
       children: [
-        Icon(icon, color: Color(0xFFA5CBA1), size: 28),
-        const SizedBox(height: 5),
+        CircleAvatar(
+          backgroundColor: zs.ZenColors.sage.withOpacity(0.18),
+          radius: 20.5,
+          child: Icon(icon, color: zs.ZenColors.sage, size: 20.5),
+        ),
+        const SizedBox(height: 6),
         Text(
           value,
-          style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
+          style: tt.bodyMedium!.copyWith(fontWeight: FontWeight.bold),
         ),
-        const SizedBox(height: 2),
+        const SizedBox(height: 2.5),
         Text(
           label,
-          style: const TextStyle(fontSize: 12, color: Colors.grey),
+          style: tt.bodySmall!.copyWith(color: Colors.black54),
         ),
       ],
     );
   }
 }
+
+// Export-Button als Zen-Kreis (mit A11y/Tooltips)
+class _ProExportCircleButton extends StatelessWidget {
+  final IconData icon;
+  final String label;
+  final String? semanticsLabel;
+  final VoidCallback onTap;
+
+  const _ProExportCircleButton({
+    required this.icon,
+    required this.label,
+    required this.onTap,
+    this.semanticsLabel,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final tt = Theme.of(context).textTheme;
+    return Semantics(
+      button: true,
+      label: semanticsLabel ?? label,
+      child: Column(
+        children: [
+          Tooltip(
+            message: label,
+            child: GestureDetector(
+              onTap: onTap,
+              child: CircleAvatar(
+                backgroundColor: zs.ZenColors.deepSage,
+                radius: 19.5,
+                child: Icon(icon, color: Colors.white, size: 18.5),
+              ),
+            ),
+          ),
+          const SizedBox(width: 0, height: 3.5),
+          Text(
+            label,
+            style: tt.bodySmall!.copyWith(
+              fontWeight: FontWeight.w600,
+              color: zs.ZenColors.sage,
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+// takeLast-Extension
+extension ListTakeLast<T> on List<T> {
+  List<T> takeLast(int count) =>
+      skip(length > count ? length - count : 0).toList();
+}
+
+// ---- Helper zur Provider-Analyse -------------------------------------------
+
+bool _isReflectionEntry(JournalEntry e) =>
+    e.type == JournalType.reflection;
+
+const Map<String, double> _moodScoreMap = {
+  // −2 … +2
+  'glücklich': 2.0,
+  'ruhig': 1.0,
+  'neutral': 0.0,
+  'traurig': -1.0,
+  'gestresst': -1.0,
+  'wütend': -2.0,
+};
+
+double _scoreFromLabel(String? label) {
+  if (label == null) return 0.0;
+  final key = label.trim().toLowerCase();
+  return _moodScoreMap[key] ?? 0.0;
+}
+
+List<double> _seriesFromProvider(JournalEntriesProvider prov, {int days = 30}) {
+  if (prov.entries.isEmpty) return const [];
+
+  final now = DateTime.now().toUtc();
+  final start = now.subtract(Duration(days: days));
+  final byDay = <String, List<double>>{};
+
+  for (final e in prov.entries) {
+    final t = e.createdAt.toUtc();
+    if (t.isBefore(start)) break; // entries() ist absteigend sortiert
+    final key =
+        '${t.year}-${t.month.toString().padLeft(2, '0')}-${t.day.toString().padLeft(2, '0')}';
+    (byDay[key] ??= <double>[]).add(_scoreFromLabel(e.moodLabel));
+  }
+
+  // nach Datum aufsteigend sortieren und Tagesmittel bilden
+  final keys = byDay.keys.toList()..sort((a, b) => a.compareTo(b));
+  return keys.map((k) {
+    final list = byDay[k]!;
+    final avg =
+        list.isEmpty ? 0.0 : (list.reduce((a, b) => a + b) / list.length);
+    return avg.clamp(-2.0, 2.0);
+  }).toList();
+}
+
+double _averageMoodFromProvider(JournalEntriesProvider prov,
+    {Duration window = const Duration(days: 30)}) {
+  if (prov.entries.isEmpty) return 0.0;
+  final now = DateTime.now().toUtc();
+  final start = now.subtract(window);
+  final vals = <double>[];
+
+  for (final e in prov.entries) {
+    final t = e.createdAt.toUtc();
+    if (t.isBefore(start)) break;
+    vals.add(_scoreFromLabel(e.moodLabel));
+  }
+  if (vals.isEmpty) return 0.0;
+  return vals.reduce((a, b) => a + b) / vals.length;
+}
+
+int _activeDaysCountFromProvider(JournalEntriesProvider prov) {
+  final set = <String>{};
+  for (final e in prov.entries) {
+    final t = e.createdAt.toUtc();
+    set.add('${t.year}-${t.month}-${t.day}');
+  }
+  return set.length;
+}
+
+// ---- Helper zur Legacy-Reskalierung ----------------------------------------
+
+List<double> _fallbackSeriesFromMoodEntries(List<MoodEntry> moodEntries) {
+  // MoodEntry.moodScore (0..4) → −2..+2
+  if (moodEntries.isEmpty) return const [];
+  final data = moodEntries.takeLast(30);
+  return data.map((e) => (e.moodScore.toDouble() - 2.0)).toList();
+}
+
+double _fallbackAvgMoodFromMoodEntries(List<MoodEntry> moodEntries) {
+  if (moodEntries.isEmpty) return 0.0;
+  final avg = moodEntries
+          .map((e) => e.moodScore)
+          .reduce((a, b) => a + b) /
+      moodEntries.length;
+  return avg - 2.0; // 0..4 → −2..+2
+}
diff --git a/zen_project1337/lib/features/reflection/reflection_screen.dart b/zen_project1337/lib/features/reflection/reflection_screen.dart
index 82f7909..66b6e06 100644
--- a/zen_project1337/lib/features/reflection/reflection_screen.dart
+++ b/zen_project1337/lib/features/reflection/reflection_screen.dart
@@ -1,210 +1,1477 @@
+// lib/features/reflection/reflection_screen.dart
+//
+// ReflectionScreen — Panda v2.7 (calm, talk-ready, followups, Mood → Save, safe Ticker)
+// -----------------------------------------------------------------------------
+// Kernideen:
+// • Eine Reflexion = eine Bubble („Round“) mit beliebig vielen Panda-Schritten.
+// • Schritt: Spiegel (2–6 Sätze, kein Rat) + genau 1 Leitfrage ODER kurzer Warm-Talk.
+// • Followups: dezente Chips als Starthilfe (setzen Text in die Eingabe).
+// • Flow: Deine Gedanken → Frage → Deine Antwort → Mood → Save.
+// • Dedupe: Spiegel/Talk/Frage bereinigt, keine Dopplungen.
+// • Safe Ticker: Controller in initState erzeugt, in dispose entsorgt (kein Ancestor-Lookup).
+//
+// Abhängigkeiten im Projekt vorhanden:
+//   ZenBackdrop, ZenGlassCard, ZenAppBar, PandaHeader, ZenColors, ZenRadii
+//   GuidanceService (startSession/continueSession[+optional talk()])
+//   SpeechService, JournalEntriesProvider / JournalEntry, MoodPrompt
+// -----------------------------------------------------------------------------
+
+import 'dart:async';
+import 'dart:math';
+
 import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
 import 'package:provider/provider.dart';
-import '../../shared/ui/zen_widgets.dart';
-import '../../data/reflection_entry.dart';
-import '../../data/mood_entry.dart';
-import '../../audio/soundscape_manager.dart';
-
-/// ReflectionScreen – Dein Raum für echte Selbsterkenntnis.
-/// - Voice & Text (wählbar, nahtlos).
-/// - KI antwortet mit Zen-Gegenfrage (Overlay, keine Chat-Blase!)
-/// - Mood-Eingabe (Stimmung nach Reflexion)
-/// - Animationen/Soundscapes für Atmosphäre.
-/// - Journaling mit "Zen Garden"-Visualisierung (optional unten)
 
+import '../../shared/zen_style.dart' hide ZenBackdrop, ZenGlassCard, ZenAppBar;
+import '../../shared/ui/zen_widgets.dart'
+    show ZenBackdrop, ZenGlassCard, ZenAppBar, PandaHeader;
+
+import '../mood/mood_prompt.dart';
+
+import '../../data/journal_entry.dart';
+import '../../models/journal_entries_provider.dart';
+import '../../services/guidance_service.dart';
+import '../../services/speech_service.dart';
+
+// ---------------- Panda Step --------------------------------------------------
+class _PandaStep {
+  final String mirror;           // 2–6 Sätze, warm & kontexttreu
+  final String question;         // genau 1 Frage (leer => Talk-only)
+  final List<String> talkLines;  // 0–2 kurze Sätze (Warm-Talk)
+  final bool risk;               // Safety-Flag
+  final List<String> followups;  // dezente Vorschläge (setzen Text)
+  String? answer;                // Nutzer-Antwort
+
+  _PandaStep({
+    required this.mirror,
+    required this.question,
+    this.talkLines = const [],
+    this.followups = const [],
+    this.risk = false,
+    this.answer,
+  });
+
+  bool get hasAnswer => (answer ?? '').trim().isNotEmpty;
+  bool get expectsAnswer => question.trim().isNotEmpty;
+}
+
+// ---------------- Round Model -------------------------------------------------
+class ReflectionRound {
+  final String id;
+  final DateTime ts;
+  final String mode;       // 'text' | 'voice'
+  String userInput;        // O-Ton (Start der Runde)
+  final List<_PandaStep> steps;
+  String? entryId;
+
+  // Mood nach Nutzer-Antwort (0..4) + Label
+  int? moodScore;
+  String? moodLabel;
+
+  ReflectionRound({
+    required this.id,
+    required this.ts,
+    required this.mode,
+    required this.userInput,
+    List<_PandaStep>? steps,
+    this.entryId,
+    this.moodScore,
+    this.moodLabel,
+  }) : steps = steps ?? <_PandaStep>[];
+
+  bool get hasPendingQuestion {
+    if (steps.isEmpty) return false;
+    final last = steps.last;
+    return last.expectsAnswer && !last.hasAnswer;
+  }
+
+  bool get answered => steps.any((s) => s.hasAnswer);
+  bool get hasMood => moodScore != null;
+
+  Set<String> get normalizedQuestions {
+    final out = <String>{};
+    for (final s in steps) {
+      final q = s.question.trim();
+      if (q.isNotEmpty) out.add(_ReflectionScreenState.normalizeForCompare(q));
+    }
+    return out;
+  }
+}
+
+// ---------------- Optionaler Hook --------------------------------------------
+typedef AddToGedankenbuch = void Function(
+  String text,
+  String mood, {
+  bool isReflection,
+  String? aiQuestion,
+});
+
+// ---------------- Screen ------------------------------------------------------
 class ReflectionScreen extends StatefulWidget {
-  final Function(ReflectionEntry)? onEntryAdded;
+  final AddToGedankenbuch? onAddToGedankenbuch;
+  final String? initialUserText;
 
-  const ReflectionScreen({super.key, this.onEntryAdded});
+  const ReflectionScreen({super.key, this.onAddToGedankenbuch, this.initialUserText});
 
   @override
   State<ReflectionScreen> createState() => _ReflectionScreenState();
 }
 
-class _ReflectionScreenState extends State<ReflectionScreen> {
+class _ReflectionScreenState extends State<ReflectionScreen>
+    with SingleTickerProviderStateMixin {
+  static const Duration _animShort = Duration(milliseconds: 240);
+
   final TextEditingController _controller = TextEditingController();
-  String? _reflectionText;
-  MoodEntry? _selectedMood;
-  String? _aiResponse;
-  bool _isProcessing = false;
+  final FocusNode _inputFocus = FocusNode();
+  final FocusNode _pageFocus = FocusNode();
+  final ScrollController _listCtrl = ScrollController();
+
+  late final AnimationController _fadeSlideCtrl;
+
+  final SpeechService _speech = SpeechService();
+  StreamSubscription<String>? _finalSub;
+
+  final List<ReflectionRound> _rounds = <ReflectionRound>[];
+  ReflectionRound? get _current => _rounds.isEmpty ? null : _rounds.last;
+
+  /// Worker-Session (GuidanceService.ReflectionSession ODER Map – dynamic für Toleranz)
+  dynamic _session;
+  bool loading = false;
+
+  String get _errorHint => GuidanceService.instance.errorHint;
+  String get _loadingHint => GuidanceService.instance.loadingHint;
 
   @override
-  Widget build(BuildContext context) {
-    final theme = Theme.of(context);
-
-    return Scaffold(
-      extendBodyBehindAppBar: true,
-      appBar: ZenAppBar(
-        title: "Reflektieren",
-        showBack: false,
-        onSoundscapeTap: () => SoundscapeManager.of(context).toggle(),
+  void initState() {
+    super.initState();
+
+    // Safe Ticker hier erzeugen (kein Kontext-Lookup):
+    _fadeSlideCtrl = AnimationController(vsync: this, duration: _animShort);
+
+    // Live-Transkript → Eingabe
+    _finalSub = _speech.transcript$.listen((t) {
+      if (!mounted) return;
+      WidgetsBinding.instance.addPostFrameCallback((_) {
+        if (!mounted) return;
+        final cur = _controller.text.trim();
+        final joined = (cur.isEmpty ? t : '$cur\n$t').trim();
+        _controller.text = joined;
+        _controller.selection =
+            TextSelection.fromPosition(TextPosition(offset: _controller.text.length));
+        FocusScope.of(context).requestFocus(_inputFocus);
+      });
+    });
+
+    // Optionaler Auto-Start
+    final seed = (widget.initialUserText ?? '').trim();
+    if (seed.isNotEmpty) {
+      WidgetsBinding.instance.addPostFrameCallback((_) async {
+        if (!mounted) return;
+        await _startNewReflection(userText: seed, mode: 'text');
+      });
+    }
+  }
+
+  @override
+  void dispose() {
+    _finalSub?.cancel();
+    _speech.dispose();
+    _controller.dispose();
+    _inputFocus.dispose();
+    _pageFocus.dispose();
+    _listCtrl.dispose();
+    _fadeSlideCtrl.dispose();
+    super.dispose();
+  }
+
+  // ---------------- Keyboard Shortcuts ---------------------------------------
+  KeyEventResult _handleKey(RawKeyEvent e) {
+    if (e.logicalKey == LogicalKeyboardKey.escape && _speech.isRecording) {
+      _toggleRecording();
+      return KeyEventResult.handled;
+    }
+    final isEnter =
+        e.logicalKey == LogicalKeyboardKey.enter || e.logicalKey == LogicalKeyboardKey.numpadEnter;
+    final withCtrlOrCmd = e.isControlPressed || e.isMetaPressed;
+    if (withCtrlOrCmd && isEnter && !loading) {
+      _send();
+      return KeyEventResult.handled;
+    }
+    return KeyEventResult.ignored;
+  }
+
+  // ---------------- Actions ---------------------------------------------------
+  Future<void> _toggleRecording() async {
+    try {
+      if (_speech.isRecording) {
+        await _speech.stop();
+        if (!mounted) return;
+        FocusScope.of(context).requestFocus(_inputFocus);
+      } else {
+        HapticFeedback.selectionClick();
+        FocusScope.of(context).unfocus();
+        await _speech.start();
+      }
+      if (mounted) setState(() {});
+    } catch (_) {
+      _toast('Mikrofon nicht verfügbar. Bitte Berechtigung erlauben.');
+    }
+  }
+
+  Future<void> _send() async {
+    final text = _controller.text.trim();
+    if (text.isEmpty || loading) return;
+
+    if (_current == null) {
+      await _startNewReflection(userText: text, mode: _speech.isRecording ? 'voice' : 'text');
+      return;
+    }
+
+    if (_current!.hasPendingQuestion) {
+      setState(() {
+        _current!.steps.last.answer = text;
+        _controller.clear();
+      });
+      _scrollToBottom();
+      FocusScope.of(context).requestFocus(_inputFocus);
+      return;
+    }
+
+    await _startNewReflection(userText: text, mode: _speech.isRecording ? 'voice' : 'text');
+  }
+
+  // Talk-Push (Panda weiterreden)
+  Future<void> _talkOnly() async {
+    final r = _current;
+    if (r == null || _session == null || loading) return;
+
+    setState(() => loading = true);
+    try {
+      dynamic turn;
+      final lastText = r.steps.isNotEmpty ? (r.steps.last.answer ?? r.userInput) : r.userInput;
+
+      // bevorzugt: GuidanceService.talk(); Fallback: continueSession
+      try {
+        final dyn = GuidanceService.instance as dynamic;
+        turn = await dyn.talk(
+          session: _session,
+          userText: lastText,
+          locale: 'de',
+          tz: 'Europe/Zurich',
+        );
+      } catch (_) {
+        turn = await GuidanceService.instance.continueSession(
+          session: _session,
+          text: lastText,
+          locale: 'de',
+          tz: 'Europe/Zurich',
+        );
+      }
+
+      final step = _buildStepFromTurn(
+        turn,
+        userText: r.userInput,
+        round: r,
+        smallTalkHint: false,
+      );
+      setState(() {
+        _session = _turnSession(turn);
+        r.steps.add(step);
+      });
+
+      _fadeSlideCtrl.forward(from: 0);
+      _scrollToBottom();
+    } finally {
+      if (mounted) setState(() => loading = false);
+    }
+  }
+
+  // --- Start: neue Reflexion -------------------------------------------------
+  Future<void> _startNewReflection({required String userText, required String mode}) async {
+    setState(() => loading = true);
+    try {
+      final round = ReflectionRound(
+        id: _makeId(),
+        ts: DateTime.now(),
+        mode: mode,
+        userInput: userText,
+      );
+      setState(() {
+        _rounds.add(round);
+        _controller.clear();
+      });
+      _scrollToBottom();
+
+      final bool smallTalk = _looksLikeSmallTalk(userText);
+
+      dynamic turn;
+      try {
+        turn = await GuidanceService.instance.startSession(
+          text: userText,
+          locale: 'de',
+          tz: 'Europe/Zurich',
+        );
+      } catch (_) {
+        if (!mounted) return;
+        setState(() => round.steps.add(_PandaStep(
+              mirror: _ensureMirrorSentences(_fallbackMirror(userText)),
+              question: _limitWords(_errorHint, 30),
+            )));
+        return;
+      }
+
+      final step = _buildStepFromTurn(
+        turn,
+        userText: userText,
+        round: round,
+        smallTalkHint: smallTalk,
+      );
+      setState(() {
+        _session = _turnSession(turn);
+        round.steps.add(step);
+      });
+
+      _fadeSlideCtrl.forward(from: 0);
+      _scrollToBottom();
+      WidgetsBinding.instance.addPostFrameCallback((_) {
+        if (mounted) FocusScope.of(context).requestFocus(_inputFocus);
+      });
+    } finally {
+      if (mounted) setState(() => loading = false);
+    }
+  }
+
+  // --- Continue in derselben Bubble ------------------------------------------
+  Future<void> _continueWithinCurrent() async {
+    final r = _current;
+    if (r == null || _session == null) return;
+    if (r.hasPendingQuestion) {
+      _toast('Bitte zuerst kurz antworten.');
+      return;
+    }
+
+    setState(() => loading = true);
+    try {
+      final lastAns = r.steps.last.answer?.trim() ?? '';
+      dynamic turn;
+      try {
+        turn = await GuidanceService.instance.continueSession(
+          session: _session,
+          text: lastAns,
+          locale: 'de',
+          tz: 'Europe/Zurich',
+        );
+      } catch (_) {
+        if (!mounted) return;
+        setState(() => r.steps.add(_PandaStep(
+              mirror: _ensureMirrorSentences('Das stockt kurz. Ich bleibe geduldig bei dir.'),
+              question: _limitWords(_errorHint, 30),
+            )));
+        return;
+      }
+
+      final step = _buildStepFromTurn(
+        turn,
+        userText: r.userInput,
+        round: r,
+        smallTalkHint: false,
+      );
+      setState(() {
+        _session = _turnSession(turn);
+        r.steps.add(step);
+      });
+
+      _fadeSlideCtrl.forward(from: 0);
+      _scrollToBottom();
+      WidgetsBinding.instance.addPostFrameCallback((_) {
+        if (mounted) FocusScope.of(context).requestFocus(_inputFocus);
+      });
+    } finally {
+      if (mounted) setState(() => loading = false);
+    }
+  }
+
+  // ---------------- Speichern (JournalEntry) ---------------------------------
+  Future<void> _saveRound(ReflectionRound r) async {
+    if (r.entryId != null) {
+      _toast('Bereits gespeichert.');
+      return;
+    }
+    if (!r.answered) {
+      _toast('Bitte zuerst deine Antwort schreiben.');
+      return;
+    }
+    if (!r.hasMood) {
+      _toast('Bitte wähle noch kurz deine Stimmung.');
+      return;
+    }
+
+    final String lastAns = r.steps
+        .map((e) => (e.answer ?? '').trim())
+        .where((s) => s.isNotEmpty)
+        .fold<String>('', (prev, cur) => cur.isNotEmpty ? cur : prev);
+
+    final String textForCard = lastAns.isNotEmpty ? lastAns : r.userInput.trim();
+
+    final String entryId = r.id;
+    final DateTime ts = r.ts.toUtc();
+
+    final Map<String, dynamic> reflectionBlock = {
+      'thought': r.userInput.trim(),
+      'steps': [
+        if (r.steps.isNotEmpty)
+          {
+            if (r.steps.first.mirror.trim().isNotEmpty) 'mirror': r.steps.first.mirror.trim(),
+            if (r.steps.first.question.trim().isNotEmpty) 'question': r.steps.first.question.trim(),
+            if (r.steps.first.talkLines.isNotEmpty) 'talk': r.steps.first.talkLines,
+            if (lastAns.isNotEmpty) 'answer': lastAns,
+          }
+      ],
+      if (r.steps.isNotEmpty && r.steps.first.risk) 'risk': true,
+    };
+
+    final moodLabel = (r.moodLabel ?? 'Neutral').trim();
+
+    final v = {
+      'id': entryId,
+      'ts': ts.toIso8601String(),
+      'type': 'reflection',
+      'text': textForCard,
+      'input': {'mode': r.mode, 'content': r.userInput},
+      'analysis': {
+        if (r.steps.isNotEmpty) 'question': r.steps.first.question,
+        if (r.steps.isNotEmpty) 'mirror': r.steps.first.mirror,
+        if (r.moodScore != null) 'moodScore': r.moodScore,
+      },
+      'answer': {'content': lastAns.isNotEmpty ? lastAns : null, 'mode': 'text'},
+      'links': {'story_id': null},
+      'reflection': reflectionBlock,
+      'createdAt': ts.toIso8601String(),
+      'isReflection': true,
+      'aiQuestion': r.steps.isNotEmpty ? r.steps.first.question : null,
+      'kind': 'reflection',
+      'question': r.steps.isNotEmpty ? r.steps.first.question : null,
+      'moodLabel': moodLabel,
+    };
+
+    final entry = JournalEntry.fromJson(v);
+    final prov = context.read<JournalEntriesProvider>();
+    final List<JournalEntry> existing = List<JournalEntry>.from(prov.entries);
+    existing.add(entry);
+    prov.replaceAll(existing);
+
+    setState(() => r.entryId = entryId);
+    widget.onAddToGedankenbuch?.call(
+      textForCard,
+      moodLabel,
+      isReflection: true,
+      aiQuestion: r.steps.isNotEmpty ? r.steps.first.question : null,
+    );
+
+    _toast('Ins Gedankenbuch gespeichert.');
+  }
+
+  // ---------------- Entwurf ---------------------------------------------------
+  Future<void> _saveDraft(ReflectionRound r) async {
+    final draftName = _autoSessionName(r.userInput);
+    _toast('Als Entwurf gemerkt: "$draftName"');
+  }
+
+  String _autoSessionName(String text) {
+    final clean = text.replaceAll(RegExp(r'\s+'), ' ').trim();
+    if (clean.isEmpty) return 'Reflexion';
+    const max = 36;
+    return clean.length <= max ? clean : '${clean.substring(0, max)}…';
+  }
+
+  // ---------------- Turn → Step Mapping --------------------------------------
+  _PandaStep _buildStepFromTurn(
+    dynamic t, {
+    required String userText,
+    required ReflectionRound round,
+    required bool smallTalkHint,
+  }) {
+    // Rohdaten aus Turn
+    final rawMirror = _turnMirror(t).trim();
+    final rawTalk = _turnTalk(t);
+    final questions = _turnQuestions(t);
+    final followups = _turnFollowups(t);
+    final out1 = _turnString(t, 'outputText');
+    final out2 = _turnString(t, 'output_text');
+
+    // Mirror
+    final mirrorRaw = rawMirror.isNotEmpty ? rawMirror : _fallbackMirror(userText);
+    var mirror = _ensureMirrorSentences(mirrorRaw);
+
+    // Talk
+    final List<String> talk = rawTalk.map((s) => s.trim()).where((s) => s.isNotEmpty).toList();
+
+    // Frage
+    final String qRaw =
+        (questions.isNotEmpty ? questions.first : (out1.isNotEmpty ? out1 : out2)).trim();
+    String? sanitized = _sanitizeQuestion(qRaw);
+
+    // Smalltalk-Hinweis
+    final bool isSmallTalk = smallTalkHint || _looksLikeSmallTalk(userText);
+    if (isSmallTalk && talk.isEmpty) {
+      talk.addAll(<String>[
+        'Mir geht’s gut. Danke, dass du fragst.',
+        'Es klingt, als hättest du ein feines Gespür dafür.'
+      ]);
+      sanitized ??= 'Was hat dich heute dazu gebracht, gerade das zu fragen?';
+    }
+
+    // Fallback-Frage (empathisch, ohne Zitat „Wenn du auf …“)
+    final String baseQuestion =
+        sanitized ?? _contextualFallbackQuestion(userText, hintFromMirror: mirror);
+
+    // Miniguard
+    final String question = _makeUniqueQuestion(baseQuestion, round, userText, mirror);
+
+    // DEDUPE: Spiegel/Talk/Frage aufräumen
+    final cleanedTalk = _dedupeTalk(talk, mirror, question);
+    mirror = _dedupeMirror(mirror, question, cleanedTalk);
+
+    // Risk
+    final riskLevel = _turnString(t, 'risk_level').toLowerCase();
+    final flow = _turnFlow(t);
+    final bool risk = _turnBool(t, 'risk') || riskLevel == 'high' || (flow?['risk_notice'] == 'safety');
+
+    // Followups (sanft, max. 3, keine Duplikate zur Frage)
+    final fu = followups
+        .map(_sanitizeQuestion)
+        .whereType<String>()
+        .where((s) => normalizeForCompare(s) != normalizeForCompare(question))
+        .toSet()
+        .toList()
+        .take(3)
+        .toList();
+
+    return _PandaStep(
+      mirror: mirror,
+      question: _limitWords(question, 30),
+      talkLines: cleanedTalk,
+      followups: fu,
+      risk: risk,
+    );
+  }
+
+  // ---------------- Safe Turn Accessors --------------------------------------
+  String _turnString(dynamic t, String key) {
+    if (t is Map && t[key] is String) return t[key] as String;
+    try {
+      final d = t as dynamic;
+      switch (key) {
+        case 'mirror':
+          final s = d.mirror;
+          if (s is String) return s;
+          break;
+        case 'outputText':
+          final s = d.outputText;
+          if (s is String) return s;
+          break;
+        case 'output_text':
+          final s = d.output_text;
+          if (s is String) return s;
+          break;
+        case 'risk_level':
+          final s = d.risk_level;
+          if (s is String) return s;
+          break;
+      }
+    } catch (_) {}
+    // try toJson
+    try {
+      final v = (t as dynamic).toJson?.call();
+      if (v is Map && v[key] is String) return v[key] as String;
+    } catch (_) {}
+    return '';
+  }
+
+  List<String> _turnQuestions(dynamic t) {
+    if (t is Map && t['questions'] is List) {
+      return (t['questions'] as List).map((e) => e.toString()).toList();
+    }
+    try {
+      final q = (t as dynamic).questions;
+      if (q is List) return q.map((e) => e.toString()).toList();
+    } catch (_) {}
+    return const <String>[];
+  }
+
+  List<String> _turnFollowups(dynamic t) {
+    if (t is Map) {
+      final d = (t['followups'] ?? t['follow_up'] ?? t['followup_questions']);
+      if (d is List) return d.map((e) => e.toString()).toList();
+    }
+    try {
+      final f = (t as dynamic).followups;
+      if (f is List) return f.map((e) => e.toString()).toList();
+    } catch (_) {}
+    return const <String>[];
+  }
+
+  String _turnMirror(dynamic t) => _turnString(t, 'mirror');
+
+  List<String> _turnTalk(dynamic t) {
+    if (t is Map && t['talk'] is List) {
+      return (t['talk'] as List).map((e) => e.toString()).toList();
+    }
+    try {
+      final tl = (t as dynamic).talk;
+      if (tl is List) return tl.map((e) => e.toString()).toList();
+    } catch (_) {}
+    return const <String>[];
+  }
+
+  Map<String, dynamic>? _turnFlow(dynamic t) {
+    if (t is Map && t['flow'] is Map) {
+      return Map<String, dynamic>.from(t['flow'] as Map);
+    }
+    try {
+      final f = (t as dynamic).flow;
+      if (f is Map) return Map<String, dynamic>.from(f);
+    } catch (_) {}
+    return null;
+  }
+
+  dynamic _turnSession(dynamic t) {
+    if (t is Map) return t['session'];
+    try {
+      return (t as dynamic).session;
+    } catch (_) {
+      return null;
+    }
+  }
+
+  bool _turnBool(dynamic t, String key) {
+    if (t is Map && t[key] is bool) return t[key] as bool;
+    try {
+      final d = t as dynamic;
+      switch (key) {
+        case 'risk':
+          final b = d.risk;
+          if (b is bool) return b;
+          break;
+      }
+    } catch (_) {}
+    return false;
+  }
+
+  // ---------------- Dedupe / Text-Hilfen -------------------------------------
+  String _normalizeLine(String s) => s
+      .toLowerCase()
+      .replaceAll(RegExp(r'[„“"»«]'), '"')
+      .replaceAll(RegExp(r'\s+'), ' ')
+      .trim();
+
+  List<String> _splitSentences(String text) => text
+      .replaceAll('\n', ' ')
+      .split(RegExp(r'(?<=[.!?])\s+'))
+      .map((e) => e.trim())
+      .where((e) => e.isNotEmpty)
+      .toList();
+
+  String _dedupeMirror(String mirror, String question, List<String> talk) {
+    final qn = _normalizeLine(question);
+    final talkN = talk.map(_normalizeLine).toSet();
+    final seen = <String>{};
+
+    final parts = _splitSentences(mirror);
+    final out = <String>[];
+    for (final s in parts) {
+      final n = _normalizeLine(s);
+      if (n.isEmpty) continue;
+      if (n == qn) continue;           // Frage gehört nicht in den Spiegel
+      if (talkN.contains(n)) continue; // Talk nicht doppeln
+      if (seen.add(n)) out.add(s);
+    }
+
+    if (out.isEmpty) {
+      out.add('Ich höre dich.');
+      out.add('Ich bleibe bei dir.');
+    } else if (out.length == 1) {
+      out.add('Ich lese das aufmerksam mit.');
+    }
+    if (out.length > 6) {
+      return out.take(6).join(' ');
+    }
+    return out.join(' ');
+  }
+
+  List<String> _dedupeTalk(List<String> talk, String mirror, String question) {
+    final mirrorSet = _splitSentences(mirror).map(_normalizeLine).toSet();
+    final qn = _normalizeLine(question);
+    final seen = <String>{};
+    final out = <String>[];
+
+    for (final line in talk) {
+      final n = _normalizeLine(line);
+      if (n.isEmpty) continue;
+      if (n == qn) continue;                // keine Frage als Talk
+      if (mirrorSet.contains(n)) continue;  // nicht Spiegel wiederholen
+      if (seen.add(n)) out.add(line.trim());
+      if (out.length >= 2) break;           // max. 2 Talk-Lines
+    }
+    return out;
+  }
+
+  // ---------------- Mirror / Frage / Limits ----------------------------------
+  String _ensureMirrorSentences(String text) {
+    final normalized = text.replaceAll('\n', ' ').replaceAll(RegExp(r'\s+'), ' ').trim();
+    if (normalized.isEmpty) {
+      return 'Ich höre dich. Ich bleibe bei dir.';
+    }
+    final parts = _splitSentences(normalized);
+    if (parts.length == 1) {
+      parts.add('Ich lese das aufmerksam mit.');
+    }
+    final capped = parts.length <= 6 ? parts : parts.sublist(0, 6);
+    return capped.join(' ');
+  }
+
+  String _fallbackMirror(String userText) {
+    final s = userText.trim();
+    if (s.isEmpty) return 'Klingt, als würde dich das gerade beschäftigen. Ich bin hier.';
+    final short = s.replaceAll('\n', ' ').trim();
+    final clipped = short.length > 120 ? '${short.substring(0, 120)}…' : short;
+    return 'Ich höre: „$clipped“. Ich bleibe bei dir.';
+  }
+
+  String? _sanitizeQuestion(String? raw) {
+    if (raw == null) return null;
+    var txt = raw.trim();
+    if (txt.isEmpty) return null;
+
+    txt = txt.replaceAll(RegExp(r'\s+'), ' ').trim();
+
+    // Prefix-Schablonen (Neutralisierung)
+    txt = txt.replaceFirst(
+      RegExp(
+        "^\\s*(im blick auf|bezogen auf|in bezug auf|im fokus|zum thema|thema|aspekt)\\s*[:\\-–—]?\\s*(?:[\"\\'])?.+?(?:[\"\\'])?\\s*[:,\\-–—]?\\s*",
+        caseSensitive: false,
       ),
-      body: Stack(
-        children: [
-          // Sanfte animierte Zen-Landschaft im Hintergrund
-          Positioned.fill(
-            child: ZenBackground(),
-          ),
-          // Der Reflexionsbereich
-          Center(
-            child: SingleChildScrollView(
-              child: Container(
-                padding: const EdgeInsets.symmetric(vertical: 46, horizontal: 22),
-                constraints: const BoxConstraints(maxWidth: 420),
-                child: Column(
-                  mainAxisAlignment: MainAxisAlignment.center,
-                  children: [
-                    // 1. Zen-Impulse oben
-                    ZenQuoteBanner(),
-                    const SizedBox(height: 18),
-                    // 2. Reflektionsfeld (Sprich oder Tippe)
-                    _ReflectionInputField(
-                      controller: _controller,
-                      onSend: (text) async {
-                        setState(() {
-                          _reflectionText = text;
-                          _isProcessing = true;
-                          _aiResponse = null;
-                        });
-                        // Warte auf KI-Antwort (simulate or real API)
-                        final String response = await _getZenAIResponse(text);
-                        setState(() {
-                          _aiResponse = response;
-                          _isProcessing = false;
-                        });
-                        // Optionale Sound/Animation
-                      },
-                    ),
-                    const SizedBox(height: 22),
-                    // 3. KI-Antwort als Zen-Karte (Overlay)
-                    if (_isProcessing)
-                      ZenLoadingOverlay(text: "Der Zen-Meister denkt nach …"),
-                    if (_aiResponse != null && !_isProcessing)
-                      ZenResponseCard(text: _aiResponse!),
-                    const SizedBox(height: 20),
-                    // 4. MoodPicker nach Reflexion
-                    if (_aiResponse != null && !_isProcessing)
-                      ZenMoodPicker(
-                        onMoodSelected: (mood) {
-                          setState(() => _selectedMood = mood);
-                        },
+      '',
+    );
+
+    final lower = txt.toLowerCase();
+    final bool generic = <RegExp>[
+      RegExp(r'wie\s+fühlst\s+du\s+dich'),
+      RegExp(r'wie\s+fühlt\s+es\s+sich'),
+      RegExp(r'wie\s+geht\s+es\s+dir'),
+      RegExp(r'worum\s+geht\s+es\s+dir'),
+      RegExp("^\\s*was\\s+ist\\s+dir\\s+an\\s+[\"\\']?.+?[\"\\']?\\s+(?:gerade\\s+)?am\\s+wichtigsten\\??\\s*\$"),
+      RegExp("^\\s*was\\s+ist\\s+dir\\s+daran\\s+(?:gerade\\s+)?am\\s+wichtigsten\\??\\s*\$"),
+    ].any((p) => p.hasMatch(lower));
+    if (generic) return null;
+
+    // Nebensatz-Klammern am Ende fein säubern
+    txt = txt.replaceAll(
+      RegExp("\\s*[—–\\-,:;]\\s*wenn\\s+du\\s+an\\s+.+?\\s+denkst\\s*\$", caseSensitive: false),
+      '',
+    );
+
+    txt = _sanitizeDots(txt);
+    if (!txt.endsWith('?') && !txt.endsWith('…')) txt = '$txt?';
+    return txt.trim();
+  }
+
+  String _sanitizeDots(String s) {
+    var x = s.trim().replaceAll(RegExp(r'\s+'), ' ');
+    final sentences =
+        x.split(RegExp(r'(?<=[.!?])\s+')).where((t) => t.trim().isNotEmpty).toList();
+    final capped = sentences.take(2).join(' ');
+    final ell = capped
+        .replaceAll(RegExp(r'\.{3,}'), '…')
+        .replaceAll(RegExp(r'…{2,}'), '…');
+    final cleaned = ell
+        .replaceAllMapped(RegExp(r'\s+([?!.,;:])'), (m) => m.group(1)!)
+        .replaceAllMapped(RegExp(r'([?!.,;:])(?!\s|$)'), (m) => '${m.group(1)} ');
+    return cleaned.trim();
+  }
+
+  String _limitWords(String input, int maxWords) {
+    final words = input.trim().split(RegExp(r'\s+')).where((w) => w.isNotEmpty).toList();
+    if (words.length <= maxWords) return input.trim();
+    return '${words.take(maxWords).join(' ')}…';
+  }
+
+  // Neue empathische Fallback-Frage, ohne Zitat-Klammer
+  String _contextualFallbackQuestion(String userText, {required String hintFromMirror}) {
+    final t = (userText.isNotEmpty ? userText : hintFromMirror).toLowerCase();
+
+    final bool lowEnergy = RegExp(r'(erschöpft|überforder|müde|kraft\s*fehl|niedergeschlagen|nicht\s+so\s+toll)')
+        .hasMatch(t);
+    final bool anger = RegExp(r'(wut|ärger|sauer|genervt)').hasMatch(t);
+    final bool anxiety = RegExp(r'(angst|sorge|nervös|unsicher|panik)').hasMatch(t);
+    final bool positive = RegExp(r'(freu|stolz|dankbar|gut|leicht|hell)').hasMatch(t);
+
+    if (lowEnergy) return 'Magst du erzählen, was dich gerade am meisten bedrückt?';
+    if (anger) return 'Was genau daran hat dich am stärksten getroffen?';
+    if (anxiety) return 'Welche Sorge meldet sich im Moment am deutlichsten?';
+    if (positive) return 'Was daran tut dir gerade besonders gut?';
+    return 'Was ist dir daran im Moment am wichtigsten?';
+  }
+
+  String _makeUniqueQuestion(String q, ReflectionRound round, String userText, String mirror) {
+    final norm = normalizeForCompare(q);
+    final used = round.normalizedQuestions;
+    if (!used.contains(norm)) return q;
+
+    final alt = _contextualFallbackQuestion(userText, hintFromMirror: mirror);
+    final altNorm = normalizeForCompare(alt);
+    if (!used.contains(altNorm)) return alt;
+
+    final variants = <String>[
+      'Welcher kleine nächste Schritt fühlt sich stimmig an?',
+      'Was wäre ein hilfreicher erster Satz dazu?',
+      'Womit möchtest du kurz beginnen?',
+    ];
+    for (final v in variants) {
+      final vv = _sanitizeDots(_limitWords(v, 30));
+      if (!used.contains(normalizeForCompare(vv))) return vv;
+    }
+    return q;
+  }
+
+  static String normalizeForCompare(String s) {
+    final lower = s.toLowerCase();
+    return lower.replaceAll(RegExp("[^a-z0-9\\u00C0-\\u017F]+"), '');
+  }
+
+  bool _looksLikeSmallTalk(String text) {
+    final t = text.toLowerCase().trim();
+    final hello = RegExp(r'\b(hallo|hey|hi|na)\b').hasMatch(t);
+    final howAreYou =
+        RegExp(r"(wie\s+geht(?:'|’)?s\s+dir|wie\s+geht\s+es\s+dir|alles\s+gut)").hasMatch(t);
+    final pandaMention = RegExp(r'\bpanda\b').hasMatch(t);
+    return howAreYou || (pandaMention && hello);
+  }
+
+  // ---------------- Misc ------------------------------------------------------
+  String _makeId() {
+    final now = DateTime.now().millisecondsSinceEpoch;
+    final r = Random().nextInt(0xFFFF);
+    return 'j_${now}_$r';
+  }
+
+  void _scrollToBottom() {
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      if (!_listCtrl.hasClients) return;
+      _listCtrl.animateTo(
+        _listCtrl.position.maxScrollExtent,
+        duration: _animShort,
+        curve: Curves.easeOut,
+      );
+    });
+  }
+
+  void _toast(String msg) {
+    if (!mounted) return;
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Text(
+          msg,
+          style: Theme.of(context).textTheme.bodyMedium!.copyWith(color: Colors.white),
+        ),
+        backgroundColor: ZenColors.deepSage,
+        behavior: SnackBarBehavior.floating,
+        shape: const RoundedRectangleBorder(
+          borderRadius: BorderRadius.all(ZenRadii.m),
+        ),
+      ),
+    );
+  }
+
+  // ---------------- Build -----------------------------------------------------
+  String get _headerTitle => 'Ordne deine Gedanken';
+  String get _headerSubtitle => 'Ich bin hier.';
+
+  @override
+  Widget build(BuildContext context) {
+    final overlay = Theme.of(context).brightness == Brightness.dark
+        ? SystemUiOverlayStyle.light
+        : SystemUiOverlayStyle.dark;
+
+    final double w = MediaQuery.of(context).size.width;
+    final double bottomInset = MediaQuery.of(context).viewInsets.bottom;
+    final double cardMaxW = _cardMaxWidthFor(w);
+
+    final r = _current;
+
+    final bool lastCanContinue =
+        r != null && r.answered && !r.hasPendingQuestion && !loading;
+
+    return AnnotatedRegion<SystemUiOverlayStyle>(
+      value: overlay,
+      child: RawKeyboardListener(
+        focusNode: _pageFocus,
+        autofocus: true,
+        onKey: _handleKey,
+        child: Scaffold(
+          resizeToAvoidBottomInset: true,
+          extendBodyBehindAppBar: true,
+          backgroundColor: Colors.transparent,
+          appBar: const ZenAppBar(title: '', showBack: true),
+          body: Stack(
+            children: [
+              const Positioned.fill(
+                child: ZenBackdrop(
+                  asset: 'assets/flusspanda.png',
+                  alignment: Alignment.centerRight,
+                  glow: .38,
+                  vignette: .12,
+                  enableHaze: true,
+                  hazeStrength: .16,
+                  saturation: .94,
+                  wash: .08,
+                ),
+              ),
+              SafeArea(
+                child: Padding(
+                  padding: EdgeInsets.fromLTRB(12, 12, 12, 12 + (bottomInset > 0 ? 6 : 20)),
+                  child: Column(
+                    children: [
+                      PandaHeader(
+                        title: _headerTitle,
+                        caption: _headerSubtitle,
+                        pandaSize: w < 470 ? 88 : 112,
+                        strongTitleGreen: true,
                       ),
-                    const SizedBox(height: 18),
-                    // 5. Speichern-Button (nur wenn Mood gewählt)
-                    if (_selectedMood != null && _reflectionText != null)
-                      ElevatedButton.icon(
-                        icon: const Icon(Icons.check_circle),
-                        label: const Text("Reflexion speichern"),
-                        style: ElevatedButton.styleFrom(
-                          backgroundColor: theme.primaryColor,
-                          foregroundColor: Colors.white,
-                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(19)),
-                          elevation: 2,
-                          padding: const EdgeInsets.symmetric(horizontal: 28, vertical: 16),
+                      const SizedBox(height: 10),
+
+                      if (_rounds.isEmpty)
+                        Padding(
+                          padding: const EdgeInsets.only(bottom: 6),
+                          child: Center(
+                            child: ConstrainedBox(
+                              constraints: BoxConstraints(maxWidth: cardMaxW),
+                              child: const FractionallySizedBox(
+                                widthFactor: 1,
+                                child: _IntroCard(),
+                              ),
+                            ),
+                          ),
+                        ),
+
+                      Expanded(
+                        child: ListView.builder(
+                          controller: _listCtrl,
+                          padding: const EdgeInsets.only(bottom: 6),
+                          keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag,
+                          itemCount: _rounds.length,
+                          itemBuilder: (context, index) {
+                            final round = _rounds[index];
+                            final isLast = index == _rounds.length - 1;
+
+                            final canContinue = isLast ? lastCanContinue : false;
+                            // Save erst nach Mood
+                            final canSave = round.answered && round.hasMood;
+
+                            return KeyedSubtree(
+                              key: ValueKey(round.id),
+                              child: FadeTransition(
+                                opacity: _fadeSlideCtrl.drive(Tween(begin: 0.0, end: 1.0)),
+                                child: SlideTransition(
+                                  position: _fadeSlideCtrl.drive(
+                                    Tween(begin: const Offset(-0.03, 0), end: Offset.zero),
+                                  ),
+                                  child: _RoundBubble(
+                                    maxWidth: cardMaxW,
+                                    round: round,
+                                    onContinue: canContinue ? _continueWithinCurrent : null,
+                                    onSave: canSave ? () => _saveRound(round) : null,
+                                    onLater: round.answered ? () => _saveDraft(round) : null,
+                                    safetyText: round.steps.isNotEmpty && round.steps.last.risk
+                                        ? _emergencyHint(context)
+                                        : null,
+                                    onPickFollowup: (s) {
+                                      _controller.text = s;
+                                      _controller.selection = TextSelection.fromPosition(
+                                        TextPosition(offset: _controller.text.length),
+                                      );
+                                      FocusScope.of(context).requestFocus(_inputFocus);
+                                    },
+                                    onMoodSelected: (score, label) {
+                                      setState(() {
+                                        round.moodScore = score;
+                                        round.moodLabel = label;
+                                      });
+                                    },
+                                  ),
+                                ),
+                              ),
+                            );
+                          },
                         ),
-                        onPressed: () {
-                          final entry = ReflectionEntry(
-                            timestamp: DateTime.now(),
-                            text: _reflectionText!,
-                            aiResponse: _aiResponse!,
-                            mood: _selectedMood!,
-                          );
-                          widget.onEntryAdded?.call(entry);
-                          _controller.clear();
-                          setState(() {
-                            _aiResponse = null;
-                            _reflectionText = null;
-                            _selectedMood = null;
-                          });
-                          ZenToast.show(context, "Reflexion gespeichert.");
-                        },
                       ),
-                  ],
+
+                      const SizedBox(height: 8),
+
+                      Center(
+                        child: ConstrainedBox(
+                          constraints: BoxConstraints(maxWidth: cardMaxW),
+                          child: _InputBar(
+                            focusNode: _inputFocus,
+                            controller: _controller,
+                            hint: _inputHint(),
+                            onSend:  loading ? null : _send,
+                            onTalk:  loading ? null : _talkOnly,
+                            canSend: !loading,
+                            onMicTap: loading ? null : _toggleRecording,
+                            isRecording: _speech.isRecording,
+                            trailingHint: loading ? _loadingHint : null,
+                          ),
+                        ),
+                      ),
+
+                      if (loading)
+                        Padding(
+                          padding: EdgeInsets.only(top: bottomInset > 0 ? 6 : 10),
+                          child: const Center(child: CircularProgressIndicator()),
+                        ),
+
+                      SizedBox(height: bottomInset > 0 ? 6 : 12),
+                    ],
+                  ),
                 ),
               ),
-            ),
+            ],
           ),
-        ],
+        ),
       ),
     );
   }
 
-  /// Simuliert/holt eine KI-Gegenfrage (hier einfach statisch, API-Call möglich)
-  Future<String> _getZenAIResponse(String userInput) async {
-    // TODO: Hier kommt dein echter API-Call zu GPT oder Backend
-    await Future.delayed(const Duration(seconds: 2));
-    final zenPrompts = [
-      "Was fühlst du tief in deinem Inneren, wenn du daran denkst?",
-      "Was würde dir heute wirklich gut tun?",
-      "Welcher kleine Schritt ist jetzt möglich?",
-      "Was will dein Körper dir sagen?",
-      "Worauf bist du in diesem Moment stolz?",
-      "Was würdest du deinem besten Freund in dieser Situation raten?",
-    ];
-    return zenPrompts[userInput.length % zenPrompts.length];
+  String _inputHint() {
+    final r = _current;
+    if (r == null) return 'Worüber möchtest du heute sprechen?';
+    if (r.hasPendingQuestion) return 'Schreib deine Antwort …';
+    return 'Neue Reflexion beginnen — oder oben „Weiter reflektieren“.';
+  }
+
+  double _cardMaxWidthFor(double screenW) {
+    if (screenW < 380) return screenW - 24;
+    if (screenW < 480) return 420;
+    if (screenW < 720) return 520;
+    return 560;
+  }
+
+  String _emergencyHint(BuildContext context) {
+    final loc = Localizations.localeOf(context);
+    final cc = (loc.countryCode ?? '').toUpperCase();
+    if (cc == 'DE') {
+      return 'Es klingt herausfordernd. Wenn es sich überwältigend anfühlt, hol dir bitte Unterstützung vor Ort. '
+          'Deutschland: 112 (Notruf), 110 (Polizei), TelefonSeelsorge 0800 111 0 111 / 0800 111 0 222. Du bist nicht allein.';
+    } else if (cc == 'CH') {
+      return 'Es klingt herausfordernd. Wenn es sich überwältigend anfühlt, hol dir bitte Unterstützung vor Ort. '
+          'Schweiz: 112 (Notruf), 144 (Sanität), Dargebotene Hand 143. Du bist nicht allein.';
+    } else if (cc == 'AT') {
+      return 'Es klingt herausfordernd. Wenn es sich überwältigend anfühlt, hol dir bitte Unterstützung vor Ort. '
+          'Österreich: 112 (Notruf), 144 (Rettung), TelefonSeelsorge 142. Du bist nicht allein.';
+    }
+    return 'Es klingt herausfordernd. Wenn es sich überwältigend anfühlt, hol dir bitte Unterstützung vor Ort. '
+        'EU-Notruf 112 · USA/Kanada 911. Du bist nicht allein.';
   }
 }
 
-/// Eingabe-Feld für Reflexion (Sprich oder Tippe)
-class _ReflectionInputField extends StatelessWidget {
-  final TextEditingController controller;
-  final Function(String text) onSend;
+// ---------------- Intro Card -------------------------------------------------
+class _IntroCard extends StatelessWidget {
+  const _IntroCard();
 
-  const _ReflectionInputField({required this.controller, required this.onSend});
+  @override
+  Widget build(BuildContext context) {
+    return const ZenGlassCard(
+      padding: EdgeInsets.fromLTRB(16, 14, 16, 14),
+      topOpacity: .26,
+      bottomOpacity: .10,
+      borderOpacity: .18,
+      borderRadius: BorderRadius.all(ZenRadii.l),
+      child: Text(
+        'Hallo, ich bin ZenYourself – dein Panda. '
+        'Du kannst mir deine Gedanken schreiben oder flüstern. '
+        'Ich helfe dir, deine Gedanken zu ordnen und dich selbst besser zu verstehen.\n\n'
+        'Kleiner Tipp: Deine Reflexionen kannst du ins Gedankenbuch eintragen. '
+        'Falls du eine Psychologin oder einen Psychologen hast, kannst du sie oder ihn später darauf aufmerksam machen und Einträge teilen.',
+        textAlign: TextAlign.center,
+        style: TextStyle(fontSize: 16, height: 1.45, color: ZenColors.ink),
+      ),
+    );
+  }
+}
+
+// ---------------- Round Bubble ------------------------------------------------
+class _RoundBubble extends StatelessWidget {
+  final ReflectionRound round;
+  final double maxWidth;
+
+  final VoidCallback? onContinue;
+  final VoidCallback? onSave;
+  final VoidCallback? onLater;
+  final String? safetyText;
+  final ValueChanged<String>? onPickFollowup;
+  final void Function(int score, String label)? onMoodSelected;
+
+  const _RoundBubble({
+    required this.round,
+    required this.maxWidth,
+    this.onContinue,
+    this.onSave,
+    this.onLater,
+    this.safetyText,
+    this.onPickFollowup,
+    this.onMoodSelected,
+  });
 
   @override
   Widget build(BuildContext context) {
-    return Card(
-      color: Colors.white.withOpacity(0.97),
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(23)),
-      elevation: 4,
-      child: Padding(
-        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 18),
-        child: Column(
-          children: [
-            ZenInputHint(),
-            const SizedBox(height: 8),
-            Row(
-              crossAxisAlignment: CrossAxisAlignment.end,
+    final tt = Theme.of(context).textTheme;
+    final base = tt.bodyMedium!;
+    final timeStyle = base.copyWith(color: Colors.black.withOpacity(.55), fontSize: 12);
+
+    // Label neutral & klein, nicht fett
+    final labelStyle = base.copyWith(
+      fontSize: 12,
+      fontWeight: FontWeight.w400,
+      color: Colors.black.withOpacity(.55),
+      letterSpacing: .3,
+    );
+
+    final userText = base.copyWith(
+      color: ZenColors.jade,
+      fontWeight: FontWeight.w600,
+      height: 1.35,
+    );
+
+    final pandaMirror = base.copyWith(color: ZenColors.ink, height: 1.32);
+
+    // Frage NICHT kursiv
+    final pandaQuestion = base.copyWith(
+      color: ZenColors.inkStrong,
+      height: 1.32,
+    );
+
+    final bool lastRisk = round.steps.isNotEmpty ? round.steps.last.risk : false;
+    final bool awaitingAnswer = round.steps.isNotEmpty
+        ? round.steps.last.expectsAnswer && !round.steps.last.hasAnswer
+        : false;
+
+    final lastFollowups =
+        round.steps.isNotEmpty ? round.steps.last.followups : const <String>[];
+
+    return Padding(
+  padding: const EdgeInsets.symmetric(vertical: 6),
+  child: Center( // <-- mittig
+    child: ConstrainedBox(
+      constraints: BoxConstraints(maxWidth: maxWidth),
+      child: ZenGlassCard(
+            padding: const EdgeInsets.fromLTRB(14, 12, 14, 12),
+            topOpacity: .30,
+            bottomOpacity: .12,
+            borderOpacity: .18,
+            borderRadius: const BorderRadius.all(ZenRadii.l),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
               children: [
-                Expanded(
-                  child: TextField(
-                    controller: controller,
-                    minLines: 1,
-                    maxLines: 4,
-                    style: const TextStyle(fontSize: 17),
-                    decoration: const InputDecoration(
-                      border: InputBorder.none,
-                      hintText: "Sprich oder tippe deine Erkenntnis …",
-                    ),
-                    onSubmitted: (val) {
-                      if (val.trim().isNotEmpty) onSend(val.trim());
-                    },
+                Row(children: [Expanded(child: Text(_fmtDayTime(round.ts), style: timeStyle))]),
+                const SizedBox(height: 8),
+
+                if (round.userInput.trim().isNotEmpty) ...[
+                  Text('Gedanke', style: labelStyle),
+                  const SizedBox(height: 6),
+                  Text('„${round.userInput.trim()}“', style: userText),
+                  const SizedBox(height: 12),
+                ],
+
+                for (int i = 0; i < round.steps.length; i++) ...[
+                  if (round.steps[i].mirror.trim().isNotEmpty) ...[
+                    Text(round.steps[i].mirror.trim(), style: pandaMirror),
+                    const SizedBox(height: 8),
+                  ],
+                  for (final line in round.steps[i].talkLines) ...[
+                    Text(line.trim(), style: pandaMirror),
+                    const SizedBox(height: 6),
+                  ],
+                  if (round.steps[i].question.trim().isNotEmpty) ...[
+                    Text(round.steps[i].question, style: pandaQuestion),
+                    const SizedBox(height: 6),
+                  ],
+                  if (awaitingAnswer && i == round.steps.length - 1) ...[
+                    const _ReflectionHint(),
+                    if (lastFollowups.isNotEmpty) ...[
+                      const SizedBox(height: 8),
+                      _FollowupChips(suggestions: lastFollowups, onPick: onPickFollowup),
+                    ],
+                  ],
+                  if (round.steps[i].hasAnswer) ...[
+                    const SizedBox(height: 10),
+                    Text('Antwort', style: labelStyle),
+                    const SizedBox(height: 6),
+                    Text(round.steps[i].answer!.trim(), style: userText),
+                    const SizedBox(height: 8),
+                  ],
+                ],
+
+                // Mood-Phase nach Antwort (vor Save)
+                if (round.answered && !round.hasMood) ...[
+                  const SizedBox(height: 6),
+                  MoodPrompt(
+                    onSelected: onMoodSelected,
                   ),
-                ),
-                const SizedBox(width: 8),
-                ZenVoiceButton(
-                  onResult: (voiceText) {
-                    controller.text = voiceText;
-                    if (voiceText.trim().isNotEmpty) onSend(voiceText.trim());
-                  },
-                ),
-                const SizedBox(width: 5),
-                Material(
-                  color: Colors.transparent,
-                  child: IconButton(
-                    icon: const Icon(Icons.arrow_forward_ios_rounded, color: Color(0xFF365486), size: 28),
-                    tooltip: "Antwort erhalten",
-                    onPressed: () {
-                      if (controller.text.trim().isNotEmpty) onSend(controller.text.trim());
-                    },
+                ] else if (round.hasMood) ...[
+                  const SizedBox(height: 6),
+                  Row(
+                    children: [
+                      const Icon(Icons.insights_rounded, size: 16, color: Colors.black54),
+                      const SizedBox(width: 6),
+                      Text(
+                        'Stimmung: ${round.moodLabel} (${round.moodScore}/4)',
+                        style: tt.bodySmall?.copyWith(color: ZenColors.ink),
+                      ),
+                    ],
                   ),
-                ),
+                ],
+
+                if (lastRisk && (safetyText ?? '').isNotEmpty) ...[
+                  const SizedBox(height: 10),
+                  _SafetyNote(text: safetyText!),
+                ],
+
+                if (round.answered) ...[
+                  const SizedBox(height: 10),
+                  Wrap(
+                    spacing: 8,
+                    runSpacing: 8,
+                    children: [
+                      if (onContinue != null)
+                        OutlinedButton.icon(
+                          icon: const Icon(Icons.forward_rounded),
+                          label: const Text('Weiter reflektieren'),
+                          onPressed: onContinue!,
+                        ),
+                      if (onSave != null)
+                        ElevatedButton.icon(
+                          icon: const Icon(Icons.bookmark_added_rounded),
+                          label: const Text('Ins Gedankenbuch speichern'),
+                          onPressed: onSave!,
+                        ),
+                      if (onLater != null)
+                        OutlinedButton.icon(
+                          icon: const Icon(Icons.schedule_rounded),
+                          label: const Text('Später weiterführen'),
+                          onPressed: onLater!,
+                        ),
+                    ],
+                  ),
+                ],
               ],
             ),
-          ],
+          ),
         ),
       ),
     );
   }
+
+  String _fmtDayTime(DateTime ts) {
+    final l = ts.toLocal();
+    final dd = l.day.toString().padLeft(2, '0');
+    final mm = l.month.toString().padLeft(2, '0');
+    final hh = l.hour.toString().padLeft(2, '0');
+    final mi = l.minute.toString().padLeft(2, '0');
+    return '$dd.$mm.${l.year}, $hh:$mi';
+  }
+}
+
+class _ReflectionHint extends StatelessWidget {
+  const _ReflectionHint();
+
+  @override
+  Widget build(BuildContext context) {
+    final style = Theme.of(context).textTheme.bodySmall?.copyWith(
+          color: Colors.black54,
+          height: 1.2,
+        );
+    return Row(
+      crossAxisAlignment: CrossAxisAlignment.center,
+      children: [
+        const Icon(Icons.self_improvement, size: 16, color: Colors.black54),
+        const SizedBox(width: 6),
+        Expanded(
+          child: Text(
+            'Lies die Frage kurz. Antworte in 1–2 Sätzen.',
+            style: style,
+          ),
+        ),
+      ],
+    );
+  }
+}
+
+class _FollowupChips extends StatelessWidget {
+  final List<String> suggestions;
+  final ValueChanged<String>? onPick;
+  const _FollowupChips({required this.suggestions, this.onPick});
+
+  @override
+  Widget build(BuildContext context) {
+    if (suggestions.isEmpty) return const SizedBox.shrink();
+    return Wrap(
+      spacing: 6,
+      runSpacing: 6,
+      children: suggestions
+          .map(
+            (s) => ActionChip(
+              label: Text(s, style: const TextStyle(fontSize: 12)),
+              onPressed: onPick == null ? null : () => onPick!(s),
+              shape: const StadiumBorder(side: BorderSide(color: ZenColors.sage, width: .6)),
+              backgroundColor: Colors.white,
+              materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
+              padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
+            ),
+          )
+          .toList(),
+    );
+  }
+}
+
+class _SafetyNote extends StatelessWidget {
+  final String text;
+  const _SafetyNote({required this.text});
+
+  @override
+  Widget build(BuildContext context) {
+    final tt = Theme.of(context).textTheme;
+    return ZenGlassCard(
+      padding: const EdgeInsets.fromLTRB(12, 10, 12, 10),
+      topOpacity: .20,
+      bottomOpacity: .08,
+      borderOpacity: .22,
+      borderRadius: const BorderRadius.all(ZenRadii.m),
+      child: Row(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          const Icon(Icons.health_and_safety_rounded, color: Colors.orange, size: 18),
+          const SizedBox(width: 8),
+          Expanded(
+            child: Text(
+              text,
+              style: tt.bodySmall?.copyWith(color: ZenColors.ink),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+// ---------------- Input ------------------------------------------------------
+class _InputBar extends StatelessWidget {
+  final TextEditingController controller;
+  final FocusNode? focusNode;
+  final String hint;
+  final VoidCallback? onSend;
+  final VoidCallback? onTalk; // Talk-Push
+  final bool canSend;
+  final VoidCallback? onMicTap;
+  final bool isRecording;
+  final String? trailingHint;
+
+  const _InputBar({
+    required this.controller,
+    this.focusNode,
+    required this.hint,
+    this.onSend,
+    this.onTalk,
+    this.canSend = true,
+    this.onMicTap,
+    this.isRecording = false,
+    this.trailingHint,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    const jade = ZenColors.jade;
+    final baseText = Theme.of(context).textTheme.bodyMedium!;
+    final hintStyle = baseText.copyWith(color: jade.withOpacity(0.55));
+
+    final List<BoxShadow> pulse = isRecording
+        ? [
+            BoxShadow(color: Colors.black.withOpacity(0.10), blurRadius: 14, offset: const Offset(0, 4)),
+            BoxShadow(color: jade.withOpacity(0.30), blurRadius: 22, spreadRadius: 1.2),
+          ]
+        : [
+            const BoxShadow(color: Color(0x14000000), blurRadius: 18, offset: Offset(0, 6)),
+          ];
+
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.stretch,
+      children: [
+        if (trailingHint != null) ...[
+          Padding(
+            padding: const EdgeInsets.only(bottom: 6),
+            child: Text(trailingHint!, textAlign: TextAlign.center, style: baseText.copyWith(color: ZenColors.ink)),
+          ),
+        ],
+        Container(
+          decoration: BoxDecoration(
+            color: Colors.white,
+            borderRadius: const BorderRadius.all(ZenRadii.l),
+            border: Border.all(color: jade.withOpacity(0.75), width: 2),
+            boxShadow: pulse,
+          ),
+          padding: const EdgeInsets.fromLTRB(12, 8, 8, 8),
+          child: ValueListenableBuilder<TextEditingValue>(
+            valueListenable: controller,
+            builder: (context, value, _) {
+              final hasText = value.text.trim().isNotEmpty;
+
+              return TextField(
+                focusNode: focusNode,
+                controller: controller,
+                maxLines: null,
+                textInputAction: TextInputAction.newline,
+                keyboardType: TextInputType.multiline,
+                autocorrect: false,
+                enableSuggestions: true,
+                spellCheckConfiguration: const SpellCheckConfiguration.disabled(),
+                style: baseText.copyWith(color: jade, fontWeight: FontWeight.w600),
+                cursorColor: jade,
+                decoration: InputDecoration(
+                  hintText: hint,
+                  hintStyle: hintStyle,
+                  border: InputBorder.none,
+                  isCollapsed: true,
+                  suffixIconConstraints: const BoxConstraints.tightFor(width: 144, height: 40),
+                  suffixIcon: Row(
+                    mainAxisSize: MainAxisSize.min,
+                    children: [
+                      IconButton(
+                        tooltip: 'Panda weiterreden',
+                        onPressed: onTalk,
+                        icon: Icon(Icons.chat_bubble_outline_rounded, color: jade),
+                      ),
+                      IconButton(
+                        tooltip: isRecording ? 'Aufnahme stoppen' : 'Sprechen',
+                        onPressed: onMicTap,
+                        icon: Icon(isRecording ? Icons.stop_circle_rounded : Icons.mic_rounded, color: jade),
+                      ),
+                      IconButton(
+                        tooltip: 'Senden',
+                        onPressed: (hasText && canSend && onSend != null) ? onSend : null,
+                        icon: Icon(
+                          Icons.send_rounded,
+                          color: (hasText && canSend && onSend != null) ? jade : jade.withOpacity(0.45),
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              );
+            },
+          ),
+        ),
+      ],
+    );
+  }
 }
diff --git a/zen_project1337/lib/features/therapist/anon_export.dart b/zen_project1337/lib/features/therapist/anon_export.dart
index 833abc6..41b2fe4 100644
--- a/zen_project1337/lib/features/therapist/anon_export.dart
+++ b/zen_project1337/lib/features/therapist/anon_export.dart
@@ -1,156 +1,379 @@
 // lib/features/therapist/anon_export.dart
+//
+// AnonExportWidget — Oxford Calm & Privacy Edition
+// ------------------------------------------------
+// • Lokaler, anonymer Export (CSV / JSON, optional redacted)
+// • Robuste CSV-Escapes, Zeitstempel-Dateinamen, klares Status-Feedback
+// • Keine zusätzlichen Dependencies (Share/Open sind bewusst optional)
+// • UI im ZenYourself-Stil (ruhig, barrierearm)
 
 import 'dart:convert';
+import 'dart:io';
+import 'package:flutter/foundation.dart' show kIsWeb;
 import 'package:flutter/material.dart';
 import 'package:path_provider/path_provider.dart';
-import 'dart:io';
-import 'package:zenyourself/data/mood_entry.dart';
-import 'package:zenyourself/data/reflection_entry.dart';
 
-/// Widget für anonymen Export (CSV, JSON) der Nutzerdaten.
-/// Für Therapeuten, Wissenschaft, Self-Tracking.
-/// Zeigt Download-Fortschritt, gibt klare UX-Feedbacks.
+import '../../shared/zen_style.dart';
+import '../../data/mood_entry.dart';
+import '../../data/reflection_entry.dart';
 
 class AnonExportWidget extends StatefulWidget {
-  final List<MoodEntry> entries;
-  final List<ReflectionEntry>? reflections;
+  final List<MoodEntry> moodEntries;
+  final List<ReflectionEntry>? reflectionEntries;
 
   const AnonExportWidget({
     super.key,
-    required this.entries,
-    this.reflections,
+    required this.moodEntries,
+    this.reflectionEntries,
   });
 
+  /// Convenience: CSV-Export als modales Dialogchen öffnen
+  static Future<void> exportAsCSV(
+    BuildContext context,
+    List<MoodEntry> moods,
+  ) async {
+    final widget = AnonExportWidget(moodEntries: moods);
+    // ignore: use_build_context_synchronously
+    showDialog(
+      context: context,
+      builder: (ctx) => Dialog(
+        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
+        child: widget,
+      ),
+    );
+  }
+
+  /// Platzhalter: Später PDF-Export via `pdf`-Package
+  static Future<void> exportAsPDF(
+    BuildContext context,
+    List<MoodEntry> moods,
+    List<ReflectionEntry> reflections,
+  ) async {
+    ScaffoldMessenger.of(context).showSnackBar(
+      const SnackBar(content: Text('PDF-Export ist in Entwicklung.')),
+    );
+  }
+
   @override
   State<AnonExportWidget> createState() => _AnonExportWidgetState();
 }
 
+enum _ExportKind { csvMood, jsonFull, jsonRedacted }
+
 class _AnonExportWidgetState extends State<AnonExportWidget> {
   bool _exporting = false;
   String? _exportMsg;
+  _ExportKind _kind = _ExportKind.csvMood;
+  bool _includeReflections = true; // nur relevant für JSON
+  String? _lastPath;
 
-  Future<void> _exportAsCSV() async {
-    setState(() {
-      _exporting = true;
-      _exportMsg = null;
-    });
+  @override
+  Widget build(BuildContext context) {
+    final hasReflections = (widget.reflectionEntries?.isNotEmpty ?? false);
 
-    try {
-      final csv = _moodEntriesToCSV(widget.entries);
-      final file = await _saveFile(csv, "zenyourself_export.csv");
-      setState(() {
-        _exportMsg = "CSV exportiert: ${file.path}";
-      });
-    } catch (e) {
+    return Card(
+      elevation: 3,
+      margin: EdgeInsets.zero,
+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
+      color: ZenColors.surface,
+      child: Padding(
+        padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 18),
+        child: ConstrainedBox(
+          constraints: const BoxConstraints(maxWidth: 520),
+          child: Column(
+            mainAxisSize: MainAxisSize.min,
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Text('Exportiere deine Daten', style: ZenTextStyles.title),
+              const SizedBox(height: 10),
+
+              // Auswahl Exportart
+              _ExportSelector(
+                kind: _kind,
+                onChanged: (k) => setState(() => _kind = k),
+                hasReflections: hasReflections,
+              ),
+
+              // Option: Reflexionen einbeziehen (nur JSON)
+              if (_kind != _ExportKind.csvMood && hasReflections) ...[
+                const SizedBox(height: 6),
+                Row(
+                  children: [
+                    Switch(
+                      value: _includeReflections,
+                      activeColor: ZenColors.jade,
+                      onChanged: (v) => setState(() => _includeReflections = v),
+                    ),
+                    const SizedBox(width: 6),
+                    Expanded(
+                      child: Text(
+                        'Reflexionen einbeziehen',
+                        style: ZenTextStyles.body,
+                      ),
+                    ),
+                  ],
+                ),
+              ],
+
+              const SizedBox(height: 12),
+
+              // Buttons
+              Row(
+                children: [
+                  ElevatedButton.icon(
+                    icon: const Icon(Icons.download_rounded),
+                    label: Text(_primaryLabel),
+                    onPressed: _exporting ? null : _handleExport,
+                  ),
+                  const SizedBox(width: 10),
+                  OutlinedButton.icon(
+                    icon: const Icon(Icons.close_rounded),
+                    label: const Text('Schließen'),
+                    onPressed: _exporting ? null : () => Navigator.of(context).maybePop(),
+                  ),
+                ],
+              ),
+
+              const SizedBox(height: 12),
+              if (_exporting) const LinearProgressIndicator(),
+
+              if (_exportMsg != null) ...[
+                const SizedBox(height: 8),
+                Container(
+                  padding: const EdgeInsets.all(10),
+                  decoration: BoxDecoration(
+                    color: _exportMsg!.startsWith('Fehler')
+                        ? Colors.red.withOpacity(0.08)
+                        : ZenColors.bamboo.withOpacity(0.08),
+                    borderRadius: BorderRadius.circular(12),
+                    border: Border.all(
+                      color: _exportMsg!.startsWith('Fehler')
+                          ? Colors.red.withOpacity(0.32)
+                          : ZenColors.bamboo.withOpacity(0.25),
+                    ),
+                  ),
+                  child: Text(
+                    _exportMsg!,
+                    style: ZenTextStyles.body.copyWith(
+                      color: _exportMsg!.startsWith('Fehler')
+                          ? Colors.red[800]
+                          : ZenColors.inkStrong,
+                    ),
+                  ),
+                ),
+              ],
+
+              if (_lastPath != null) ...[
+                const SizedBox(height: 8),
+                Text(
+                  'Gespeichert unter:',
+                  style: ZenTextStyles.caption.copyWith(color: ZenColors.inkSubtle),
+                ),
+                const SizedBox(height: 4),
+                SelectableText(
+                  _lastPath!,
+                  style: ZenTextStyles.caption,
+                ),
+              ],
+
+              const SizedBox(height: 8),
+              Text(
+                'Exportierte Dateien werden anonym und offline auf deinem Gerät gespeichert. '
+                'Teilen ist optional — deine Privatsphäre bleibt geschützt.',
+                style: ZenTextStyles.caption.copyWith(color: ZenColors.inkSubtle),
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  String get _primaryLabel {
+    switch (_kind) {
+      case _ExportKind.csvMood:
+        return 'CSV (Stimmungen) exportieren';
+      case _ExportKind.jsonFull:
+        return 'JSON (vollständig) exportieren';
+      case _ExportKind.jsonRedacted:
+        return 'JSON (redacted) exportieren';
+    }
+  }
+
+  Future<void> _handleExport() async {
+    if (kIsWeb) {
+      // Im Web exportieren wir hier bewusst nicht (kein Filesystem über path_provider).
       setState(() {
-        _exportMsg = "Fehler beim Export: $e";
+        _exportMsg = 'Fehler: Export im Web nicht verfügbar.';
+        _lastPath = null;
       });
-    } finally {
-      setState(() => _exporting = false);
+      return;
     }
-  }
 
-  Future<void> _exportAsJSON() async {
     setState(() {
       _exporting = true;
       _exportMsg = null;
+      _lastPath = null;
     });
 
     try {
-      final jsonData = {
-        'moodEntries': widget.entries.map((e) => e.toJson()).toList(),
-        if (widget.reflections != null)
-          'reflections': widget.reflections!.map((r) => r.toJson()).toList(),
-      };
-      final jsonStr = const JsonEncoder.withIndent('  ').convert(jsonData);
-      final file = await _saveFile(jsonStr, "zenyourself_export.json");
+      late final File file;
+
+      if (_kind == _ExportKind.csvMood) {
+        final csv = _moodEntriesToCSV(widget.moodEntries);
+        file = await _saveFile(csv, _timestamped('zenyourself_mood', 'csv'));
+      } else {
+        final Map<String, dynamic> jsonData = {
+          'moodEntries': widget.moodEntries.map((e) => e.toJson()).toList(),
+        };
+
+        if (_includeReflections && (widget.reflectionEntries?.isNotEmpty ?? false)) {
+          final refl = widget.reflectionEntries!;
+          if (_kind == _ExportKind.jsonRedacted) {
+            jsonData['reflections'] = refl.map(_redactReflection).toList();
+          } else {
+            jsonData['reflections'] = refl.map((r) => r.toJson()).toList();
+          }
+        }
+
+        final jsonStr = const JsonEncoder.withIndent('  ').convert(jsonData);
+        file = await _saveFile(jsonStr, _timestamped('zenyourself_export', 'json'));
+      }
+
+      if (!mounted) return;
       setState(() {
-        _exportMsg = "JSON exportiert: ${file.path}";
+        _exportMsg = 'Export erfolgreich.';
+        _lastPath = file.path;
       });
     } catch (e) {
-      setState(() {
-        _exportMsg = "Fehler beim Export: $e";
-      });
+      if (!mounted) return;
+      setState(() => _exportMsg = 'Fehler beim Export: $e');
     } finally {
+      if (!mounted) return;
       setState(() => _exporting = false);
     }
   }
 
-  // Hilfsfunktion: Stimmungsdaten als CSV (für Excel/Analysen)
+  // ---------- Helpers ----------
+
+  /// Zeitstempel-Dateiname, z. B. zenyourself_mood_2025{mm}{dd}_hhmmss.csv
+  String _timestamped(String base, String ext) {
+    final now = DateTime.now();
+    final y = now.year.toString().padLeft(4, '0');
+    final m = now.month.toString().padLeft(2, '0');
+    final d = now.day.toString().padLeft(2, '0');
+    final hh = now.hour.toString().padLeft(2, '0');
+    final mm = now.minute.toString().padLeft(2, '0');
+    final ss = now.second.toString().padLeft(2, '0');
+    return '${base}_${y}${m}${d}_$hh$mm$ss.$ext';
+  }
+
+  /// CSV robust quoten (RFC4180-ish): " -> "", Feld in Anführungszeichen.
+  String _csvField(String v) {
+    final s = v.replaceAll('"', '""');
+    return '"$s"';
+  }
+
   String _moodEntriesToCSV(List<MoodEntry> entries) {
     final buffer = StringBuffer();
-    buffer.writeln("Timestamp,Mood,Label,Note,Extra");
+    buffer.writeln('Timestamp,DayTag,MoodScore,MoodLabel,Note,Extra');
     for (final e in entries) {
-      buffer.writeln(
-        '"${e.timestamp.toIso8601String()}",'
-        '${e.moodScore},'
-        '"${e.moodLabel}",'
-        '"${(e.note ?? '').replaceAll('"', "'")}",'
-        '"${(e.extra ?? '').replaceAll('"', "'")}"',
-      );
+      buffer
+        ..write(_csvField(e.timestamp.toIso8601String()))
+        ..write(',')
+        ..write(_csvField(e.dayTag))
+        ..write(',')
+        ..write(e.moodScore.toString())
+        ..write(',')
+        ..write(_csvField(e.moodLabel))
+        ..write(',')
+        ..write(_csvField(e.note ?? ''))
+        ..write(',')
+        ..writeln(_csvField(e.extra ?? ''));
     }
     return buffer.toString();
   }
 
-  // Speichert Datei im Geräte-Download-Ordner (plattformübergreifend)
+  /// Reduziert ReflectionEntry auf PII-arme Metriken (keine Freitexte/Audio).
+  Map<String, dynamic> _redactReflection(ReflectionEntry r) {
+    final map = r.toJson();
+
+    // Entferne potenziell sensible Inhalte:
+    map.remove('content');     // gesamter Freitext/Q&A
+    map.remove('aiSummary');   // KI-Zusammenfassung könnte PII enthalten
+    map.remove('audioPath');   // Verweis auf lokale Datei
+    // (Optional, falls alternative Keys existieren)
+    map.remove('userInput');
+    map.remove('userResponse');
+    map.remove('voiceFile');
+
+    // Belassen: timestamp, moodScore, moodDayTag, tags, category, source …
+    return map;
+  }
+
   Future<File> _saveFile(String content, String filename) async {
-    final dir = await getApplicationDocumentsDirectory();
+    // Primär: App-Dokumentenordner (benutzerfreundlich)
+    Directory? dir;
+    try {
+      dir = await getApplicationDocumentsDirectory();
+    } catch (_) {
+      // Desktop: ggf. Downloads (kann null sein)
+      try {
+        // ignore: deprecated_member_use
+        dir = await getDownloadsDirectory();
+      } catch (_) {}
+    }
+    dir ??= await getTemporaryDirectory();
+
     final file = File('${dir.path}/$filename');
+    await file.create(recursive: true);
     await file.writeAsString(content);
     return file;
   }
+}
+
+// -------------------------------- UI-Subwidget: Export-Auswahl --------------------------------
+
+class _ExportSelector extends StatelessWidget {
+  final _ExportKind kind;
+  final ValueChanged<_ExportKind> onChanged;
+  final bool hasReflections;
+
+  const _ExportSelector({
+    required this.kind,
+    required this.onChanged,
+    required this.hasReflections,
+  });
 
   @override
   Widget build(BuildContext context) {
-    return Card(
-      elevation: 2,
-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
-      color: Colors.white,
-      child: Padding(
-        padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 18),
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: [
-            const Text(
-              "Exportiere deine Daten",
-              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 17, color: Color(0xFF002147)),
-            ),
-            const SizedBox(height: 8),
-            Row(
-              children: [
-                ElevatedButton.icon(
-                  icon: const Icon(Icons.table_chart),
-                  label: const Text("CSV"),
-                  onPressed: _exporting ? null : _exportAsCSV,
-                ),
-                const SizedBox(width: 14),
-                ElevatedButton.icon(
-                  icon: const Icon(Icons.code),
-                  label: const Text("JSON"),
-                  onPressed: _exporting ? null : _exportAsJSON,
-                ),
-              ],
-            ),
-            const SizedBox(height: 8),
-            if (_exporting)
-              const LinearProgressIndicator(),
-            if (_exportMsg != null)
-              Padding(
-                padding: const EdgeInsets.only(top: 8),
-                child: Text(
-                  _exportMsg!,
-                  style: TextStyle(
-                    color: _exportMsg!.startsWith("Fehler") ? Colors.red : Colors.green[800],
-                  ),
-                ),
-              ),
-            const SizedBox(height: 2),
-            const Text(
-              "Exportierte Daten werden anonym und offline auf deinem Gerät gespeichert. Du kannst sie teilen oder selbst auswerten – Privatsphäre bleibt geschützt!",
-              style: TextStyle(fontSize: 12, color: Colors.grey),
-            ),
-          ],
+    return SegmentedButton<_ExportKind>(
+      segments: const [
+        ButtonSegment(
+          value: _ExportKind.csvMood,
+          icon: Icon(Icons.table_chart_outlined),
+          label: Text('CSV (Mood)'),
+        ),
+        ButtonSegment(
+          value: _ExportKind.jsonFull,
+          icon: Icon(Icons.code_rounded),
+          label: Text('JSON'),
+        ),
+        ButtonSegment(
+          value: _ExportKind.jsonRedacted,
+          icon: Icon(Icons.privacy_tip_outlined),
+          label: Text('JSON (red.)'),
+        ),
+      ],
+      selected: {kind},
+      onSelectionChanged: (s) {
+        if (s.isNotEmpty) onChanged(s.first);
+      },
+      style: ButtonStyle(
+        backgroundColor: MaterialStateProperty.resolveWith(
+          (states) => ZenColors.surface, // kein surfaceAlt → build-safe
         ),
+        foregroundColor: MaterialStateProperty.all(ZenColors.inkStrong),
       ),
     );
   }
diff --git a/zen_project1337/lib/features/therapist/dashboard.dart b/zen_project1337/lib/features/therapist/dashboard.dart
index bc1ca66..1b3ad13 100644
--- a/zen_project1337/lib/features/therapist/dashboard.dart
+++ b/zen_project1337/lib/features/therapist/dashboard.dart
@@ -1,5 +1,15 @@
-// lib/features/therapist/dashboard.dart
+// lib/features/therapist/therapist_dashboard.dart
+//
+// TherapistDashboard — Oxford Calm Edition (v2)
+// ---------------------------------------------
+// • Responsives, barrierearmes Layout (Semantics, große Ziele)
+// • Klinisch-clean: keine Freitexte/PII im Verlauf
+// • Zeitfenster: 7-Tage-Betrachtung inkl. HEUTE
+// • Konsistente ZenYourself-Farben & Typo
+// • Heatmap-Legende auf Zen-Palette abgestimmt
+
 import 'package:flutter/material.dart';
+import '../../shared/zen_style.dart';
 import '../../data/mood_entry.dart';
 import 'anon_export.dart';
 import '../calendar/mood_heatmap.dart';
@@ -11,114 +21,252 @@ class TherapistDashboard extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    // Filtere die letzten 7 Tage für die Heatmap
+    // 7-Tage-Fenster inkl. heute (Start = heute 00:00 - 6 Tage)
+    final now = DateTime.now();
+    final start = DateTime(now.year, now.month, now.day).subtract(const Duration(days: 6));
     final last7Days = allEntries
-        .where((e) => e.timestamp.isAfter(DateTime.now().subtract(const Duration(days: 7))))
-        .toList();
-
-    final avgMood = allEntries.isNotEmpty
-        ? (allEntries.map((e) => e.moodScore).reduce((a, b) => a + b) / allEntries.length)
-        : 0.0;
-
-    final lastEntry = allEntries.isNotEmpty ? allEntries.last : null;
-
-    return SingleChildScrollView(
-      padding: const EdgeInsets.all(22),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          const Text(
-            "Reflexions-Dashboard",
-            style: TextStyle(
-              fontSize: 25,
-              fontWeight: FontWeight.bold,
-              color: Color(0xFF002147),
-              letterSpacing: 0.3,
+        .where((e) => !e.timestamp.isBefore(start))
+        .toList(growable: false);
+
+    // Ø-Stimmung & letzte Stimmung (chronologisch)
+    final avgMood = allEntries.isEmpty
+        ? 0.0
+        : allEntries.fold<int>(0, (a, e) => a + e.moodScore) / allEntries.length;
+
+    final MoodEntry? latest = allEntries.isEmpty
+        ? null
+        : allEntries.reduce((a, b) => a.timestamp.isAfter(b.timestamp) ? a : b);
+
+    // Letzte 5 (DESC)
+    final lastFive = [...allEntries]..sort((a, b) => b.timestamp.compareTo(a.timestamp));
+    final recentFive = lastFive.take(5).toList(growable: false);
+
+    return Semantics(
+      label: 'Therapeutisches Reflexions-Dashboard',
+      child: SingleChildScrollView(
+        padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 28),
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            _TherapistHeadline('Reflexions-Dashboard'),
+            const SizedBox(height: 20),
+
+            // --- Stat-Kacheln (responsiv per Wrap) ---
+            _StatsGrid(
+              items: [
+                _StatItem(
+                  label: 'Einträge gesamt',
+                  value: allEntries.length.toString(),
+                  icon: Icons.library_books_rounded,
+                  color: ZenColors.jade,
+                ),
+                _StatItem(
+                  label: 'Ø Stimmung',
+                  value: allEntries.isEmpty ? '—' : avgMood.toStringAsFixed(2),
+                  icon: Icons.emoji_emotions_outlined,
+                  color: ZenColors.bamboo,
+                ),
+                _StatItem(
+                  label: 'Letzte Stimmung',
+                  value: latest?.moodLabel ?? '—',
+                  icon: Icons.insights_rounded,
+                  color: latest?.moodColor ?? ZenColors.jadeMid,
+                ),
+              ],
             ),
-          ),
-          const SizedBox(height: 17),
-          Wrap(
-            alignment: WrapAlignment.spaceEvenly,
-            spacing: 24,
-            runSpacing: 16,
-            children: [
-              _StatCard(
-                label: "Gesamte Einträge",
-                value: allEntries.length.toString(),
-                icon: Icons.library_books,
-                color: Colors.blueGrey[800]!,
-              ),
-              _StatCard(
-                label: "Ø Stimmung",
-                value: avgMood.toStringAsFixed(2),
-                icon: Icons.emoji_emotions_outlined,
-                color: Colors.orange[700]!,
-              ),
-              _StatCard(
-                label: "Letzte Stimmung",
-                value: lastEntry?.moodLabel ?? "-",
-                icon: Icons.insights,
-                color: lastEntry?.moodColor ?? Colors.grey,
+
+            const SizedBox(height: 28),
+
+            // --- Heatmap (7 Tage) oder Empty State ---
+            Card(
+              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
+              elevation: 3,
+              color: ZenColors.surface,
+              child: Padding(
+                padding: const EdgeInsets.all(20),
+                child: last7Days.isEmpty
+                    ? const _EmptyState(
+                        title: 'Noch keine Stimmungsdaten',
+                        subtitle:
+                            'Sobald Einträge vorhanden sind, erscheint hier deine 7-Tage-Heatmap.',
+                        icon: Icons.calendar_month_outlined,
+                      )
+                    : Column(
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: const [
+                          _SectionTitle('Mood Heatmap (7 Tage)'),
+                          SizedBox(height: 14),
+                          // Hinweis: MoodHeatmap nutzt die gefilterten last7Days
+                          // und mappt intern Scores → Farben.
+                          // Wir geben nur die Daten hinein (siehe Aufrufer unten).
+                        ],
+                      ),
               ),
+            ),
+
+            // (Heatmap separat, damit Semantics sauber bleibt)
+            if (last7Days.isNotEmpty) ...[
+              const SizedBox(height: 6),
+              MoodHeatmap(moodEntries: last7Days),
+              const SizedBox(height: 10),
+              const _HeatmapLegend(),
             ],
-          ),
-          const SizedBox(height: 25),
-          Card(
-            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
-            elevation: 2,
-            child: Padding(
-              padding: const EdgeInsets.all(18.0),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.start,
-                children: [
-                  const Text(
-                    "Mood Heatmap (7 Tage)",
-                    style: TextStyle(fontWeight: FontWeight.bold, fontSize: 19),
-                  ),
-                  const SizedBox(height: 12),
-                  MoodHeatmap(
-                    moodEntries: last7Days,
-                    days: 7,
-                  ),
-                  const SizedBox(height: 10),
-                  _HeatmapLegend(),
-                ],
+
+            const SizedBox(height: 28),
+
+            // --- Export (anonym) ---
+            Card(
+              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
+              elevation: 2,
+              color: ZenColors.surface,
+              child: const Padding(
+                padding: EdgeInsets.all(20),
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    _SectionTitle('Mood-Journal exportieren'),
+                    SizedBox(height: 8),
+                    // AnonExportWidget: liefert PII-armen Export (Client-kontrolliert)
+                    // → UI-Hinweis darunter.
+                  ],
+                ),
               ),
             ),
-          ),
-          const SizedBox(height: 30),
-          Card(
-            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
-            elevation: 1.5,
-            child: Padding(
-              padding: const EdgeInsets.all(16.0),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.start,
-                children: [
-                  const Text(
-                    "Mood-Journal exportieren",
-                    style: TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
-                  ),
-                  const SizedBox(height: 8),
-                  AnonExportWidget(entries: allEntries),
-                ],
-              ),
+
+            // Komponente separat, damit sie Daten bekommt
+            Padding(
+              padding: const EdgeInsets.only(top: 0, left: 20, right: 20),
+              child: AnonExportWidget(moodEntries: allEntries),
             ),
-          ),
-          const SizedBox(height: 34),
-          const Text(
-            "Letzte 5 Einträge",
-            style: TextStyle(fontWeight: FontWeight.w600, fontSize: 17),
-          ),
-          const SizedBox(height: 10),
-          ...allEntries.reversed.take(5).map((e) => _MoodEntryTile(entry: e)),
-        ],
+            const _TherapistHint(
+              'Export ist anonym. Die Kontrolle bleibt stets bei der/dem Klient*in.',
+            ),
+
+            const SizedBox(height: 28),
+
+            // --- Letzte Einträge (PII-frei) ---
+            const _SectionTitle('Letzte 5 Einträge'),
+            const SizedBox(height: 12),
+            if (recentFive.isEmpty)
+              const _EmptyState(
+                title: 'Noch keine Einträge',
+                subtitle:
+                    'Sobald Reflexionen erfasst wurden, erscheinen sie hier in zeitlicher Reihenfolge.',
+                icon: Icons.menu_book_outlined,
+              )
+            else
+              ...recentFive.map((e) => _MoodEntryTile(entry: e)),
+
+            const SizedBox(height: 20),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+/// Überschriften & Infotexte
+class _TherapistHeadline extends StatelessWidget {
+  final String text;
+  const _TherapistHeadline(this.text);
+
+  @override
+  Widget build(BuildContext context) {
+    return Text(
+      text,
+      style: ZenTextStyles.h2.copyWith(
+        fontSize: 26,
+        color: ZenColors.inkStrong,
+        letterSpacing: 0.15,
+      ),
+    );
+  }
+}
+
+class _SectionTitle extends StatelessWidget {
+  final String text;
+  const _SectionTitle(this.text);
+
+  @override
+  Widget build(BuildContext context) {
+    return Text(
+      text,
+      style: ZenTextStyles.title.copyWith(
+        fontSize: 18,
+        color: ZenColors.jade,
+        letterSpacing: 0.02,
+      ),
+    );
+  }
+}
+
+class _TherapistHint extends StatelessWidget {
+  final String text;
+  const _TherapistHint(this.text);
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(
+      padding: const EdgeInsets.only(top: 10),
+      child: Text(
+        text,
+        style: ZenTextStyles.caption.copyWith(
+          color: ZenColors.inkSubtle,
+          fontStyle: FontStyle.italic,
+        ),
       ),
     );
   }
 }
 
-/// Stat-Kachel im modernen Oxford-Design
+/// Responsives Grid für Stat-Karten
+class _StatsGrid extends StatelessWidget {
+  final List<_StatItem> items;
+  const _StatsGrid({required this.items});
+
+  @override
+  Widget build(BuildContext context) {
+    return LayoutBuilder(
+      builder: (_, c) {
+        final maxW = c.maxWidth;
+        const cardW = 180.0;
+        final cols = (maxW / (cardW + 16)).floor().clamp(1, items.length);
+        final effectiveW = (maxW - (16 * (cols - 1))) / cols;
+
+        return Wrap(
+          spacing: 16,
+          runSpacing: 12,
+          children: items
+              .map((it) => SizedBox(
+                    width: effectiveW,
+                    child: _StatCard(
+                      label: it.label,
+                      value: it.value,
+                      icon: it.icon,
+                      color: it.color,
+                    ),
+                  ))
+              .toList(),
+        );
+      },
+    );
+  }
+}
+
+class _StatItem {
+  final String label;
+  final String value;
+  final IconData icon;
+  final Color color;
+  _StatItem({
+    required this.label,
+    required this.value,
+    required this.icon,
+    required this.color,
+  });
+}
+
+/// Stat-Kachel, ruhig & klar
 class _StatCard extends StatelessWidget {
   final String label;
   final String value;
@@ -134,85 +282,166 @@ class _StatCard extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    return Container(
-      width: 155,
-      height: 85,
-      padding: const EdgeInsets.all(13),
-      decoration: BoxDecoration(
-        color: color.withOpacity(0.07),
-        borderRadius: BorderRadius.circular(18),
-        border: Border.all(color: color.withOpacity(0.16)),
-      ),
-      child: Column(
-        mainAxisAlignment: MainAxisAlignment.center,
-        children: [
-          Icon(icon, color: color, size: 28),
-          const SizedBox(height: 6),
-          Text(value, style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: color)),
-          const SizedBox(height: 1),
-          Text(label, style: TextStyle(fontSize: 12.5, color: color.withOpacity(0.7))),
-        ],
+    final bg = color.withOpacity(0.08);
+    final border = color.withOpacity(0.18);
+
+    return Semantics(
+      label: '$label: $value',
+      child: Container(
+        padding: const EdgeInsets.symmetric(horizontal: 14, vertical: 12),
+        decoration: BoxDecoration(
+          color: bg,
+          borderRadius: BorderRadius.circular(16),
+          border: Border.all(color: border),
+        ),
+        child: Row(
+          children: [
+            CircleAvatar(
+              radius: 18,
+              backgroundColor: color.withOpacity(0.12),
+              child: Icon(icon, color: color, size: 22),
+            ),
+            const SizedBox(width: 12),
+            Expanded(
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  Text(value,
+                      style: ZenTextStyles.h3.copyWith(
+                        color: color,
+                        fontWeight: FontWeight.w700,
+                      )),
+                  const SizedBox(height: 2),
+                  Text(label,
+                      style: ZenTextStyles.caption.copyWith(
+                        color: color.withOpacity(0.8),
+                      )),
+                ],
+              ),
+            ),
+          ],
+        ),
       ),
     );
   }
 }
 
-/// Heatmap-Legende unten unter die MoodHeatmap
+/// Heatmap-Legende (Zen-Palette)
 class _HeatmapLegend extends StatelessWidget {
+  const _HeatmapLegend();
+
   @override
   Widget build(BuildContext context) {
-    final moods = [
-      {"label": "Euphorisch", "color": const Color(0xFF365486)},
-      {"label": "Positiv", "color": const Color(0xFFA5CBA1)},
-      {"label": "Neutral", "color": const Color(0xFFFFF6C3)},
-      {"label": "Low", "color": const Color(0xFFFFD580)},
-      {"label": "Sad", "color": const Color(0xFFB2B2B2)},
+    final items = [
+      {'label': 'Sehr gut',     'color': ZenColors.deepSage},
+      {'label': 'Gut',          'color': ZenColors.sage},
+      {'label': 'Neutral',      'color': ZenColors.goldenMist},
+      {'label': 'Weniger gut',  'color': ZenColors.sunHaze},
+      {'label': 'Schwach',      'color': ZenColors.inkSubtle},
     ];
     return Row(
       mainAxisAlignment: MainAxisAlignment.center,
-      children: moods
-          .map((m) => Row(
+      children: items
+          .map(
+            (m) => Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 6),
+              child: Row(
                 children: [
-                  CircleAvatar(radius: 8, backgroundColor: m["color"] as Color),
+                  CircleAvatar(radius: 6.5, backgroundColor: m['color'] as Color),
                   const SizedBox(width: 6),
-                  Text(m["label"] as String, style: const TextStyle(fontSize: 12)),
-                  const SizedBox(width: 14),
+                  Text(m['label'] as String, style: ZenTextStyles.caption),
                 ],
-              ))
+              ),
+            ),
+          )
           .toList(),
     );
   }
 }
 
-/// Einzelne MoodEntry für Verlauf
+/// Ein MoodEntry als Verlaufskachel (PII-frei)
 class _MoodEntryTile extends StatelessWidget {
   final MoodEntry entry;
   const _MoodEntryTile({required this.entry});
 
   @override
   Widget build(BuildContext context) {
-    return ListTile(
-      leading: CircleAvatar(
-        backgroundColor: entry.moodColor,
-        child: Text(
-          entry.moodScore.toString(),
-          style: TextStyle(
-            color: entry.moodScore >= 3 ? Colors.white : Colors.black87,
-            fontWeight: FontWeight.w600,
+    final badgeFg = entry.moodScore >= 3 ? Colors.white : Colors.black87;
+
+    return Semantics(
+      label: 'Eintrag vom ${_formatDate(entry.timestamp)} mit Stimmung ${entry.moodLabel}',
+      child: Card(
+        elevation: 1.5,
+        margin: const EdgeInsets.symmetric(vertical: 4),
+        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(13)),
+        child: ListTile(
+          leading: CircleAvatar(
+            backgroundColor: entry.moodColor,
+            child: Text(
+              entry.moodScore.toString(),
+              style: TextStyle(
+                color: badgeFg,
+                fontWeight: FontWeight.w700,
+                fontSize: 15,
+              ),
+            ),
+          ),
+          title: Text(
+            entry.moodLabel,
+            style: ZenTextStyles.title.copyWith(fontSize: 16),
+          ),
+          // PII-sicher: keine Freitexte/Notizen anzeigen
+          subtitle: Text(
+            _formatDate(entry.timestamp),
+            style: ZenTextStyles.caption.copyWith(color: ZenColors.inkSubtle),
           ),
         ),
       ),
-      title: Text(
-        entry.moodLabel,
-        style: const TextStyle(fontWeight: FontWeight.bold),
-      ),
-      subtitle: Text(
-        "${entry.note ?? ''}  •  ${_formatDate(entry.timestamp)}",
-        style: const TextStyle(fontSize: 13),
-      ),
     );
   }
 
   String _formatDate(DateTime dt) =>
-      "${dt.day.toString().padLeft(2, '0')}.${dt.month.toString().padLeft(2, '0')}.${dt.year}";
+      '${dt.day.toString().padLeft(2, '0')}.${dt.month.toString().padLeft(2, '0')}.${dt.year}';
+}
+
+/// Freundlicher leerer Zustand
+class _EmptyState extends StatelessWidget {
+  final String title;
+  final String subtitle;
+  final IconData icon;
+
+  const _EmptyState({
+    required this.title,
+    required this.subtitle,
+    required this.icon,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Semantics(
+      label: '$title. $subtitle',
+      child: Padding(
+        padding: const EdgeInsets.symmetric(vertical: 6),
+        child: Row(
+          children: [
+            Icon(icon, color: ZenColors.jadeMid),
+            const SizedBox(width: 10),
+            Expanded(
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  Text(title,
+                      style: ZenTextStyles.title.copyWith(
+                        color: ZenColors.jadeMid,
+                      )),
+                  const SizedBox(height: 2),
+                  Text(subtitle, style: ZenTextStyles.caption),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
 }
diff --git a/zen_project1337/lib/features/voice/emotion_detection.dart b/zen_project1337/lib/features/voice/emotion_detection.dart
deleted file mode 100644
index 3a7920c..0000000
--- a/zen_project1337/lib/features/voice/emotion_detection.dart
+++ /dev/null
@@ -1,103 +0,0 @@
-// lib/features/voice/emotion_detection.dart
-
-import 'package:flutter/material.dart';
-
-/// Modellierte Emotionen auf Oxford-Niveau:
-enum EmotionType {
-  joy,
-  sadness,
-  anger,
-  fear,
-  calm,
-  surprise,
-  neutral,
-  compassion,
-}
-
-class DetectedEmotionResult {
-  final EmotionType emotion;
-  final double confidence; // 0.0–1.0
-  final String emoji;
-  final Color color;
-  final String? reason;
-
-  DetectedEmotionResult({
-    required this.emotion,
-    required this.confidence,
-    required this.emoji,
-    required this.color,
-    this.reason,
-  });
-}
-
-/// EmotionMap für Farben & Emojis (Oxford/Zen Style)
-const _emotionVisuals = {
-  EmotionType.joy:      {'emoji': '😊', 'color': Color(0xFFA5CBA1)},
-  EmotionType.sadness:  {'emoji': '😢', 'color': Color(0xFF95A3B3)},
-  EmotionType.anger:    {'emoji': '😡', 'color': Color(0xFFD67873)},
-  EmotionType.fear:     {'emoji': '😨', 'color': Color(0xFFB2B8CB)},
-  EmotionType.calm:     {'emoji': '🌿', 'color': Color(0xFFBEE6CB)},
-  EmotionType.surprise: {'emoji': '😲', 'color': Color(0xFFF7CE84)},
-  EmotionType.neutral:  {'emoji': '😐', 'color': Color(0xFFB5B5B5)},
-  EmotionType.compassion: {'emoji': '🤗', 'color': Color(0xFFE9C8A7)},
-};
-
-/// Hauptfunktion zur Emotions-Detektion:
-/// - Für Text ODER (später) Audio-Werte
-Future<DetectedEmotionResult> detectEmotionFromVoice({
-  required String transcript,
-  // optional: voiceData, userProfile, context etc.
-}) async {
-  // *** 1. Dummy-Logik ***
-  // TODO: Hier kannst du (später) GPT/OpenAI/Custom-API anbinden!
-  // Für die Demo klassifizieren wir ein paar Schlüsselwörter:
-  final t = transcript.toLowerCase();
-
-  EmotionType type = EmotionType.neutral;
-  double conf = 0.7;
-  String? reason;
-
-  if (t.contains('glücklich') || t.contains('freude') || t.contains('dankbar') || t.contains('lachen')) {
-    type = EmotionType.joy;
-    conf = 0.97;
-    reason = "Du klingst positiv, dankbar oder voller Freude.";
-  } else if (t.contains('traurig') || t.contains('erschöpft') || t.contains('verloren')) {
-    type = EmotionType.sadness;
-    conf = 0.95;
-    reason = "Deine Worte deuten auf Traurigkeit oder Erschöpfung hin.";
-  } else if (t.contains('wütend') || t.contains('ärgerlich')) {
-    type = EmotionType.anger;
-    conf = 0.92;
-    reason = "Da ist viel Wut oder Ärger in deiner Stimme.";
-  } else if (t.contains('ängstlich') || t.contains('angst') || t.contains('sorge')) {
-    type = EmotionType.fear;
-    conf = 0.92;
-    reason = "Dein Ton zeigt Angst oder Unsicherheit.";
-  } else if (t.contains('ruhig') || t.contains('gelassen') || t.contains('ausgeglichen')) {
-    type = EmotionType.calm;
-    conf = 0.98;
-    reason = "Du klingst sehr ruhig und ausgeglichen.";
-  } else if (t.contains('überrascht') || t.contains('wow') || t.contains('krass')) {
-    type = EmotionType.surprise;
-    conf = 0.90;
-    reason = "Da ist Überraschung oder Staunen in deiner Antwort.";
-  } else if (t.contains('mitgefühl') || t.contains('verstehen') || t.contains('herzlich')) {
-    type = EmotionType.compassion;
-    conf = 0.93;
-    reason = "Deine Worte sind voller Mitgefühl.";
-  }
-
-  // *** 2. Visuals & Return ***
-  final visuals = _emotionVisuals[type]!;
-  return DetectedEmotionResult(
-    emotion: type,
-    confidence: conf,
-    emoji: visuals['emoji'] as String,
-    color: visuals['color'] as Color,
-    reason: reason,
-  );
-}
-
-// OPTIONAL: Erweiterbar für Custom-Audio-Analysis/KI-API
-// (z. B. mit stimmlicher Analyse, GPT-API, TensorFlow Lite, etc.)
-
diff --git a/zen_project1337/lib/features/voice/live_waveform.dart b/zen_project1337/lib/features/voice/live_waveform.dart
deleted file mode 100644
index 7de1ff6..0000000
--- a/zen_project1337/lib/features/voice/live_waveform.dart
+++ /dev/null
@@ -1,124 +0,0 @@
-// lib/features/voice/live_waveform.dart
-
-import 'package:flutter/material.dart';
-import 'dart:math';
-
-/// LiveWaveform: Animierte Sprachwellenform für Voice-Input.
-/// - Verwendet in VoiceInputWidget u.a.
-/// - Passend für Oxford/Zen Stil: ruhig, weich, spielerisch.
-class LiveWaveform extends StatefulWidget {
-  final bool isActive;
-  final double amplitude; // 0.0–1.0
-  final Color color;
-  final double width;
-  final double height;
-
-  const LiveWaveform({
-    super.key,
-    required this.isActive,
-    required this.amplitude,
-    required this.color,
-    this.width = 120,
-    this.height = 40,
-  });
-
-  @override
-  State<LiveWaveform> createState() => _LiveWaveformState();
-}
-
-class _LiveWaveformState extends State<LiveWaveform> with SingleTickerProviderStateMixin {
-  late AnimationController _controller;
-  late Animation<double> _anim;
-  double _phase = 0.0;
-
-  @override
-  void initState() {
-    super.initState();
-    _controller = AnimationController(
-      vsync: this,
-      duration: const Duration(milliseconds: 800),
-    )..addListener(() {
-        setState(() {
-          _phase += 0.04;
-        });
-      });
-    _anim = Tween<double>(begin: 0, end: 1).animate(_controller);
-
-    if (widget.isActive) _controller.repeat();
-  }
-
-  @override
-  void didUpdateWidget(LiveWaveform oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    if (widget.isActive && !_controller.isAnimating) {
-      _controller.repeat();
-    } else if (!widget.isActive && _controller.isAnimating) {
-      _controller.stop();
-    }
-  }
-
-  @override
-  void dispose() {
-    _controller.dispose();
-    super.dispose();
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    return SizedBox(
-      width: widget.width,
-      height: widget.height,
-      child: CustomPaint(
-        painter: _WaveformPainter(
-          phase: _phase,
-          amplitude: widget.amplitude,
-          color: widget.color,
-        ),
-      ),
-    );
-  }
-}
-
-/// Waveform-Painter: Sinuskurve für Voice-UI (Oxford Edition)
-class _WaveformPainter extends CustomPainter {
-  final double phase;
-  final double amplitude;
-  final Color color;
-
-  _WaveformPainter({
-    required this.phase,
-    required this.amplitude,
-    required this.color,
-  });
-
-  @override
-  void paint(Canvas canvas, Size size) {
-    final paint = Paint()
-      ..color = color.withOpacity(0.85)
-      ..style = PaintingStyle.stroke
-      ..strokeWidth = 3.5
-      ..strokeCap = StrokeCap.round;
-
-    final path = Path();
-    for (double x = 0; x <= size.width; x += 1.5) {
-      final norm = x / size.width;
-      final y = size.height / 2 +
-          sin(phase + norm * 2 * pi * 1.2) * amplitude * size.height * 0.38;
-      if (x == 0) {
-        path.moveTo(x, y);
-      } else {
-        path.lineTo(x, y);
-      }
-    }
-    canvas.drawPath(path, paint);
-
-    // Zen-Glanz (dezent, aber modern)
-    final accent = color.withOpacity(0.12);
-    final dotY = size.height / 2 + sin(phase + 2.3) * amplitude * size.height * 0.38;
-    canvas.drawCircle(Offset(size.width * 0.93, dotY), 4.0, Paint()..color = accent);
-  }
-
-  @override
-  bool shouldRepaint(_WaveformPainter old) =>
-      old.phase != phase || old.amplitude != amplitude || old.color != color;
-}
diff --git a/zen_project1337/lib/features/voice/voice_input.dart b/zen_project1337/lib/features/voice/voice_input.dart
deleted file mode 100644
index 697fbf8..0000000
--- a/zen_project1337/lib/features/voice/voice_input.dart
+++ /dev/null
@@ -1,211 +0,0 @@
-// lib/features/voice/voice_input.dart
-
-import 'package:flutter/material.dart';
-import 'package:speech_to_text/speech_to_text.dart' as stt;
-import 'live_waveform.dart';
-import 'emotion_detection.dart';
-import '../accessibility/a11y_utils.dart';
-
-/// Champion’s League VoiceInputWidget for ZenYourself
-/// - Speech-to-text mit Realtime-UX
-/// - Live Waveform
-/// - KI-Emotion Detection (Voice/Text)
-/// - Oxford UI & Barrierefreiheit
-
-class VoiceInputWidget extends StatefulWidget {
-  final void Function(String transcript, DetectedEmotionResult emotion)? onResult;
-  final String? hint;
-  final bool autoFocus;
-  final bool showWaveform;
-  final Color? accentColor;
-
-  const VoiceInputWidget({
-    super.key,
-    this.onResult,
-    this.hint,
-    this.autoFocus = false,
-    this.showWaveform = true,
-    this.accentColor,
-  });
-
-  @override
-  State<VoiceInputWidget> createState() => _VoiceInputWidgetState();
-}
-
-class _VoiceInputWidgetState extends State<VoiceInputWidget> {
-  late stt.SpeechToText _speech;
-  bool _isListening = false;
-  String _recognized = "";
-  double _amplitude = 0.5;
-  DetectedEmotionResult? _emotion;
-  bool _speechReady = false;
-
-  @override
-  void initState() {
-    super.initState();
-    _speech = stt.SpeechToText();
-    if (widget.autoFocus) _initAndStart();
-  }
-
-  Future<void> _initAndStart() async {
-    bool available = await _speech.initialize(
-      onStatus: (status) {
-        if (status == "done" || status == "notListening") _stopListening();
-      },
-      onError: (err) => setState(() => _isListening = false),
-    );
-    setState(() => _speechReady = available);
-    if (available) _startListening();
-  }
-
-  Future<void> _startListening() async {
-    setState(() {
-      _isListening = true;
-      _recognized = "";
-      _emotion = null;
-    });
-    await _speech.listen(
-      localeId: 'de_DE', // Passe die Locale an!
-      onResult: (result) {
-        setState(() {
-          _recognized = result.recognizedWords;
-          _amplitude = 0.6 + 0.3 * (result.confidence ?? 0.6); // Demo, kann ersetzt werden
-        });
-      },
-    );
-  }
-
-  Future<void> _stopListening() async {
-    await _speech.stop();
-    setState(() => _isListening = false);
-    if (_recognized.trim().isNotEmpty) {
-      final emotion = await detectEmotionFromVoice(transcript: _recognized);
-      setState(() => _emotion = emotion);
-      widget.onResult?.call(_recognized, emotion);
-    }
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    final accent = widget.accentColor ?? AccessibilityPalette.get(context).accent;
-
-    return Semantics(
-      container: true,
-      child: Card(
-        margin: const EdgeInsets.all(10),
-        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(18)),
-        elevation: 5,
-        child: Padding(
-          padding: const EdgeInsets.symmetric(vertical: 24, horizontal: 18),
-          child: Column(
-            mainAxisSize: MainAxisSize.min,
-            children: [
-              // Microphone-Button
-              Semantics(
-                label: _isListening ? "Stop recording" : "Start recording",
-                child: GestureDetector(
-                  onTap: _isListening ? _stopListening : _initAndStart,
-                  child: CircleAvatar(
-                    backgroundColor: _isListening ? accent : Colors.grey[200],
-                    radius: 32,
-                    child: Icon(
-                      _isListening ? Icons.mic : Icons.mic_none,
-                      color: _isListening ? Colors.white : accent,
-                      size: 32,
-                    ),
-                  ),
-                ),
-              ),
-              const SizedBox(height: 14),
-
-              // Live Waveform
-              if (widget.showWaveform)
-                LiveWaveform(
-                  isActive: _isListening,
-                  amplitude: _amplitude,
-                  color: accent,
-                  width: 140,
-                  height: 48,
-                ),
-
-              if (_isListening)
-                Padding(
-                  padding: const EdgeInsets.only(top: 10),
-                  child: A11yText(
-                    "Sprich jetzt …",
-                    fontSize: 15,
-                    color: Colors.grey[700],
-                    semanticsLabel: "Aufnahme läuft, bitte sprich.",
-                  ),
-                ),
-
-              // Transcript + Emotion
-              if (!_isListening && _recognized.isNotEmpty)
-                Column(
-                  children: [
-                    const SizedBox(height: 16),
-                    A11yText(
-                      "Dein Gedanke:",
-                      fontSize: 14,
-                      color: Colors.grey[600],
-                      fontWeight: FontWeight.w500,
-                    ),
-                    const SizedBox(height: 5),
-                    Text(
-                      _recognized,
-                      style: const TextStyle(fontSize: 17, fontWeight: FontWeight.bold),
-                      textAlign: TextAlign.center,
-                    ),
-                    if (_emotion != null) ...[
-                      const SizedBox(height: 13),
-                      Row(
-                        mainAxisAlignment: MainAxisAlignment.center,
-                        children: [
-                          Text(_emotion!.emoji, style: const TextStyle(fontSize: 28)),
-                          const SizedBox(width: 10),
-                          A11yText(
-                            "${_emotion!.emotion.name} (${(_emotion!.confidence * 100).toStringAsFixed(1)}%)",
-                            color: _emotion!.color,
-                            semanticsLabel: "Erkannte Emotion: ${_emotion!.emotion.name}",
-                          ),
-                        ],
-                      ),
-                      if (_emotion!.reason != null)
-                        Padding(
-                          padding: const EdgeInsets.only(top: 5.0),
-                          child: Text(
-                            _emotion!.reason!,
-                            style: const TextStyle(fontSize: 11, color: Colors.grey),
-                            textAlign: TextAlign.center,
-                          ),
-                        ),
-                    ]
-                  ],
-                ),
-
-              if (widget.hint != null && !_isListening)
-                Padding(
-                  padding: const EdgeInsets.only(top: 15.0),
-                  child: Text(
-                    widget.hint!,
-                    style: TextStyle(fontSize: 13, color: accent),
-                    textAlign: TextAlign.center,
-                  ),
-                ),
-
-              // Accessibility Hinweis
-              if (!_speechReady && !_isListening)
-                Padding(
-                  padding: const EdgeInsets.only(top: 16.0),
-                  child: Text(
-                    "Mikrofon nicht bereit. Prüfe Zugriffsrechte!",
-                    style: const TextStyle(fontSize: 12, color: Colors.redAccent),
-                  ),
-                ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-}
diff --git a/zen_project1337/lib/main.dart b/zen_project1337/lib/main.dart
index c1acffc..4bf9881 100644
--- a/zen_project1337/lib/main.dart
+++ b/zen_project1337/lib/main.dart
@@ -1,91 +1,187 @@
 // lib/main.dart
+//
+// ZenYourself — App Bootstrap (Oxford-Zen, Pro-Level, 2025-08)
+// ------------------------------------------------------------
+// Highlights:
+// • Robustes Bootstrapping (runZonedGuarded, PlatformDispatcher.onError)
+// • API-Wiring mit --dart-define Fallback auf ZenEnv (env_config.dart)
+// • Provider-Setup inkl. Journal-Persistenz
+// • A11y, i18n, Themes (zentral via app_theme.dart), sanftes Scroll-Verhalten
 
+import 'dart:async';
 import 'package:flutter/material.dart';
 import 'package:flutter_localizations/flutter_localizations.dart';
 import 'package:provider/provider.dart';
-import 'package:zenyourself/models/mood_entries_provider.dart';
-import 'package:zenyourself/models/reflection_entries_provider.dart';
-import 'package:zenyourself/models/user_profile_provider.dart';
-
-// Features – Modular, einzeln austauschbar
-import 'features/journey/journey_map.dart';
-import 'features/reflection/reflection_screen.dart';
-import 'features/impulse/impulse_screen.dart';
-import 'features/pro/pro_screen.dart';
-import 'features/calendar/mood_heatmap.dart';
-import 'features/community/question_voting.dart';
-
-// Essentials & UI
-import 'shared/ui/zen_widgets.dart';
-import 'audio/soundscape_manager.dart';
-import 'data/mood_entry.dart';
+import 'app_theme.dart';
 
-// Accessibility
-import 'features/accessibility/a11y_utils.dart';
+// --- State Management Provider ---
+import 'models/mood_entries_provider.dart';
+import 'models/reflection_entries_provider.dart';
+import 'models/user_profile_provider.dart';
+import 'models/journal_entries_provider.dart';
+
+// --- Data Models (für Persistenz-Hooks) ---
+import 'data/journal_entry.dart';
+
+// --- Accessibility ---
 import 'features/accessibility/color_blind_mode.dart';
 import 'features/accessibility/large_text_mode.dart';
+import 'features/accessibility/a11y_utils.dart';
 
-// State Management (Settings, Profile, Mood, Reflection)
-import 'data/reflection_entry.dart';
-import 'models/user.dart';
+// --- Audio/Sound ---
+import 'audio/soundscape_manager.dart';
+
+// --- Local Storage Service ---
 import 'services/local_storage.dart';
-import 'services/analytics.dart';
 
-// Animation/Assets
-import 'package:lottie/lottie.dart';
+// --- Services (Pro): Guidance + ApiClient ---
+import 'services/guidance_service.dart';
+import 'services/api_client.dart';
+
+// --- Core Screens ---
+import 'features/start/start_screen.dart';
+
+// --- Env Defaults / Fallback (liegt in lib/env_config.dart) ---
+import 'env_config.dart';
+
+/// Compile-Time Konfiguration (per --dart-define)
+const String _kApiUrl = String.fromEnvironment('ZEN_API_URL', defaultValue: '');
+const bool _kApiEnabled =
+    bool.fromEnvironment('ZEN_API_ENABLED', defaultValue: true);
+const String _kApiToken =
+    String.fromEnvironment('ZEN_APP_TOKEN', defaultValue: '');
+
+Future<void> main() async {
+  // Robuster Error-Fang für Sync/Async
+  runZonedGuarded(() async {
+    WidgetsFlutterBinding.ensureInitialized();
+
+    // Lokaler Storage
+    try {
+      await LocalStorageService().init();
+    } catch (e, st) {
+      debugPrint('[Init] LocalStorage error: $e\n$st');
+    }
+
+    // Flutter-Error-Delegates
+    FlutterError.onError = (FlutterErrorDetails details) {
+      FlutterError.dumpErrorToConsole(details);
+    };
+    WidgetsBinding.instance.platformDispatcher.onError = (error, stack) {
+      debugPrint('[Platform] Uncaught: $error\n$stack');
+      return true; // already handled
+    };
+
+    // HTTP-Backend initialisieren (mit Fallback auf env_config.dart)
+    _setupZenApi();
+
+    runApp(const ZenYourselfApp());
+  }, (e, st) {
+    debugPrint('[Zoned] Uncaught: $e\n$st');
+  });
+}
+
+/// Liest zuerst --dart-define, sonst lib/env_config.dart.
+/// Ergebnis: App startet auch ohne Bash-Flags.
+void _setupZenApi() {
+  // Wenn irgendein --dart-define gesetzt wurde (URL/TOKEN/Enabled),
+  // nehmen wir die Compile-Time-Werte. Sonst die Defaults aus env_config.dart.
+  final bool definesUsed =
+      _kApiUrl.isNotEmpty || _kApiToken.isNotEmpty || !_kApiEnabled;
+
+  final bool enabled = definesUsed ? _kApiEnabled : ZenEnv.apiEnabled;
+  final String url = definesUsed && _kApiUrl.isNotEmpty ? _kApiUrl : ZenEnv.apiUrl;
+  final String token =
+      definesUsed && _kApiToken.isNotEmpty ? _kApiToken : ZenEnv.appToken;
+
+  if (enabled && url.isNotEmpty) {
+    try {
+      final client = ApiClient(
+        baseUrl: Uri.parse(url),
+        tokenProvider: () async => token.isNotEmpty ? token : null,
+        onLog: (msg) => debugPrint('[Api] $msg'),
+      );
+
+      GuidanceService.instance.configureHttp(
+        invoker: client.call,
+        baseUrl: client.baseUrlStr,
+      );
 
-void main() async {
-  WidgetsFlutterBinding.ensureInitialized();
-  await LocalStorageService().loadSetting("init"); // Dummy Load (warmup)
-  runApp(
-    MultiProvider(
+      if (token.isEmpty) {
+        debugPrint('⚠️  ZenYourself: Kein APP_TOKEN gesetzt – der Worker könnte 401/403 liefern.');
+      }
+      debugPrint('✅ GuidanceService HTTP enabled → $url');
+    } catch (e, st) {
+      debugPrint('❌ ApiClient setup failed: $e\n$st');
+    }
+  } else {
+    debugPrint(
+      'ℹ️ GuidanceService HTTP disabled (lokaler Fallback aktiv). '
+      'Grund: enabled=$enabled, url="${url.isEmpty ? '<leer>' : url}"',
+    );
+  }
+}
+
+class ZenYourselfApp extends StatelessWidget {
+  const ZenYourselfApp({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    final storage = LocalStorageService();
+
+    return MultiProvider(
       providers: [
-        ChangeNotifierProvider(create: (_) => AppSettings()),
+        // --- A11y / System ---
+        ChangeNotifierProvider(create: (_) => ColorBlindModeProvider(false)),
+        ChangeNotifierProvider(create: (_) => LargeTextModeProvider()),
         ChangeNotifierProvider(create: (_) => SoundscapeManager()),
-        ChangeNotifierProvider(create: (_) => MoodEntriesProvider()),
-        ChangeNotifierProvider(create: (_) => ReflectionEntriesProvider()),
         ChangeNotifierProvider(create: (_) => UserProfileProvider()),
-      ],
-      child: const ZenYourselfApp(),
-    ),
-  );
-}
+        ChangeNotifierProvider(create: (_) => AppSettings()),
 
-// ================================
-//         SETTINGS PROVIDER
-// ================================
-class AppSettings extends ChangeNotifier {
-  bool colorBlindMode = false;
-  bool largeText = false;
-  bool darkMode = false;
-  Locale locale = const Locale('de', 'DE');
+        // --- Domain ---
+        ChangeNotifierProvider(create: (_) => MoodEntriesProvider()),
+        ChangeNotifierProvider(create: (_) => ReflectionEntriesProvider()),
 
-  void toggleColorBlind(bool v) { colorBlindMode = v; notifyListeners(); }
-  void toggleLargeText(bool v) { largeText = v; notifyListeners(); }
-  void toggleDarkMode(bool v) { darkMode = v; notifyListeners(); }
-  void setLocale(Locale l) { locale = l; notifyListeners(); }
+        // JournalEntriesProvider mit Persistenz-Hooks
+        ChangeNotifierProvider(
+          create: (_) {
+            final p = JournalEntriesProvider();
+            p.attachPersistence(
+              load: () async => await storage
+                  .loadJournalEntries<JournalEntry>(JournalEntry.fromJson),
+              save: (entries) async => await storage.saveJournalEntries(entries),
+              loadNow: true,
+            );
+            return p;
+          },
+        ),
+      ],
+      child: const _ZenYourselfMaterialApp(),
+    );
+  }
 }
 
-// ================================
-//         MAIN APP WIDGET
-// ================================
-class ZenYourselfApp extends StatelessWidget {
-  const ZenYourselfApp({super.key});
+class _ZenYourselfMaterialApp extends StatelessWidget {
+  const _ZenYourselfMaterialApp({Key? key}) : super(key: key);
 
   @override
   Widget build(BuildContext context) {
-    final settings = Provider.of<AppSettings>(context);
-    return LargeTextProvider(
-      largeText: settings.largeText,
-      child: A11yProvider(
-        colorBlindMode: settings.colorBlindMode,
+    final settings = context.watch<AppSettings>();
+    final isDark = settings.darkMode;
+
+    return A11yProvider(
+      colorBlind: context.watch<ColorBlindModeProvider>().enabled,
+      darkMode: isDark,
+      child: LargeTextProvider(
         child: MaterialApp(
-          title: "ZenYourself",
+          restorationScopeId: 'zenyourself-app',
           debugShowCheckedModeBanner: false,
+
+          // Locale / i18n
           locale: settings.locale,
           supportedLocales: const [
-            Locale('en', 'US'),
             Locale('de', 'DE'),
+            Locale('en', 'US'),
             Locale('fr', 'FR'),
             Locale('it', 'IT'),
           ],
@@ -94,256 +190,74 @@ class ZenYourselfApp extends StatelessWidget {
             GlobalWidgetsLocalizations.delegate,
             GlobalCupertinoLocalizations.delegate,
           ],
-          theme: ThemeData(
-            fontFamily: 'NotoSans',
-            colorScheme: ColorScheme.fromSwatch(
-              brightness: settings.darkMode ? Brightness.dark : Brightness.light,
-            ).copyWith(
-              primary: const Color(0xFF002147),    // Oxford Blue
-              secondary: const Color(0xFF5F7161),  // Jade Green
-            ),
-            scaffoldBackgroundColor: settings.darkMode
-                ? const Color(0xFF131A21)
-                : const Color(0xFFF8F9FB),
-            textTheme: const TextTheme(
-              bodyMedium: TextStyle(color: Color(0xFF1B263B), fontSize: 16),
-            ),
-            appBarTheme: AppBarTheme(
-              backgroundColor: const Color(0xFF002147),
-              foregroundColor: Colors.white,
-              elevation: 3,
-              centerTitle: true,
-              titleTextStyle: const TextStyle(
-                fontFamily: 'NotoSans',
-                fontSize: 21,
-                fontWeight: FontWeight.bold,
-              ),
-            ),
-            elevatedButtonTheme: ElevatedButtonThemeData(
-              style: ElevatedButton.styleFrom(
-                backgroundColor: const Color(0xFF365486),
-                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(22)),
-                textStyle: const TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
-                elevation: 3,
-              ),
-            ),
-            dividerColor: Colors.grey[300],
-          ),
-          home: const ZenHomeScreen(),
+          localeListResolutionCallback:
+              (List<Locale>? locales, Iterable<Locale> supported) {
+            if (locales == null || locales.isEmpty) return supported.first;
+            for (final dev in locales) {
+              for (final s in supported) {
+                final lang = s.languageCode == dev.languageCode;
+                final regionOk =
+                    s.countryCode == null || s.countryCode == dev.countryCode;
+                if (lang && regionOk) return s;
+              }
+              for (final s in supported) {
+                if (s.languageCode == dev.languageCode) return s;
+              }
+            }
+            return supported.first;
+          },
+
+          // Themes (zentral via lib/app_theme.dart)
+          themeMode: isDark ? ThemeMode.dark : ThemeMode.light,
+          theme: AppTheme.light,
+          darkTheme: AppTheme.dark,
+
+          // UX-Verhalten
+          scrollBehavior: const _ZenScrollBehavior(),
+
+          // Start
+          home: const StartScreen(),
         ),
       ),
     );
   }
 }
 
-// ================================
-//            HOME SCREEN
-// ================================
-class ZenHomeScreen extends StatefulWidget {
-  const ZenHomeScreen({super.key});
-  @override
-  State<ZenHomeScreen> createState() => _ZenHomeScreenState();
-}
-
-class _ZenHomeScreenState extends State<ZenHomeScreen> with TickerProviderStateMixin {
-  int _tabIndex = 0;
-
-  // Lottie-Assets für Haupttabs (visual Zen-Transitions)
-  static const List<String> _tabLottieAssets = [
-    "assets/zenyourself_clouds.json",
-    "assets/mood_sun.png", // Static fallback
-    "assets/mood_leaf.png",
-    "assets/mood_swirl.png",
-    "assets/mood_cloud.png",
-  ];
-
-  // Tab-Titel
-  static const List<String> _tabTitles = [
-    "Zen Journey",
-    "Reflektieren",
-    "Impulse",
-    "Pro Features",
-    "Community",
-  ];
-
-  // Optional: Zen Sprüche für noch mehr Tiefe
-  static const List<String> _tabQuotes = [
-    "Der Weg entsteht beim Gehen.",
-    "Die Antwort ist in dir.",
-    "Impulse wachsen wie der Bambus.",
-    "Pro = Meisterschaft deiner Entwicklung.",
-    "Geteilte Weisheit ist doppelte Weisheit.",
-  ];
-
-  @override
-  Widget build(BuildContext context) {
-    final settings = Provider.of<AppSettings>(context);
-
-    final List<Widget> screens = [
-      // 1. Journey: Animierte Karte/Weg, MoodVisuals
-      const JourneyMapScreen(),
-
-      // 2. Reflection: Sanfte Reflexion, KI-Coach, Koan
-      const ReflectionScreen(),
+/// =======================
+///   APP SETTINGS PROVIDER
+/// =======================
+class AppSettings extends ChangeNotifier {
+  bool colorBlindMode = false;
+  bool largeText = false;
+  bool darkMode = false;
+  Locale locale = const Locale('de', 'DE');
 
-      // 3. Impulse: Motivationskarten, Soundscapes, Tagesimpulse
-      const ImpulseScreen(),
+  void toggleColorBlind(bool v) {
+    colorBlindMode = v;
+    notifyListeners();
+  }
 
-      // 4. Pro: Export, Analytics, Mood-Garten
-      const ProScreen(),
+  void toggleLargeText(bool v) {
+    largeText = v;
+    notifyListeners();
+  }
 
-      // 5. Community: Voting, Inspiration, (bald Clubs)
-      const CommunityQuestionVoting(),
-    ];
+  void toggleDarkMode(bool v) {
+    darkMode = v;
+    notifyListeners();
+  }
 
-    return Scaffold(
-      extendBodyBehindAppBar: true,
-      appBar: AppBar(
-        title: Row(
-          children: [
-            ZenAvatar(svgAsset: "assets/logo.svg", size: 38),
-            const SizedBox(width: 10),
-            Text(_tabTitles[_tabIndex]),
-          ],
-        ),
-        actions: [
-          IconButton(
-            icon: const Icon(Icons.settings),
-            tooltip: "Accessibility & Settings",
-            onPressed: () {
-              showModalBottomSheet(
-                context: context,
-                shape: const RoundedRectangleBorder(
-                  borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
-                ),
-                builder: (ctx) => _ZenSettingsSheet(),
-              );
-            },
-          )
-        ],
-        backgroundColor: Colors.transparent,
-        elevation: 0,
-      ),
-      body: Stack(
-        children: [
-          // Wabernder Hintergrund (ZenAnimatedBackground)
-          if (_tabIndex < _tabLottieAssets.length)
-            Positioned.fill(
-              child: _tabLottieAssets[_tabIndex].endsWith(".json")
-                  ? Lottie.asset(_tabLottieAssets[_tabIndex], fit: BoxFit.cover, repeat: true)
-                  : Image.asset(_tabLottieAssets[_tabIndex], fit: BoxFit.cover),
-            ),
-          // Smooth Page Fade + Zitat/Impuls
-          Positioned(
-            top: 62, left: 24, right: 24,
-            child: AnimatedSwitcher(
-              duration: const Duration(milliseconds: 450),
-              child: Text(
-                _tabQuotes[_tabIndex],
-                key: ValueKey(_tabIndex),
-                style: const TextStyle(
-                  fontSize: 16, fontStyle: FontStyle.italic, color: Color(0xFF5F7161),
-                  fontFamily: "NotoSans",
-                ),
-                textAlign: TextAlign.center,
-              ),
-            ),
-          ),
-          AnimatedSwitcher(
-            duration: const Duration(milliseconds: 350),
-            child: screens[_tabIndex],
-          ),
-        ],
-      ),
-      bottomNavigationBar: BottomNavigationBar(
-        currentIndex: _tabIndex,
-        onTap: (i) => setState(() => _tabIndex = i),
-        type: BottomNavigationBarType.fixed,
-        showUnselectedLabels: true,
-        selectedItemColor: const Color(0xFF002147),
-        unselectedItemColor: const Color(0xFF365486),
-        selectedLabelStyle: const TextStyle(fontWeight: FontWeight.bold),
-        items: const [
-          BottomNavigationBarItem(icon: Icon(Icons.landscape), label: "Journey"),
-          BottomNavigationBarItem(icon: Icon(Icons.self_improvement), label: "Reflektieren"),
-          BottomNavigationBarItem(icon: Icon(Icons.bolt), label: "Impulse"),
-          BottomNavigationBarItem(icon: Icon(Icons.emoji_events), label: "Pro"),
-          BottomNavigationBarItem(icon: Icon(Icons.groups), label: "Community"),
-        ],
-      ),
-      floatingActionButton: _tabIndex == 1 // Nur im Reflexions-Tab!
-          ? FloatingActionButton.extended(
-              heroTag: "reflect_btn",
-              icon: const Icon(Icons.mic_rounded),
-              backgroundColor: const Color(0xFF365486),
-              onPressed: () {
-                showModalBottomSheet(
-                  context: context,
-                  isScrollControlled: true,
-                  backgroundColor: Colors.transparent,
-                  builder: (_) => const ReflectionScreen(showInputOnly: true),
-                );
-              },
-              label: const Text("Reflektieren"),
-            )
-          : null,
-    );
+  void setLocale(Locale l) {
+    locale = l;
+    notifyListeners();
   }
 }
 
-// ================================
-//        SETTINGS BOTTOM SHEET
-// ================================
-class _ZenSettingsSheet extends StatelessWidget {
+class _ZenScrollBehavior extends MaterialScrollBehavior {
+  const _ZenScrollBehavior();
   @override
-  Widget build(BuildContext context) {
-    final settings = Provider.of<AppSettings>(context);
-    return Container(
-      padding: const EdgeInsets.symmetric(vertical: 32, horizontal: 26),
-      child: Column(
-        mainAxisSize: MainAxisSize.min,
-        children: [
-          const Text("Einstellungen & Accessibility",
-              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 21)),
-          const ZenDivider(),
-          SwitchListTile(
-            value: settings.colorBlindMode,
-            onChanged: settings.toggleColorBlind,
-            title: const Text("Color-Blind Mode"),
-            secondary: const Icon(Icons.color_lens),
-          ),
-          SwitchListTile(
-            value: settings.largeText,
-            onChanged: settings.toggleLargeText,
-            title: const Text("Große Schrift"),
-            secondary: const Icon(Icons.format_size),
-          ),
-          SwitchListTile(
-            value: settings.darkMode,
-            onChanged: settings.toggleDarkMode,
-            title: const Text("Dark Mode"),
-            secondary: const Icon(Icons.nights_stay),
-          ),
-          // Spracheinstellung (optional)
-          Row(
-            mainAxisAlignment: MainAxisAlignment.center,
-            children: [
-              const Icon(Icons.language, color: Color(0xFF365486)),
-              const SizedBox(width: 8),
-              DropdownButton<Locale>(
-                value: settings.locale,
-                onChanged: (l) => settings.setLocale(l!),
-                items: const [
-                  DropdownMenuItem(value: Locale('de', 'DE'), child: Text("Deutsch")),
-                  DropdownMenuItem(value: Locale('en', 'US'), child: Text("English")),
-                  DropdownMenuItem(value: Locale('fr', 'FR'), child: Text("Français")),
-                  DropdownMenuItem(value: Locale('it', 'IT'), child: Text("Italiano")),
-                ],
-              )
-            ],
-          ),
-        ],
-      ),
-    );
+  Widget buildOverscrollIndicator(
+      BuildContext context, Widget child, ScrollableDetails details) {
+    return child; // kein Glow
   }
 }
diff --git a/zen_project1337/lib/models/mood_entries_provider.dart b/zen_project1337/lib/models/mood_entries_provider.dart
index 700c435..5fd1437 100644
--- a/zen_project1337/lib/models/mood_entries_provider.dart
+++ b/zen_project1337/lib/models/mood_entries_provider.dart
@@ -1,13 +1,216 @@
+// lib/models/mood_entries_provider.dart
+import 'dart:convert';
+import 'dart:math' as math;
+import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
-import 'mood_entry.dart';
+import '../data/mood_entry.dart';
+
+/// Provider für Mood-Tracking-Einträge.
+/// - Bewahrt deine bestehende API (add / upsert / update / remove …)
+/// - Helpers: batch(), containsDay(), inRange(), latestN(), averageScore(), streak(), heatmap()
+/// - Export/Import JSON
+typedef ScoreOf = int? Function(MoodEntry e);
 
 class MoodEntriesProvider with ChangeNotifier {
-  List<MoodEntry> _moodEntries = [];
+  final List<MoodEntry> _moodEntries = [];
+
+  /// Unmodifiable-Zugriff (verhindert versehentliche Mutationen)
+  List<MoodEntry> get entries => List.unmodifiable(_moodEntries);
+
+  /// Schnelle View ohne Kopie (nur lesen! nicht mutieren)
+  Iterable<MoodEntry> get view => _moodEntries;
 
-  List<MoodEntry> get moodEntries => _moodEntries;
+  int get length => _moodEntries.length;
+  bool get isEmpty => _moodEntries.isEmpty;
+  bool get isNotEmpty => _moodEntries.isNotEmpty;
 
+  /// Gibt es bereits einen Eintrag für den Tag?
+  bool containsDay(String dayTag) => _moodEntries.any((e) => e.dayTag == dayTag);
+
+  /// Neuen MoodEntry hinzufügen (wirft Exception, falls Tag schon existiert)
   void add(MoodEntry entry) {
+    if (containsDay(entry.dayTag)) {
+      throw Exception(
+        'Ein MoodEntry für diesen Tag existiert bereits! Nutze update() oder upsert().',
+      );
+    }
     _moodEntries.add(entry);
+    _sort();
+    notifyListeners();
+  }
+
+  /// Eintrag hinzufügen ODER überschreiben (upsert)
+  void upsert(MoodEntry entry) {
+    final idx = _moodEntries.indexWhere((e) => e.dayTag == entry.dayTag);
+    if (idx != -1) {
+      _moodEntries[idx] = entry;
+    } else {
+      _moodEntries.add(entry);
+    }
+    _sort();
+    notifyListeners();
+  }
+
+  /// MoodEntry eines Tages aktualisieren (wirft Exception, falls nicht vorhanden)
+  void update(MoodEntry entry) {
+    final idx = _moodEntries.indexWhere((e) => e.dayTag == entry.dayTag);
+    if (idx == -1) {
+      throw Exception('Kein MoodEntry für diesen Tag gefunden. Nutze add() oder upsert().');
+    }
+    _moodEntries[idx] = entry;
+    _sort();
+    notifyListeners();
+  }
+
+  /// Löscht einen MoodEntry (by Object)
+  void remove(MoodEntry entry) {
+    _moodEntries.remove(entry);
+    notifyListeners();
+  }
+
+  /// Löscht MoodEntry anhand dayTag (z. B. "2025-08-17")
+  void removeByDayTag(String dayTag) {
+    _moodEntries.removeWhere((e) => e.dayTag == dayTag);
+    notifyListeners();
+  }
+
+  /// Ersetzt ALLE MoodEntries (z. B. beim Sync oder Restore)
+  void setAll(List<MoodEntry> entries) {
+    _moodEntries
+      ..clear()
+      ..addAll(entries);
+    _sort();
+    notifyListeners();
+  }
+
+  /// Löscht alle MoodEntries
+  void clear() {
+    _moodEntries.clear();
     notifyListeners();
   }
-}
\ No newline at end of file
+
+  /// Eintrag für bestimmten Tag (oder null)
+  MoodEntry? entryForDay(String dayTag) {
+    final i = _moodEntries.indexWhere((e) => e.dayTag == dayTag);
+    return i == -1 ? null : _moodEntries[i];
+  }
+
+  /// Mehrere Operationen bündeln (ein notify, optional sort)
+  void batch(void Function() run, {bool sort = true, bool notify = true}) {
+    run();
+    if (sort) _sort();
+    if (notify) notifyListeners();
+  }
+
+  /// Einträge in Datumsspanne [start, end] (inklusive by default)
+  List<MoodEntry> inRange(DateTime start, DateTime end, {bool inclusive = true}) {
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    return _moodEntries.where((m) {
+      final t = m.timestamp;
+      return inclusive
+          ? (t.isAtSameMomentAs(s) || t.isAfter(s)) &&
+              (t.isAtSameMomentAs(e) || t.isBefore(e))
+          : t.isAfter(s) && t.isBefore(e);
+    }).toList(growable: false);
+  }
+
+  /// Neueste N Einträge (bereits nach timestamp sortiert)
+  List<MoodEntry> latestN(int n) {
+    if (n <= 0 || _moodEntries.isEmpty) return const [];
+    final end = math.min(n, _moodEntries.length);
+    return _moodEntries.sublist(0, end);
+  }
+
+  /// Durchschnitt über die letzten [days] Tage.
+  /// `scoreOf` darf null liefern → wird ignoriert.
+  double averageScore({required ScoreOf scoreOf, int days = 7}) {
+    if (days <= 0 || _moodEntries.isEmpty) return 0;
+    final now = DateTime.now();
+    final from = now.subtract(Duration(days: days - 1));
+    final window = inRange(DateTime(from.year, from.month, from.day), now);
+    if (window.isEmpty) return 0;
+
+    var sum = 0;
+    var count = 0;
+    for (final e in window) {
+      final s = scoreOf(e);
+      if (s != null) {
+        sum += s;
+        count++;
+      }
+    }
+    return count == 0 ? 0 : (sum / count);
+  }
+
+  /// Streak-Länge (wie viele Tage in Folge predicate==true)
+  int streak({required bool Function(MoodEntry e) predicate}) {
+    if (_moodEntries.isEmpty) return 0;
+
+    // nach dayTag gruppieren (ein Eintrag pro Tag)
+    final byDay = <String, MoodEntry>{};
+    for (final e in _moodEntries) {
+      byDay[e.dayTag] = e; // letzter gewinnt
+    }
+
+    var current = DateTime.now();
+    var streak = 0;
+
+    while (true) {
+      final tag = _toDayTag(current);
+      final hit = byDay[tag];
+      if (hit == null || !predicate(hit)) break;
+      streak++;
+      current = current.subtract(const Duration(days: 1));
+    }
+    return streak;
+  }
+
+  /// Heatmap-Data: Map<dayTag, score>
+  Map<String, int> heatmap({required int Function(MoodEntry e) scoreOf}) {
+    final out = <String, int>{};
+    for (final e in _moodEntries) {
+      out[e.dayTag] = scoreOf(e);
+    }
+    return out;
+  }
+
+  /// Export als JSON-String
+  String exportJsonString({
+    required Map<String, dynamic> Function(MoodEntry e) toJson,
+    bool pretty = true,
+  }) {
+    final list = _moodEntries.map(toJson).toList(growable: false);
+    return pretty
+        ? const JsonEncoder.withIndent('  ').convert(list)
+        : jsonEncode(list);
+  }
+
+  /// Import aus JSON-String
+  void importJsonString(
+    String jsonString, {
+    required MoodEntry Function(Map<String, dynamic> j) fromJson,
+    bool notify = true,
+  }) {
+    final raw = jsonDecode(jsonString);
+    if (raw is! List) throw const FormatException('JSON muss eine Liste sein');
+    final list = raw
+        .cast<Map>()
+        .map((j) => fromJson(j.cast<String, dynamic>()))
+        .toList();
+    setAll(list);
+    if (notify) notifyListeners();
+  }
+
+  // ---- intern ---------------------------------------------------------------
+
+  void _sort() => _moodEntries.sort((a, b) => b.timestamp.compareTo(a.timestamp));
+
+  /// Day-Tag (yyyy-mm-dd) aus Datum
+  String _toDayTag(DateTime dt) {
+    final d = dt.toLocal();
+    final mm = d.month.toString().padLeft(2, '0');
+    final dd = d.day.toString().padLeft(2, '0');
+    return '${d.year}-$mm-$dd';
+  }
+}
diff --git a/zen_project1337/lib/models/mood_entry.dart b/zen_project1337/lib/models/mood_entry.dart
deleted file mode 100644
index 22a25da..0000000
--- a/zen_project1337/lib/models/mood_entry.dart
+++ /dev/null
@@ -1,81 +0,0 @@
-// lib/data/mood_entry.dart
-
-import 'package:flutter/material.dart';
-
-/// ZenYourself: MoodEntry Model
-/// Modular, analysierbar, exportierbar, klinik-tauglich.
-class MoodEntry {
-  /// Zeitstempel des Eintrags (mit Zeitzone!)
-  final DateTime timestamp;
-
-  /// Stimmung als Skalenwert (z.B. 0–4, für Heatmap, Analytics, Statistiken)
-  final int moodScore;
-
-  /// User-Notiz oder Reflexion (optional)
-  final String? note;
-
-  /// Freies Feld: z.B. Voicefile-Pfad, Tags, Bild, Zusatzinfos (optional, flexibel)
-  final String? extra;
-
-  MoodEntry({
-    required this.timestamp,
-    required this.moodScore,
-    this.note,
-    this.extra,
-  });
-
-  /// Factory für JSON-Import/Export (lokal & Cloud)
-  factory MoodEntry.fromJson(Map<String, dynamic> json) => MoodEntry(
-        timestamp: DateTime.parse(json['timestamp'] as String),
-        moodScore: json['moodScore'] as int,
-        note: json['note'] as String?,
-        extra: json['extra'] as String?,
-      );
-
-  Map<String, dynamic> toJson() => {
-        'timestamp': timestamp.toIso8601String(),
-        'moodScore': moodScore,
-        'note': note,
-        'extra': extra,
-      };
-
-  /// Für Heatmap: Day-Tag als Schlüssel
-  String get dayTag =>
-      "${timestamp.year}-${timestamp.month.toString().padLeft(2, '0')}-${timestamp.day.toString().padLeft(2, '0')}";
-
-  /// Passende Farbe für Heatmap & Verlauf (Oxford-Farbwelt)
-  Color get moodColor {
-    switch (moodScore) {
-      case 0:
-        return const Color(0xFFB2B2B2); // Very low
-      case 1:
-        return const Color(0xFFFFD580); // Low
-      case 2:
-        return const Color(0xFFA5CBA1); // Neutral
-      case 3:
-        return const Color(0xFF5F7161); // Good
-      case 4:
-        return const Color(0xFF002147); // Very good (Oxford Blue)
-      default:
-        return Colors.grey.shade400;
-    }
-  }
-
-  /// Stimmung als schöner Label-Text
-  String get moodLabel {
-    switch (moodScore) {
-      case 0:
-        return "Tief";
-      case 1:
-        return "Niedrig";
-      case 2:
-        return "Neutral";
-      case 3:
-        return "Klar";
-      case 4:
-        return "Erfüllt";
-      default:
-        return "Unbekannt";
-    }
-  }
-}
diff --git a/zen_project1337/lib/models/question.dart b/zen_project1337/lib/models/question.dart
index c12a4b8..23e202e 100644
--- a/zen_project1337/lib/models/question.dart
+++ b/zen_project1337/lib/models/question.dart
@@ -1,158 +1,175 @@
-// lib/models/question.dart
-
 import 'package:flutter/foundation.dart';
 
-/// Model-Klasse für eine Reflexionsfrage oder Impulsfrage in ZenYourself.
-/// Zukunftssicher für KI, Community, Voting, individuelle Ziele.
-/// Champions League – Oxford-Ready.
-
+/// Guiding Question (nur für Leitfragen – nicht für Community-Fragen!)
+/// - Stabil & nullsafe
+/// - Optionales [createdAt] für Sortierung/Analytics (kein Pflichtfeld)
 @immutable
 class Question {
-  /// Eindeutige ID (UUID oder Hash)
   final String id;
-
-  /// Fragetext (kann Markdown, Platzhalter o.Ä. enthalten)
   final String text;
+  final bool isFollowUp;
 
-  /// Optionale Kategorie (z. B. "Achtsamkeit", "Beziehungen", "Ziele", ...)
-  final String? category;
-
-  /// Optionale Tags für smarte Suche, Empfehlungen oder Filter
-  final List<String>? tags;
-
-  /// Optional: Mehrere Antwortoptionen (Multiple-Choice, Umfrage)
-  final List<String>? options;
+  /// Optional: Erstellzeitpunkt (kann vom Backend kommen oder lokal gesetzt werden)
+  final DateTime? createdAt;
 
-  /// Frage-Priorität (0=Standard, 1=Favorit, 2=Community-Highlight, ...)
-  final int priority;
-
-  /// Flag: Systemfrage (true) oder aus Community (false)
-  final bool isSystem;
-
-  /// Optional: Ersteller (für Community/Clubs, z.B. UserID oder anonymisiert)
-  final String? author;
-
-  /// Optional: Wie oft schon verwendet/vorgeschlagen?
-  final int usageCount;
+  const Question({
+    required this.id,
+    required this.text,
+    this.isFollowUp = false,
+    this.createdAt,
+  });
+
+  /// Nullsichere Deserialisierung aus JSON/Map (mit Aliassen)
+  factory Question.fromJson(Map<String, dynamic> j) {
+    final dt = _parseDate(
+      j['createdAt'] ??
+          j['created_at'] ??
+          j['timestamp'] ??
+          j['ts'] ??
+          j['date'] ??
+          j['time'],
+    );
 
-  /// Zeitstempel (z.B. für Voting, Historie)
-  final DateTime createdAt;
+    final String rawId = (j['id'] ?? '').toString().trim();
+    final String text = (j['text'] ?? '').toString();
 
-  /// Optional: Voting Score (z.B. für Community Ranking)
-  final int votes;
+    // isFollowUp: akzeptiere diverse Schreibweisen
+    final bool isFollowUp = _readBool(
+          j['isFollowUp'] ??
+              j['is_follow_up'] ??
+              j['followUp'] ??
+              j['follow_up'],
+        ) ??
+        false;
 
-  /// Flag: Nur für Erwachsene/in bestimmten Modi anzeigen
-  final bool adultsOnly;
+    // Fallback-ID, falls leer (deterministisch & stabil)
+    final String id = rawId.isEmpty ? _fallbackId(dt, text) : rawId;
 
-  /// Optional: Anonymisierung/Export-Fähigkeit
-  final bool canExport;
+    return Question(
+      id: id,
+      text: text,
+      isFollowUp: isFollowUp,
+      createdAt: dt,
+    );
+  }
 
-  /// Freitext: Zusätzliche Hinweise oder Quellenangaben
-  final String? extra;
+  /// Alias
+  factory Question.fromMap(Map<String, dynamic> j) => Question.fromJson(j);
 
-  // ---------- KONSTRUKTOR ----------
-  // KEIN CONST, DAMIT DateTime.now() ZULÄSSIG IST!
-  Question({
-    required this.id,
-    required this.text,
-    this.category,
-    this.tags,
-    this.options,
-    this.priority = 0,
-    this.isSystem = true,
-    this.author,
-    this.usageCount = 0,
-    DateTime? createdAt,
-    this.votes = 0,
-    this.adultsOnly = false,
-    this.canExport = true,
-    this.extra,
-  }) : createdAt = createdAt ?? DateTime.now();
-
-  /// Von JSON (z.B. aus API oder Storage)
-  factory Question.fromJson(Map<String, dynamic> json) => Question(
-        id: json['id'].toString(),
-        text: json['text'] as String,
-        category: json['category'] as String?,
-        tags: (json['tags'] as List?)?.map((e) => e.toString()).toList(),
-        options: (json['options'] as List?)?.map((e) => e.toString()).toList(),
-        priority: json['priority'] is int ? json['priority'] : int.tryParse(json['priority']?.toString() ?? '0') ?? 0,
-        isSystem: json['isSystem'] ?? true,
-        author: json['author'] as String?,
-        usageCount: json['usageCount'] is int ? json['usageCount'] : int.tryParse(json['usageCount']?.toString() ?? '0') ?? 0,
-        createdAt: json['createdAt'] != null
-            ? DateTime.tryParse(json['createdAt'].toString()) ?? DateTime.now()
-            : DateTime.now(),
-        votes: json['votes'] is int ? json['votes'] : int.tryParse(json['votes']?.toString() ?? '0') ?? 0,
-        adultsOnly: json['adultsOnly'] ?? false,
-        canExport: json['canExport'] ?? true,
-        extra: json['extra'] as String?,
-      );
-
-  /// Für lokale/Cloud-Speicherung, Export etc.
-  Map<String, dynamic> toJson() => {
+  /// Serialisierung in Map (für JSON, Persistenz)
+  Map<String, dynamic> toJson() => <String, dynamic>{
         'id': id,
         'text': text,
-        'category': category,
-        'tags': tags,
-        'options': options,
-        'priority': priority,
-        'isSystem': isSystem,
-        'author': author,
-        'usageCount': usageCount,
-        'createdAt': createdAt.toIso8601String(),
-        'votes': votes,
-        'adultsOnly': adultsOnly,
-        'canExport': canExport,
-        'extra': extra,
+        'isFollowUp': isFollowUp,
+        if (createdAt != null) 'createdAt': createdAt!.toUtc().toIso8601String(),
       };
 
-  /// ----------- HILFSFUNKTIONEN ------------
+  /// Alias
+  Map<String, dynamic> toMap() => toJson();
 
-  bool get isCommunity => !isSystem;
-  bool get isMultipleChoice => options != null && options!.length > 1;
-
-  /// Sichtbar für alle?
-  bool get isVisible => !adultsOnly;
-
-  /// Zeige Kategorie „schön“ an
-  String get displayCategory => category?.isNotEmpty == true ? category! : "Allgemein";
-
-  // ----------- COPYWITH FÜR VOTING/ÄNDERUNGEN -----------
+  /// Kopie mit Änderungen (immutables Pattern)
   Question copyWith({
     String? id,
     String? text,
-    String? category,
-    List<String>? tags,
-    List<String>? options,
-    int? priority,
-    bool? isSystem,
-    String? author,
-    int? usageCount,
+    bool? isFollowUp,
     DateTime? createdAt,
-    int? votes,
-    bool? adultsOnly,
-    bool? canExport,
-    String? extra,
   }) {
     return Question(
       id: id ?? this.id,
       text: text ?? this.text,
-      category: category ?? this.category,
-      tags: tags ?? this.tags,
-      options: options ?? this.options,
-      priority: priority ?? this.priority,
-      isSystem: isSystem ?? this.isSystem,
-      author: author ?? this.author,
-      usageCount: usageCount ?? this.usageCount,
+      isFollowUp: isFollowUp ?? this.isFollowUp,
       createdAt: createdAt ?? this.createdAt,
-      votes: votes ?? this.votes,
-      adultsOnly: adultsOnly ?? this.adultsOnly,
-      canExport: canExport ?? this.canExport,
-      extra: extra ?? this.extra,
     );
   }
 
+  /// Hilfreich für Sortierung: neue zuerst (fallback auf id, wenn kein Datum)
+  int compareByRecency(Question other) {
+    final a = createdAt;
+    final b = other.createdAt;
+    if (a != null && b != null) {
+      final cmp = b.compareTo(a);
+      if (cmp != 0) return cmp;
+      // Tie-breaker: ID absteigend, damit stabil
+      return other.id.compareTo(id);
+    }
+    if (a == null && b == null) return other.id.compareTo(id);
+    return a == null ? 1 : -1; // Fragen ohne Datum ans Ende
+  }
+
+  /// Bequemer Validitätscheck
+  bool get isValid => id.isNotEmpty && text.trim().isNotEmpty;
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is Question &&
+          runtimeType == other.runtimeType &&
+          id == other.id &&
+          text == other.text &&
+          isFollowUp == other.isFollowUp &&
+          createdAt == other.createdAt;
+
   @override
-  String toString() => 'Question($id, $text)';
-}
\ No newline at end of file
+  int get hashCode => Object.hash(id, text, isFollowUp, createdAt);
+
+  @override
+  String toString() =>
+      'Question(id: $id, followUp: $isFollowUp, createdAt: $createdAt, text: $text)';
+
+  // ---- Helpers ----
+
+  /// Intuitive Bool-Deserialisierung (true/false, 1/0, yes/no, ja/nein, y/n)
+  static bool? _readBool(dynamic v) {
+    if (v == null) return null;
+    if (v is bool) return v;
+    if (v is num) return v != 0;
+    final s = v.toString().trim().toLowerCase();
+    if (s.isEmpty) return null;
+    if (const ['true', '1', 'yes', 'y', 'ja', 'wahr'].contains(s)) return true;
+    if (const ['false', '0', 'no', 'n', 'nein', 'falsch'].contains(s)) return false;
+    return null;
+  }
+
+  /// Akzeptiert ISO-String, Sekunden/Millis/Mikrosekunden seit Epoch, DateTime und numerische Strings
+  static DateTime? _parseDate(dynamic v) {
+    if (v == null) return null;
+    if (v is DateTime) return v.toUtc();
+    if (v is num) {
+      final n = v.toInt().abs();
+      if (n < 1000000000000) {
+        // Sekunden
+        return DateTime.fromMillisecondsSinceEpoch(v.toInt() * 1000, isUtc: true);
+      } else if (n < 10000000000000000) {
+        // Millisekunden
+        return DateTime.fromMillisecondsSinceEpoch(v.toInt(), isUtc: true);
+      } else {
+        // Mikrosekunden
+        return DateTime.fromMicrosecondsSinceEpoch(v.toInt(), isUtc: true);
+      }
+    }
+    if (v is String) {
+      final s = v.trim();
+      if (s.isEmpty) return null;
+      final digitsOnly = RegExp(r'^\d+$');
+      if (digitsOnly.hasMatch(s)) {
+        // numerischer String → wiederverwende num-Pfad
+        return _parseDate(int.parse(s));
+      }
+      try {
+        return DateTime.parse(s).toUtc();
+      } catch (_) {
+        return null;
+      }
+    }
+    return null;
+  }
+
+  /// Fallback-ID (deterministisch), falls keine ID geliefert wird
+  static String _fallbackId(DateTime? created, String text) {
+    final ts = (created ?? DateTime.now().toUtc()).millisecondsSinceEpoch;
+    return 'q_${ts}_${text.hashCode}';
+  }
+
+  /// Leeres Objekt (z. B. für Placeholders)
+  static const empty = Question(id: '', text: '', isFollowUp: false);
+}
diff --git a/zen_project1337/lib/models/reflection.dart b/zen_project1337/lib/models/reflection.dart
deleted file mode 100644
index eeb243c..0000000
--- a/zen_project1337/lib/models/reflection.dart
+++ /dev/null
@@ -1,99 +0,0 @@
-// lib/data/reflection.dart
-
-import 'package:flutter/material.dart';
-
-/// Eintrag für eine Selbstreflexion – Basis für KI-Dialog, Mood, Export.
-/// Unterstützt Text, Voice, KI-Antworten, Meta-Tags, Bewertung, Zeitverlauf.
-class ReflectionEntry {
-  /// Eindeutige ID (für Export, Analytics, Bearbeitung)
-  final String id;
-
-  /// Zeitstempel (Start der Reflektion)
-  final DateTime timestamp;
-
-  /// Optional: User-Text (direkt oder per Speech2Text aufgenommen)
-  final String? userInput;
-
-  /// Optional: Pfad zur Sprachaufnahme (lokal/Cloud)
-  final String? voiceFile;
-
-  /// Optional: KI-Antwort (z.B. reflektierende Gegenfrage)
-  final String? aiResponse;
-
-  /// Optional: Meta-Tags/Kategorien (Achtsamkeit, Selbstwert, Sinn etc.)
-  final List<String>? tags;
-
-  /// Optional: Nutzer-Mood/Emotion zum Zeitpunkt (Skala 0–4, Label, Emoji)
-  final int? moodScore;
-  final String? moodLabel;
-
-  /// Optional: KI-analysierte Emotion (Text/Sentiment)
-  final String? detectedEmotion;
-
-  /// Optional: Bewertung durch User (Hilfreich? Erkannt?)
-  final int? userRating; // z. B. 1–5 Sterne
-
-  /// Optional: App-Version/Device für Support
-  final String? appVersion;
-
-  ReflectionEntry({
-    required this.id,
-    required this.timestamp,
-    this.userInput,
-    this.voiceFile,
-    this.aiResponse,
-    this.tags,
-    this.moodScore,
-    this.moodLabel,
-    this.detectedEmotion,
-    this.userRating,
-    this.appVersion,
-  });
-
-  /// Factory für Import/Export (JSON, z. B. für Therapeuten-Export)
-  factory ReflectionEntry.fromJson(Map<String, dynamic> json) => ReflectionEntry(
-        id: json['id'] as String,
-        timestamp: DateTime.parse(json['timestamp']),
-        userInput: json['userInput'] as String?,
-        voiceFile: json['voiceFile'] as String?,
-        aiResponse: json['aiResponse'] as String?,
-        tags: (json['tags'] as List?)?.map((e) => e as String).toList(),
-        moodScore: json['moodScore'] as int?,
-        moodLabel: json['moodLabel'] as String?,
-        detectedEmotion: json['detectedEmotion'] as String?,
-        userRating: json['userRating'] as int?,
-        appVersion: json['appVersion'] as String?,
-      );
-
-  Map<String, dynamic> toJson() => {
-        'id': id,
-        'timestamp': timestamp.toIso8601String(),
-        'userInput': userInput,
-        'voiceFile': voiceFile,
-        'aiResponse': aiResponse,
-        'tags': tags,
-        'moodScore': moodScore,
-        'moodLabel': moodLabel,
-        'detectedEmotion': detectedEmotion,
-        'userRating': userRating,
-        'appVersion': appVersion,
-      };
-
-  /// UI-Helper: Farbe passend zur Mood/Emotion
-  Color get moodColor {
-    switch (moodScore) {
-      case 0:
-        return const Color(0xFFB2B2B2);
-      case 1:
-        return const Color(0xFFFFD580);
-      case 2:
-        return const Color(0xFFFFF6C3);
-      case 3:
-        return const Color(0xFFA5CBA1);
-      case 4:
-        return const Color(0xFF365486);
-      default:
-        return Colors.grey;
-    }
-  }
-}
diff --git a/zen_project1337/lib/models/reflection_entries_provider.dart b/zen_project1337/lib/models/reflection_entries_provider.dart
index 1d7ff4d..8553c8b 100644
--- a/zen_project1337/lib/models/reflection_entries_provider.dart
+++ b/zen_project1337/lib/models/reflection_entries_provider.dart
@@ -1,13 +1,652 @@
+// lib/models/reflection_entries_provider.dart
+//
+// ZenYourself — ReflectionEntriesProvider (v6.30, session-aware, rock-solid)
+// -------------------------------------------------------------------------
+// - Bewahrt die bestehende API (add/addAll/upsert/updateAt/updateById/remove/...)
+// - O(1)-Lookups via ID-Index; stabile Sortierung: timestamp DESC, tie-break by id DESC
+// - Batch-Commits (batch), koaleszierte Persistenz (_schedulePersist) ohne UI-Jank
+// - Robuste Restore-/Import-Pfade (keine Throws in die UI)
+// - Ephemerer Session-Flow (Thread-IDs, Turn-Zähler, recommend_end-Gating) getrennt vom Persist-Schema
+// - Komfort-APIs: upsertAll, updateManyById, applyTurn, purgeStaleSessions
+
+import 'dart:async';
+import 'dart:convert';
+import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
-import 'reflection.dart';
 
+import '../data/reflection_entry.dart';
+
+typedef ReflectionLoad = Future<List<ReflectionEntry>> Function();
+typedef ReflectionSave = Future<void> Function(List<ReflectionEntry> entries);
+
+/// Ephemerer Status einer laufenden Reflexions-Session (Thread)
+class ReflectionSessionState {
+  final String threadId;
+  final String? boundEntryId; // optional: zu welchem Entry gehört der Chat
+  final int turnIndex;
+  final int maxTurns;
+  final bool recommendEnd; // vom Worker vorgeschlagenes Session-Ende
+  final DateTime startedAt;
+
+  const ReflectionSessionState({
+    required this.threadId,
+    required this.turnIndex,
+    required this.maxTurns,
+    required this.recommendEnd,
+    required this.startedAt,
+    this.boundEntryId,
+  });
+
+  ReflectionSessionState copyWith({
+    String? threadId,
+    String? boundEntryId,
+    int? turnIndex,
+    int? maxTurns,
+    bool? recommendEnd,
+    DateTime? startedAt,
+  }) {
+    return ReflectionSessionState(
+      threadId: threadId ?? this.threadId,
+      boundEntryId: boundEntryId ?? this.boundEntryId,
+      turnIndex: turnIndex ?? this.turnIndex,
+      maxTurns: maxTurns ?? this.maxTurns,
+      recommendEnd: recommendEnd ?? this.recommendEnd,
+      startedAt: startedAt ?? this.startedAt,
+    );
+  }
+}
+
+/// Provider für ReflectionEntry-Objekte (Reflexionsfluss).
+/// - Dedupe by ID (letztes Vorkommen gewinnt)
+/// - O(1)-Lookups via Index
+/// - Batch-Updates & koaleszierte Persistenz (Save-Hook) stabil
+/// - Sortierung: timestamp DESC, tie-break by id DESC
+/// - Ephemer: Session-Flow (activeThreadId, Sessions-Map)
 class ReflectionEntriesProvider with ChangeNotifier {
-  List<Reflection> _reflections = [];
+  // Interner Speicher (DESC nach timestamp; bei Gleichstand: id DESC)
+  final List<ReflectionEntry> _items = [];
+
+  /// ID → Index (O(1)-Lookups). Nach Sortierungen neu aufgebaut.
+  final Map<String, int> _idIndex = {};
+
+  // Optional: Persistence Hooks
+  ReflectionLoad? _loadHook;
+  ReflectionSave? _saveHook;
+
+  // Koaleszierte Persistenz
+  bool _saveScheduled = false;
+
+  // Batch-Flag (mehrere Mutationen als ein Commit)
+  int _batchDepth = 0;
+  bool get _isBatching => _batchDepth > 0;
+
+  /// Ephemerer Session-Store
+  final Map<String, ReflectionSessionState> _sessionsByThread = {}; // threadId -> state
+  String? _activeThreadId; // aktuell im UI aktive Session
+
+  // ---------- Public Read-only Views ----------
+
+  List<ReflectionEntry> get reflections => List.unmodifiable(_items);
+  int get length => _items.length;
+  bool get isEmpty => _items.isEmpty;
+  bool get isNotEmpty => _items.isNotEmpty;
+
+  // ---------- Session (ephemer) ----------
+
+  /// Aktive Thread-ID für den Chat-Container (optional).
+  String? get activeThreadId => _activeThreadId;
+
+  /// Setzt/entfernt die aktive Thread-ID (UI-Fokus).
+  void setActiveThread(String? threadId, {bool notify = true}) {
+    _activeThreadId = threadId;
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// Liefert Session-State zu einer Thread-ID (oder null).
+  ReflectionSessionState? sessionByThread(String threadId) =>
+      _sessionsByThread[threadId];
+
+  /// Bindet eine Session an einen Entry (z. B. wenn der Chat zu einem Eintrag gehört).
+  void bindSessionToEntry({
+    required String threadId,
+    required String entryId,
+    bool notify = true,
+  }) {
+    final s = _sessionsByThread[threadId];
+    if (s == null) return;
+    _sessionsByThread[threadId] = s.copyWith(boundEntryId: entryId);
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// Erzeugt/aktualisiert Session-State (z. B. nach /reflect).
+  void upsertSession(ReflectionSessionState state, {bool notify = true}) {
+    _sessionsByThread[state.threadId] = state;
+    _activeThreadId ??= state.threadId;
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// Aktualisiert Turn & recommend_end (Flow-Gating).
+  void advanceSession({
+    required String threadId,
+    int? turnIndex,
+    bool? recommendEnd,
+    int? maxTurns,
+    bool notify = true,
+  }) {
+    final s = _sessionsByThread[threadId];
+    if (s == null) return;
+    _sessionsByThread[threadId] = s.copyWith(
+      turnIndex: turnIndex ?? (s.turnIndex + 1),
+      recommendEnd: recommendEnd ?? s.recommendEnd,
+      maxTurns: maxTurns ?? s.maxTurns,
+    );
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// Beendet eine Session (entfernt ephemeren State).
+  void endSession(String threadId, {bool notify = true}) {
+    _sessionsByThread.remove(threadId);
+    if (_activeThreadId == threadId) _activeThreadId = null;
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// True, wenn Session ein natürliches Ende empfiehlt (Buttons am Ende zeigen).
+  bool recommendEndFor(String threadId) =>
+      _sessionsByThread[threadId]?.recommendEnd ?? false;
+
+  /// Entfernt alte Sessions (z. B. nach App-Restart), Default 12h.
+  void purgeStaleSessions({
+    Duration maxAge = const Duration(hours: 12),
+    bool notify = true,
+  }) {
+    final now = DateTime.now();
+    _sessionsByThread.removeWhere((_, s) => now.difference(s.startedAt) > maxAge);
+    if (notify && !_isBatching) notifyListeners();
+  }
+
+  /// Session-Debug (optional)
+  Map<String, dynamic> debugSessions() => _sessionsByThread.map(
+        (k, v) => MapEntry(k, {
+          'entryId': v.boundEntryId,
+          'turnIndex': v.turnIndex,
+          'maxTurns': v.maxTurns,
+          'recommendEnd': v.recommendEnd,
+          'startedAt': v.startedAt.toIso8601String(),
+        }),
+      );
+
+  // ---------- Persistence (optional) ----------
+
+  Future<void> attachPersistence({
+    ReflectionLoad? load,
+    ReflectionSave? save,
+    bool loadNow = true,
+  }) async {
+    _loadHook = load;
+    _saveHook = save;
+    if (loadNow && _loadHook != null) {
+      await restore();
+    }
+  }
+
+  Future<void> restore() async {
+    if (_loadHook == null) return;
+    try {
+      final loaded = await _loadHook!.call();
+      replaceAll(loaded);
+    } catch (e, st) {
+      debugPrint('ReflectionEntriesProvider.restore error: $e\n$st');
+    }
+  }
+
+  void _schedulePersist() {
+    final saver = _saveHook;
+    if (saver == null || _saveScheduled) return;
+    _saveScheduled = true;
+    // Koaleszieren auf eine Microtask pro Mutations-„Welle“
+    scheduleMicrotask(() async {
+      _saveScheduled = false;
+      try {
+        await saver.call(List<ReflectionEntry>.unmodifiable(_items));
+      } catch (e, st) {
+        debugPrint('ReflectionEntriesProvider.save error: $e\n$st');
+      }
+    });
+  }
+
+  // ---------- CRUD ----------
+
+  /// Fügt einen Eintrag hinzu. Bei gleicher ID wird ersetzt (Dedupe).
+  void add(ReflectionEntry entry, {bool sort = true, bool notify = true}) {
+    final i = _idIndex[entry.id];
+    if (i == null) {
+      _items.add(entry);
+      _idIndex[entry.id] = _items.length - 1;
+    } else {
+      _items[i] = entry;
+    }
+    _afterMutation(sort: sort, notify: notify, persist: true);
+  }
+
+  /// Mehrere Einträge hinzufügen (Dedupe by ID, letztes Vorkommen gewinnt).
+  void addAll(Iterable<ReflectionEntry> entries, {bool sort = true, bool notify = true}) {
+    for (final e in entries) {
+      final i = _idIndex[e.id];
+      if (i == null) {
+        _items.add(e);
+        _idIndex[e.id] = _items.length - 1;
+      } else {
+        _items[i] = e;
+      }
+    }
+    _afterMutation(sort: sort, notify: notify, persist: true);
+  }
+
+  /// Upsert anhand der ID (existiert -> ersetzen, sonst hinzufügen).
+  void upsert(ReflectionEntry entry, {bool sort = true, bool notify = true}) {
+    add(entry, sort: sort, notify: notify);
+  }
+
+  /// Upsert für viele (stabil & schnell).
+  void upsertAll(Iterable<ReflectionEntry> entries, {bool sort = true, bool notify = true}) {
+    for (final e in entries) {
+      final i = _idIndex[e.id];
+      if (i == null) {
+        _items.add(e);
+        _idIndex[e.id] = _items.length - 1;
+      } else {
+        _items[i] = e;
+      }
+    }
+    _afterMutation(sort: sort, notify: notify, persist: true);
+  }
+
+  /// Aktualisiert per Index (bewahrt API).
+  /// Auto-Resort, wenn sich der timestamp ändert oder [sort] true ist.
+  void updateAt(
+    int index,
+    ReflectionEntry updated, {
+    bool sort = false,
+    bool notify = true,
+  }) {
+    if (index < 0 || index >= _items.length) return;
+    final prev = _items[index];
+    _items[index] = updated;
+    // ID kann sich (theoretisch) ändern → Index aktualisieren
+    if (prev.id != updated.id) {
+      _idIndex.remove(prev.id);
+      _idIndex[updated.id] = index;
+    }
+    final needsSort = sort || updated.timestamp != prev.timestamp;
+    _afterMutation(sort: needsSort, notify: notify, persist: true);
+  }
+
+  /// Aktualisiert per ID (liefert true, wenn gefunden).
+  /// Auto-Resort, wenn sich der timestamp ändert oder [sort] true ist.
+  bool updateById(
+    String id,
+    ReflectionEntry Function(ReflectionEntry) mutate, {
+    bool sort = false,
+    bool notify = true,
+  }) {
+    final i = _idIndex[id];
+    if (i == null) return false;
+    final prev = _items[i];
+    final next = mutate(prev);
+    _items[i] = next;
+    // Falls die ID mutiert wurde (ungewöhnlich), Index anpassen
+    if (next.id != id) {
+      _idIndex.remove(id);
+      _idIndex[next.id] = i;
+    }
+    final needsSort = sort || next.timestamp != prev.timestamp;
+    _afterMutation(sort: needsSort, notify: notify, persist: true);
+    return true;
+  }
+
+  /// Batch-Update vieler IDs.
+  void updateManyById(
+    Iterable<String> ids,
+    ReflectionEntry Function(ReflectionEntry) mutate, {
+    bool sort = false,
+    bool notify = true,
+  }) {
+    var changed = false;
+    for (final id in ids) {
+      final i = _idIndex[id];
+      if (i == null) continue;
+      final prev = _items[i];
+      final next = mutate(prev);
+      _items[i] = next;
+      if (prev.id != next.id) {
+        _idIndex.remove(prev.id);
+        _idIndex[next.id] = i;
+      }
+      changed = true;
+    }
+    if (changed) {
+      _afterMutation(sort: sort, notify: notify, persist: true);
+    }
+  }
+
+  /// Entfernt per Objekt.
+  void remove(ReflectionEntry entry, {bool notify = true}) {
+    final i = _idIndex[entry.id];
+    if (i == null) return;
+    _items.removeAt(i);
+    _reindex(); // Indizes verschoben → komplett neu aufbauen
+    _afterMutation(sort: false, notify: notify, persist: true);
+    // falls Session an diesen Entry gebunden war → trennen
+    _sessionsByThread.updateAll(
+      (_, s) => s.boundEntryId == entry.id ? s.copyWith(boundEntryId: null) : s,
+    );
+  }
+
+  /// Entfernt per ID (liefert true, wenn etwas entfernt wurde).
+  bool removeById(String id, {bool notify = true}) {
+    final i = _idIndex[id];
+    if (i == null) return false;
+    _items.removeAt(i);
+    _reindex();
+    _afterMutation(sort: false, notify: notify, persist: true);
+    _sessionsByThread.updateAll(
+      (_, s) => s.boundEntryId == id ? s.copyWith(boundEntryId: null) : s,
+    );
+    return true;
+  }
+
+  /// Entfernt via Prädikat (für Aufräumjobs).
+  void removeWhere(bool Function(ReflectionEntry) test, {bool notify = true}) {
+    if (_items.isEmpty) return;
+    _items.removeWhere(test);
+    _reindex();
+    _afterMutation(sort: false, notify: notify, persist: true);
+  }
+
+  /// Setzt komplette Liste (z. B. Import/Sync).
+  void setAll(List<ReflectionEntry> entries, {bool sort = true, bool notify = true}) {
+    replaceAll(entries, sort: sort, notify: notify);
+  }
+
+  /// Ersetzt alle Einträge. Dedupe by ID (letztes Vorkommen gewinnt) + Sort DESC.
+  void replaceAll(Iterable<ReflectionEntry> items, {bool sort = true, bool notify = true}) {
+    _items
+      ..clear()
+      ..addAll(_dedupById(items));
+    _reindex();
+    _afterMutation(sort: sort, notify: notify, persist: true);
+  }
+
+  /// Leert alle Einträge (Sessions bleiben unberührt).
+  void clear({bool notify = true}) {
+    _items.clear();
+    _idIndex.clear();
+    _afterMutation(sort: false, notify: notify, persist: true);
+  }
+
+  // ---------- Lookup ----------
+
+  ReflectionEntry? entryAt(int idx) {
+    if (idx < 0 || idx >= _items.length) return null;
+    return _items[idx];
+  }
+
+  ReflectionEntry? entryById(String id) {
+    final i = _idIndex[id];
+    if (i == null) return null;
+    if (i < 0 || i >= _items.length) return null;
+    return _items[i];
+  }
+
+  int indexOfId(String id) => _idIndex[id] ?? -1;
+
+  bool containsId(String id) => _idIndex.containsKey(id);
+
+  // ---------- Queries / Analytics ----------
+
+  /// Neueste N Einträge (setzt DESC-Sortierung voraus).
+  List<ReflectionEntry> latestN(int n) =>
+      n <= 0 ? const [] : _items.take(n).toList(growable: false);
+
+  /// Einträge in Datumsspanne [start, end] (inklusive).
+  /// Nutzt frühes Abbrechen, da _items DESC sortiert sind.
+  List<ReflectionEntry> inRange(DateTime start, DateTime end, {bool inclusive = true}) {
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    final out = <ReflectionEntry>[];
+
+    for (final x in _items) {
+      final t = x.timestamp;
+      final inLower = inclusive ? !t.isBefore(s) : t.isAfter(s);
+      final inUpper = inclusive ? !t.isAfter(e) : t.isBefore(e);
+      if (inLower && inUpper) { // <-- FIX: 'und' -> '&&'
+        out.add(x);
+      }
+      // Da DESC: sobald t < s (untere Grenze), können wir abbrechen
+      if (t.isBefore(s)) break;
+    }
+    return out;
+  }
+
+  /// Ø-MoodScore (0..4) über die letzten [days] Tage (auf 2 Nachkommastellen).
+  double averageMoodScore({int days = 7}) {
+    if (days <= 0 || _items.isEmpty) return 0;
+    final now = DateTime.now();
+    final from = DateTime(now.year, now.month, now.day).subtract(Duration(days: days - 1));
+    final list = inRange(from, now);
+    int sum = 0, count = 0;
+    for (final e in list) {
+      final s = e.moodScore;
+      if (s != null) {
+        sum += s;
+        count++;
+      }
+    }
+    if (count == 0) return 0;
+    return double.parse((sum / count).toStringAsFixed(2));
+  }
+
+  /// Tag-Häufigkeiten (für Filter/Chips).
+  Map<String, int> countByTag() {
+    final out = <String, int>{};
+    for (final e in _items) {
+      for (final t in e.tags) {
+        out[t] = (out[t] ?? 0) + 1;
+      }
+    }
+    return out;
+  }
 
-  List<Reflection> get reflections => _reflections;
+  /// Sparkline der letzten [days] Tage (Ø pro Tag; ältestes → neuestes).
+  List<double> moodSparkline({int days = 7}) {
+    if (days <= 0) return const [];
+    final now = DateTime.now();
+    final start = DateTime(now.year, now.month, now.day).subtract(Duration(days: days - 1));
 
-  void add(Reflection reflection) {
-    _reflections.add(reflection);
-    notifyListeners();
+    final bucketSum = <int, int>{}; // dayKey -> sum of moodScore
+    final bucketN = <int, int>{};   // dayKey -> count
+
+    for (final e in _items) {
+      final d = DateTime(e.timestamp.year, e.timestamp.month, e.timestamp.day);
+      if (d.isBefore(start)) break; // DESC
+      final key = d.year * 10000 + d.month * 100 + d.day;
+      final s = e.moodScore;
+      if (s == null) continue;
+      bucketSum[key] = (bucketSum[key] ?? 0) + s;
+      bucketN[key] = (bucketN[key] ?? 0) + 1;
+    }
+
+    final series = <double>[];
+    for (int i = 0; i < days; i++) {
+      final d = start.add(Duration(days: i));
+      final key = d.year * 10000 + d.month * 100 + d.day;
+      final n = bucketN[key] ?? 0;
+      final avg = n == 0 ? 0.0 : (bucketSum[key]! / n);
+      series.add(double.parse(avg.toStringAsFixed(2)));
+    }
+    return series;
+  }
+
+  // ---------- Import/Export ----------
+
+  /// Export als JSON (nutzt ReflectionEntry.toJson()).
+  String exportJsonString({bool pretty = true}) {
+    final data = _items.map((e) => e.toJson()).toList(growable: false);
+    return pretty
+        ? const JsonEncoder.withIndent('  ').convert(data)
+        : jsonEncode(data);
+  }
+
+  /// Import aus JSON-String (ersetzen).
+  void importJsonString(String jsonString, {bool sort = true, bool notify = true}) {
+    try {
+      final raw = jsonDecode(jsonString);
+      if (raw is! List) {
+        throw const FormatException('Reflection JSON muss eine Liste sein.');
+      }
+      final list = raw
+          .cast<Map>()
+          .map((j) => ReflectionEntry.fromJson(j.cast<String, dynamic>()))
+          .toList();
+      replaceAll(list, sort: sort, notify: notify);
+    } catch (e) {
+      // bewusst keine Exception weiterwerfen – Provider soll die UI nicht crashen lassen
+      debugPrint('Reflection import failed: $e');
+    }
   }
-}
\ No newline at end of file
+
+  /// Batch-Update: fasst mehrere Mutationen zusammen.
+  void batch(void Function() run, {bool sort = true, bool notify = true}) {
+    _batchDepth++;
+    try {
+      run();
+    } finally {
+      _batchDepth--;
+      if (!_isBatching) {
+        _afterMutation(sort: sort, notify: notify, persist: true);
+      }
+    }
+  }
+
+  // ---------- AI-Turn-Anbindung (ohne Model-Zwang) ----------
+
+  /// Wendet ein AI-Turn-Ergebnis auf einen bestehenden Entry an.
+  /// *Mapper* kapselt die konkrete Feldbelegung, damit dieses Provider
+  /// unabhängig vom genauen ReflectionEntry-Schema bleibt.
+  bool applyTurn({
+    required String entryId,
+    required ReflectionTurnLike turn,
+    required ReflectionEntry Function(ReflectionEntry old, ReflectionTurnLike turn) mapper,
+    bool notify = true,
+  }) {
+    final ok = updateById(
+      entryId,
+      (prev) => mapper(prev, turn),
+      sort: true,
+      notify: notify,
+    );
+    if (ok) {
+      // Session-Info ephemer nachführen
+      final threadId = turn.sessionThreadId ?? (turn.meta['thread_id']?.toString() ?? '');
+      if (threadId.isNotEmpty) {
+        upsertSession(
+          ReflectionSessionState(
+            threadId: threadId,
+            boundEntryId: entryId,
+            turnIndex: turn.sessionTurnIndex ?? 0,
+            maxTurns: turn.sessionMaxTurns ?? 3,
+            recommendEnd: turn.recommendEnd ?? false,
+            startedAt: DateTime.now(),
+          ),
+          notify: notify,
+        );
+      }
+    }
+    return ok;
+  }
+
+  // ---------- intern ----------
+
+  void _afterMutation({required bool sort, required bool notify, required bool persist}) {
+    if (sort) {
+      _items.sort((a, b) {
+        final c = b.timestamp.compareTo(a.timestamp);
+        if (c != 0) return c;
+        // stabiler Tie-Break, damit die Reihenfolge deterministisch bleibt
+        return b.id.compareTo(a.id);
+      });
+      _reindex();
+    } else if (_idIndex.length != _items.length) {
+      // Safety: falls Index out-of-sync (z. B. removeWhere)
+      _reindex();
+    }
+    if (!_isBatching) {
+      if (notify) notifyListeners();
+      if (persist) _schedulePersist();
+    }
+  }
+
+  void _reindex() {
+    _idIndex
+      ..clear()
+      ..addEntries(Iterable.generate(
+        _items.length,
+        (i) => MapEntry(_items[i].id, i),
+      ));
+  }
+
+  /// Dedupe Liste anhand der ID (letztes Vorkommen gewinnt).
+  List<ReflectionEntry> _dedupById(Iterable<ReflectionEntry> items) {
+    final map = <String, ReflectionEntry>{};
+    for (final e in items) {
+      map[e.id] = e;
+    }
+    final list = map.values.toList();
+    list.sort((a, b) {
+      final c = b.timestamp.compareTo(a.timestamp);
+      if (c != 0) return c;
+      return b.id.compareTo(a.id);
+    });
+    return list;
+  }
+}
+
+// ===========================================================================
+//  Lightweight „Turn“-Interface (damit Provider entkoppelt von API-Modellen bleibt)
+// ===========================================================================
+class ReflectionTurnLike {
+  /// Primärfrage aus /reflect (UI-Primary)
+  final String outputText;
+
+  /// Optional: kurzer Spiegel-Satz
+  final String? mirror;
+
+  /// 0–2 kurze Kontext-Phrasen
+  final List<String> context;
+
+  /// 0–2 Mini-Fragen
+  final List<String> followups;
+
+  /// Flow-Marker
+  final bool? recommendEnd;
+
+  /// Session-Metadaten
+  final String? sessionThreadId;
+  final int? sessionTurnIndex;
+  final int? sessionMaxTurns;
+
+  /// Zusatz-Meta (frei)
+  final Map<String, dynamic> meta;
+
+  const ReflectionTurnLike({
+    required this.outputText,
+    this.mirror,
+    this.context = const [],
+    this.followups = const [],
+    this.recommendEnd,
+    this.sessionThreadId,
+    this.sessionTurnIndex,
+    this.sessionMaxTurns,
+    this.meta = const {},
+  });
+}
diff --git a/zen_project1337/lib/models/user.dart b/zen_project1337/lib/models/user.dart
index 69d2389..73acd08 100644
--- a/zen_project1337/lib/models/user.dart
+++ b/zen_project1337/lib/models/user.dart
@@ -1,50 +1,89 @@
-// lib/data/user.dart
-
+import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 
-/// ZenYourself User Model – Maximale Flexibilität & Privacy.
-/// Unterstützt Multi-Profile, anonym, Pro-Status, Preferences & Statistiken.
+/// ZenYourself User Model — Oxford Safety Edition
+/// ------------------------------------------------
+/// Fokus: maximale Privatsphäre & psychische Sicherheit.
+/// - Privacy-by-default (lokal, keine Telemetrie, sensible Filter an)
+/// - Robuste (de-)Serialisierung, defensive Fallbacks
+/// - Redaction-/Export-Hilfen (PII entfernen)
+/// - Sanfte UI-Preferences (Trigger-Filter, weniger Druck)
+@immutable
 class ZenUser {
-  /// Eindeutige Nutzer-ID (lokal generiert, NICHT Cloud!)
+  /// Eindeutige Nutzer-ID (lokal generiert, niemals öffentlich).
   final String id;
 
-  /// Angezeigter Name (kann Pseudonym oder Emoji sein)
+  /// Anzeigename (Pseudonym empfohlen; keine E-Mail-Adresse).
   final String displayName;
 
-  /// Optional: Avatar/Icon/Pic für Personalisierung (Pfad, Netzwerk oder Asset)
+  /// Optional: Avatar-Pfad (Asset/Datei/Netz).
   final String? avatarPath;
 
-  /// Account-Typ: "anonym", "local", "oauth", "therapist"
+  /// Account-Typ: 'anonym' | 'local' | 'oauth' | 'therapist'
   final String accountType;
 
-  /// Pro-User? (Premium/Lizenz aktiviert)
+  /// Pro-/Lizenz-Status.
   final bool isPro;
 
-  /// Datenschutz: Soll die App ALLE Daten lokal speichern (Default: true)?
+  /// Strikter Datenschutzmodus: alles lokal, kein Sync.
   final bool localOnly;
 
-  /// Bevorzugte Sprache (z. B. "de", "en")
+  /// Bevorzugte Sprache (z. B. 'de', 'en').
   final String? preferredLanguage;
 
-  /// Accessibility-Preferences
+  /// A11y.
   final bool colorBlindMode;
   final bool largeTextMode;
 
-  /// Statistiken – z. B. Anzahl Reflektionen, Mood-Einträge
+  /// Nutzungsstatistik (aggregiert, unsensibel).
   final int totalReflections;
   final int totalMoodEntries;
 
-  /// Export-Settings: Will der Nutzer sein Journal als PDF/JSON exportieren?
+  /// Darf der User Export durchführen?
   final bool allowExport;
 
-  /// Letzter Login oder App-Start
+  /// Letzter App-Start/-Login.
   final DateTime lastActive;
 
-  ZenUser({
+  // ======================
+  //  Safety & Privacy Flags
+  // ======================
+
+  /// Zeige Hinweise auf Krisen-Hotlines/Notfallressourcen.
+  final bool showCrisisResources;
+
+  /// Inhaltliche Trigger filtern/entschärfen (sanfte Wortwahl).
+  final bool sensitiveContentFilter;
+
+  /// Gamification (Streaks/Badges) ausblenden → weniger Druck.
+  final bool hideGamification;
+
+  /// Stille Benachrichtigungen/Reminder erlauben?
+  final bool allowPushReminders;
+
+  /// Einwilligung zur anonymisierten Diagnostik/Telemetry (opt-in).
+  final bool consentAnalytics;
+
+  /// Einwilligung für AI-gestützte Vorschläge (lokal/Backend).
+  final bool consentAiSuggestions;
+
+  /// Aufbewahrungstage für Inhalte (0 = keine Begrenzung).
+  final int retentionDays;
+
+  /// Ob alte Inhalte nach [retentionDays] automatisch entfernt werden.
+  final bool autoDeleteOldEntries;
+
+  /// Region/ISO-Code für lokale Hilfsangebote (z. B. 'DE', 'AT', 'CH').
+  final String? regionCode;
+
+  /// Version der geltenden Datenschutz-/Sicherheitsrichtlinie.
+  final String privacyVersion;
+
+  const ZenUser({
     required this.id,
     required this.displayName,
     this.avatarPath,
-    this.accountType = "anonym",
+    this.accountType = 'anonym',
     this.isPro = false,
     this.localOnly = true,
     this.preferredLanguage,
@@ -54,27 +93,51 @@ class ZenUser {
     this.totalMoodEntries = 0,
     this.allowExport = true,
     required this.lastActive,
+
+    // Safety & Privacy (Defaults bewusst konservativ)
+    this.showCrisisResources = true,
+    this.sensitiveContentFilter = true,
+    this.hideGamification = true,
+    this.allowPushReminders = false,
+    this.consentAnalytics = false,
+    this.consentAiSuggestions = true,
+    this.retentionDays = 0, // 0 = unbegrenzt (keine Überraschungs-Löschungen)
+    this.autoDeleteOldEntries = false,
+    this.regionCode,
+    this.privacyVersion = '1.0',
   });
 
-  /// Factory: JSON import (für lokale Profile/Settings)
+  // ===========
+  //  JSON I/O
+  // ===========
   factory ZenUser.fromJson(Map<String, dynamic> json) => ZenUser(
-        id: json['id'] as String,
-        displayName: json['displayName'] as String,
-        avatarPath: json['avatarPath'] as String?,
-        accountType: json['accountType'] as String? ?? "anonym",
-        isPro: json['isPro'] as bool? ?? false,
-        localOnly: json['localOnly'] as bool? ?? true,
-        preferredLanguage: json['preferredLanguage'] as String?,
-        colorBlindMode: json['colorBlindMode'] as bool? ?? false,
-        largeTextMode: json['largeTextMode'] as bool? ?? false,
-        totalReflections: json['totalReflections'] as int? ?? 0,
-        totalMoodEntries: json['totalMoodEntries'] as int? ?? 0,
-        allowExport: json['allowExport'] as bool? ?? true,
-        lastActive: DateTime.parse(json['lastActive'] as String),
+        id: (json['id'] ?? '').toString(),
+        displayName: _sanitizeName((json['displayName'] ?? 'Gast').toString()),
+        avatarPath: _toNullableString(json['avatarPath']),
+        accountType: (json['accountType'] ?? 'anonym').toString(),
+        isPro: _toBool(json['isPro'], fallback: false),
+        localOnly: _toBool(json['localOnly'], fallback: true),
+        preferredLanguage: _toNullableString(json['preferredLanguage']),
+        colorBlindMode: _toBool(json['colorBlindMode'], fallback: false),
+        largeTextMode: _toBool(json['largeTextMode'], fallback: false),
+        totalReflections: _toInt(json['totalReflections'], fallback: 0),
+        totalMoodEntries: _toInt(json['totalMoodEntries'], fallback: 0),
+        allowExport: _toBool(json['allowExport'], fallback: true),
+        lastActive: _parseDate(json['lastActive']) ?? DateTime.now(),
+
+        showCrisisResources: _toBool(json['showCrisisResources'], fallback: true),
+        sensitiveContentFilter: _toBool(json['sensitiveContentFilter'], fallback: true),
+        hideGamification: _toBool(json['hideGamification'], fallback: true),
+        allowPushReminders: _toBool(json['allowPushReminders'], fallback: false),
+        consentAnalytics: _toBool(json['consentAnalytics'], fallback: false),
+        consentAiSuggestions: _toBool(json['consentAiSuggestions'], fallback: true),
+        retentionDays: _toInt(json['retentionDays'], fallback: 0),
+        autoDeleteOldEntries: _toBool(json['autoDeleteOldEntries'], fallback: false),
+        regionCode: _toNullableString(json['regionCode']),
+        privacyVersion: (json['privacyVersion'] ?? '1.0').toString(),
       );
 
-  /// Export as JSON (lokal oder für Backup)
-  Map<String, dynamic> toJson() => {
+  Map<String, dynamic> toJson() => <String, dynamic>{
         'id': id,
         'displayName': displayName,
         'avatarPath': avatarPath,
@@ -87,37 +150,300 @@ class ZenUser {
         'totalReflections': totalReflections,
         'totalMoodEntries': totalMoodEntries,
         'allowExport': allowExport,
-        'lastActive': lastActive.toIso8601String(),
-      };
+        'lastActive': lastActive.toUtc().toIso8601String(),
+        'showCrisisResources': showCrisisResources,
+        'sensitiveContentFilter': sensitiveContentFilter,
+        'hideGamification': hideGamification,
+        'allowPushReminders': allowPushReminders,
+        'consentAnalytics': consentAnalytics,
+        'consentAiSuggestions': consentAiSuggestions,
+        'retentionDays': retentionDays,
+        'autoDeleteOldEntries': autoDeleteOldEntries,
+        'regionCode': regionCode,
+        'privacyVersion': privacyVersion,
+      }..removeWhere((_, v) => v == null);
 
-  /// Helper: Gibt einen passenden IconData für das Profil (z. B. in der UI)
+  /// Reduzierte, PII-arme Repräsentation (für Support/Telemetry).
+  Map<String, dynamic> toRedactedJson() => <String, dynamic>{
+        'id': _hashId(id),
+        'accountType': accountType,
+        'isPro': isPro,
+        'localOnly': localOnly,
+        'colorBlindMode': colorBlindMode,
+        'largeTextMode': largeTextMode,
+        'totalReflections': totalReflections,
+        'totalMoodEntries': totalMoodEntries,
+        'showCrisisResources': showCrisisResources,
+        'sensitiveContentFilter': sensitiveContentFilter,
+        'hideGamification': hideGamification,
+        'allowPushReminders': allowPushReminders,
+        'consentAnalytics': consentAnalytics,
+        'consentAiSuggestions': consentAiSuggestions,
+        'retentionDays': retentionDays,
+        'autoDeleteOldEntries': autoDeleteOldEntries,
+        'regionCode': regionCode,
+        'privacyVersion': privacyVersion,
+      }..removeWhere((_, v) => v == null);
+
+  // ===========
+  //  UI Helpers
+  // ===========
   IconData get icon {
     switch (accountType) {
-      case "therapist":
+      case 'therapist':
         return Icons.health_and_safety;
-      case "oauth":
+      case 'oauth':
         return Icons.verified_user;
-      case "local":
+      case 'local':
         return Icons.person;
-      case "anonym":
       default:
         return Icons.emoji_nature;
     }
   }
 
-  /// Ein Emoji oder Label für schnelle UI-Anzeige
   String get emoji {
-    if (accountType == "therapist") return "🧑‍⚕️";
-    if (isPro) return "🌟";
-    if (localOnly) return "🔒";
-    return "🙂";
+    if (accountType == 'therapist') return '🧑‍⚕️';
+    if (isPro) return '🌟';
+    if (localOnly) return '🔒';
+    return '🙂';
   }
 
-  /// Anzeige, wie lange aktiv (für Motivations-UI)
   String get lastActiveFormatted {
     final diff = DateTime.now().difference(lastActive);
-    if (diff.inDays > 1) return "${diff.inDays} Tage aktiv";
-    if (diff.inHours > 1) return "${diff.inHours} Stunden aktiv";
-    return "Gerade aktiv";
+    if (diff.inDays >= 1) return '${diff.inDays} Tage aktiv';
+    if (diff.inHours >= 1) return '${diff.inHours} Std. aktiv';
+    if (diff.inMinutes >= 1) return '${diff.inMinutes} Min. aktiv';
+    return 'Gerade aktiv';
+  }
+
+  /// Initialen (für Avatar mit Buchstaben).
+  String get initials {
+    final n = displayName.trim();
+    if (n.isEmpty || n.toLowerCase() == 'gast') return 'G';
+    final parts = n.split(RegExp(r'\s+')).where((p) => p.isNotEmpty).toList();
+    if (parts.length == 1) return parts.first.characters.first.toUpperCase();
+    return (parts.first.characters.first + parts.last.characters.first).toUpperCase();
+  }
+
+  /// Ist das Profil effektiv anonym?
+  bool get isAnonymous => accountType == 'anonym' || localOnly == true;
+
+  /// Sollten Einträge nach Aufbewahrungszeit entfernt werden?
+  bool shouldAutoDelete() => autoDeleteOldEntries && retentionDays > 0;
+
+  /// Zeitpunkt, ab dem Inhalte verfallen (oder null, wenn unbegrenzt).
+  DateTime? deleteBefore(DateTime now) {
+    if (!shouldAutoDelete()) return null;
+    return now.subtract(Duration(days: retentionDays));
+  }
+
+  /// lastActive „antippen“ (ohne andere Felder zu verändern).
+  ZenUser touchActive() => copyWith(lastActive: DateTime.now());
+
+  // ===========
+  //  Copy & Eq
+  // ===========
+  ZenUser copyWith({
+    String? id,
+    String? displayName,
+    String? avatarPath,
+    String? accountType,
+    bool? isPro,
+    bool? localOnly,
+    String? preferredLanguage,
+    bool? colorBlindMode,
+    bool? largeTextMode,
+    int? totalReflections,
+    int? totalMoodEntries,
+    bool? allowExport,
+    DateTime? lastActive,
+    bool? showCrisisResources,
+    bool? sensitiveContentFilter,
+    bool? hideGamification,
+    bool? allowPushReminders,
+    bool? consentAnalytics,
+    bool? consentAiSuggestions,
+    int? retentionDays,
+    bool? autoDeleteOldEntries,
+    String? regionCode,
+    String? privacyVersion,
+  }) {
+    return ZenUser(
+      id: id ?? this.id,
+      displayName: displayName != null ? _sanitizeName(displayName) : this.displayName,
+      avatarPath: avatarPath ?? this.avatarPath,
+      accountType: accountType ?? this.accountType,
+      isPro: isPro ?? this.isPro,
+      localOnly: localOnly ?? this.localOnly,
+      preferredLanguage: preferredLanguage ?? this.preferredLanguage,
+      colorBlindMode: colorBlindMode ?? this.colorBlindMode,
+      largeTextMode: largeTextMode ?? this.largeTextMode,
+      totalReflections: totalReflections ?? this.totalReflections,
+      totalMoodEntries: totalMoodEntries ?? this.totalMoodEntries,
+      allowExport: allowExport ?? this.allowExport,
+      lastActive: lastActive ?? this.lastActive,
+      showCrisisResources: showCrisisResources ?? this.showCrisisResources,
+      sensitiveContentFilter: sensitiveContentFilter ?? this.sensitiveContentFilter,
+      hideGamification: hideGamification ?? this.hideGamification,
+      allowPushReminders: allowPushReminders ?? this.allowPushReminders,
+      consentAnalytics: consentAnalytics ?? this.consentAnalytics,
+      consentAiSuggestions: consentAiSuggestions ?? this.consentAiSuggestions,
+      retentionDays: retentionDays ?? this.retentionDays,
+      autoDeleteOldEntries: autoDeleteOldEntries ?? this.autoDeleteOldEntries,
+      regionCode: regionCode ?? this.regionCode,
+      privacyVersion: privacyVersion ?? this.privacyVersion,
+    );
+  }
+
+  @override
+  String toString() => 'ZenUser($id, $displayName)';
+
+  @override
+  bool operator ==(Object other) =>
+      identical(this, other) ||
+      other is ZenUser &&
+          runtimeType == other.runtimeType &&
+          id == other.id &&
+          displayName == other.displayName &&
+          avatarPath == other.avatarPath &&
+          accountType == other.accountType &&
+          isPro == other.isPro &&
+          localOnly == other.localOnly &&
+          preferredLanguage == other.preferredLanguage &&
+          colorBlindMode == other.colorBlindMode &&
+          largeTextMode == other.largeTextMode &&
+          totalReflections == other.totalReflections &&
+          totalMoodEntries == other.totalMoodEntries &&
+          allowExport == other.allowExport &&
+          lastActive == other.lastActive &&
+          showCrisisResources == other.showCrisisResources &&
+          sensitiveContentFilter == other.sensitiveContentFilter &&
+          hideGamification == other.hideGamification &&
+          allowPushReminders == other.allowPushReminders &&
+          consentAnalytics == other.consentAnalytics &&
+          consentAiSuggestions == other.consentAiSuggestions &&
+          retentionDays == other.retentionDays &&
+          autoDeleteOldEntries == other.autoDeleteOldEntries &&
+          regionCode == other.regionCode &&
+          privacyVersion == other.privacyVersion;
+
+  @override
+  int get hashCode => Object.hashAll([
+        id,
+        displayName,
+        avatarPath,
+        accountType,
+        isPro,
+        localOnly,
+        preferredLanguage,
+        colorBlindMode,
+        largeTextMode,
+        totalReflections,
+        totalMoodEntries,
+        allowExport,
+        lastActive.millisecondsSinceEpoch,
+        showCrisisResources,
+        sensitiveContentFilter,
+        hideGamification,
+        allowPushReminders,
+        consentAnalytics,
+        consentAiSuggestions,
+        retentionDays,
+        autoDeleteOldEntries,
+        regionCode,
+        privacyVersion,
+      ]);
+
+  // ===============
+  //  Static Helpers
+  // ===============
+  static String _sanitizeName(String name) {
+    final n = name.trim();
+    if (n.isEmpty) return 'Gast';
+    // Falls E-Mail/Telefon hereinschneit → anonymisieren
+    if (RegExp(r'@').hasMatch(n) || RegExp(r'^\+?\d').hasMatch(n)) {
+      return 'Gast';
+    }
+    return n;
   }
+
+  static String? _toNullableString(dynamic v) {
+    if (v == null) return null;
+    final s = v.toString().trim();
+    return s.isEmpty ? null : s;
+  }
+
+  static bool _toBool(dynamic v, {required bool fallback}) {
+    if (v is bool) return v;
+    if (v is num) return v != 0;
+    if (v is String) {
+      final s = v.trim().toLowerCase();
+      return s == 'true' || s == '1' || s == 'yes';
+    }
+    return fallback;
+  }
+
+  static int _toInt(dynamic v, {required int fallback}) {
+    if (v is int) return v;
+    if (v is double) return v.toInt();
+    if (v is String) {
+      final p = int.tryParse(v);
+      if (p != null) return p;
+    }
+    return fallback;
+  }
+
+  /// Unterstützt ISO-8601 String / Epoch (ms) / DateTime.
+  static DateTime? _parseDate(dynamic v) {
+    if (v == null) return null;
+    if (v is DateTime) return v;
+    if (v is int) {
+      // Epoch (ms oder s → Heuristik)
+      if (v > 1000000000000) {
+        return DateTime.fromMillisecondsSinceEpoch(v, isUtc: true);
+      } else {
+        return DateTime.fromMillisecondsSinceEpoch(v * 1000, isUtc: true);
+      }
+    }
+    if (v is String) {
+      try {
+        return DateTime.parse(v);
+      } catch (_) {
+        return null;
+      }
+    }
+    return null;
+  }
+
+  /// Hash der ID (billig & ausreichend für Redaction-Zwecke).
+  static String _hashId(String id) {
+    // einfache FNV-1a Variante
+    int hash = 0x811C9DC5;
+    for (final codeUnit in id.codeUnits) {
+      hash ^= codeUnit;
+      hash = (hash * 0x01000193) & 0xFFFFFFFF;
+    }
+    return hash.toRadixString(16).padLeft(8, '0');
+  }
+
+  /// Bequemer Erzeuger eines anonymen Default-Nutzers.
+  static ZenUser anonymous({required String id, String? regionCode}) => ZenUser(
+        id: id,
+        displayName: 'Gast',
+        accountType: 'anonym',
+        localOnly: true,
+        isPro: false,
+        allowExport: true,
+        lastActive: DateTime.now(),
+        showCrisisResources: true,
+        sensitiveContentFilter: true,
+        hideGamification: true,
+        allowPushReminders: false,
+        consentAnalytics: false,
+        consentAiSuggestions: true,
+        retentionDays: 0,
+        autoDeleteOldEntries: false,
+        regionCode: regionCode,
+        privacyVersion: '1.0',
+      );
 }
diff --git a/zen_project1337/lib/models/user_profile_provider.dart b/zen_project1337/lib/models/user_profile_provider.dart
index f34bf56..2488a37 100644
--- a/zen_project1337/lib/models/user_profile_provider.dart
+++ b/zen_project1337/lib/models/user_profile_provider.dart
@@ -1,13 +1,146 @@
 import 'package:flutter/material.dart';
-import 'user.dart';
+import 'package:zenyourself/models/user.dart';
 
+/// UserProfileProvider
+/// -------------------
+/// Globale User-State-Verwaltung für ZenYourself:
+/// - Beibehalt deiner API (displayName, userId, isLoggedIn, setUser, updateUser, clearUser)
+/// - Ergänzt: optionale Persistenz-Callbacks (load/save/clear), async init(),
+///   Loading-Flag, sichere Updates, Upsert-Pattern, nützliche UI-Helper.
 class UserProfileProvider with ChangeNotifier {
-  User? _user;
+  ZenUser? _user;
+  bool _loading = false;
+  DateTime? _lastUpdate;
 
-  User? get user => _user;
+  /// Optionale Persistenz-Callbacks (frei injizierbar)
+  final Future<ZenUser?> Function()? _loadUserFn;
+  final Future<void> Function(ZenUser user)? _saveUserFn;
+  final Future<void> Function()? _clearUserFn;
 
-  void setUser(User user) {
+  /// Konstruktor:
+  /// - [initialUser] für sofortigen Start (z. B. nach Splash/Restore)
+  /// - [loadUserFn]/[saveUserFn]/[clearUserFn] für Persistenz (optional)
+  UserProfileProvider({
+    ZenUser? initialUser,
+    Future<ZenUser?> Function()? loadUserFn,
+    Future<void> Function(ZenUser user)? saveUserFn,
+    Future<void> Function()? clearUserFn,
+  })  : _user = initialUser,
+        _loadUserFn = loadUserFn,
+        _saveUserFn = saveUserFn,
+        _clearUserFn = clearUserFn;
+
+  // -------- State / Status --------
+
+  /// Aktuelles Profil (null, wenn nicht eingeloggt)
+  ZenUser? get user => _user;
+
+  /// Ist ein User vorhanden?
+  bool get isLoggedIn => _user != null;
+
+  /// Lädt aktuell?
+  bool get isLoading => _loading;
+
+  /// Letztes Änderungsdatum (lokal)
+  DateTime? get lastUpdate => _lastUpdate;
+
+  /// Anzeigename (Fallback: "Gast")
+  String get displayName {
+    final name = _user?.displayName?.trim();
+    return (name != null && name.isNotEmpty) ? name : 'Gast';
+  }
+
+  /// User-ID (Fallback: "unknown")
+  String get userId => _user?.id ?? 'unknown';
+
+  /// Optionales Profilbild-Asset (solange nicht im Model)
+  String get profileImage => 'assets/user_default.png';
+
+  /// Kürzel/Initialen für Avatare („GA“, „ME“…)
+  String get initials {
+    final n = displayName.trim();
+    if (n.isEmpty || n == 'Gast') return 'G';
+    final parts = n.split(RegExp(r'\s+')).where((p) => p.isNotEmpty).toList();
+    if (parts.isEmpty) return n.characters.first.toUpperCase();
+    if (parts.length == 1) return parts.first.characters.first.toUpperCase();
+    return (parts.first.characters.first + parts.last.characters.first).toUpperCase();
+  }
+
+  /// Einfaches freundliches Greeting
+  String get greeting => 'Hallo, $displayName';
+
+  // -------- Lifecycle / Persistenz --------
+
+  /// Optionaler Initial-Load aus Persistenz.
+  Future<void> init() async {
+    if (_loadUserFn == null) return;
+    _setLoading(true);
+    try {
+      final loaded = await _loadUserFn!.call();
+      if (loaded != null) {
+        _user = loaded;
+        _lastUpdate = DateTime.now();
+      }
+    } finally {
+      _setLoading(false);
+    }
+  }
+
+  // -------- Mutationen --------
+
+  /// Setzt das User-Profil (synchron). Nutze [setUserAsync] für Persistenz.
+  void setUser(ZenUser user, {bool notify = true}) {
     _user = user;
+    _lastUpdate = DateTime.now();
+    if (notify) notifyListeners();
+  }
+
+  /// Setzt & speichert das User-Profil (falls save-Callback gesetzt).
+  Future<void> setUserAsync(ZenUser user, {bool notify = true}) async {
+    setUser(user, notify: false);
+    if (_saveUserFn != null) {
+      await _saveUserFn!(user);
+    }
+    if (notify) notifyListeners();
+  }
+
+  /// Selektives Update (z. B. displayName). Ruft `copyWith` auf dem Model.
+  void updateUser({String? displayName, bool notify = true}) {
+    if (_user == null) return;
+    _user = _user!.copyWith(displayName: displayName ?? _user!.displayName);
+    _lastUpdate = DateTime.now();
+    if (notify) notifyListeners();
+  }
+
+  /// Funktionales Update (beliebige Mutation über copyWith).
+  /// Beispiel:
+  ///   provider.mutateUser((u) => u.copyWith(locale: 'de-DE'));
+  void mutateUser(ZenUser Function(ZenUser u) mutate, {bool notify = true}) {
+    if (_user == null) return;
+    _user = mutate(_user!);
+    _lastUpdate = DateTime.now();
+    if (notify) notifyListeners();
+  }
+
+  /// Logout/Clear (synchron). Nutze [clearUserAsync], wenn Persistenz bereinigt werden soll.
+  void clearUser({bool notify = true}) {
+    _user = null;
+    _lastUpdate = DateTime.now();
+    if (notify) notifyListeners();
+  }
+
+  /// Logout/Clear inkl. Persistenz.
+  Future<void> clearUserAsync({bool notify = true}) async {
+    clearUser(notify: false);
+    if (_clearUserFn != null) {
+      await _clearUserFn!.call();
+    }
+    if (notify) notifyListeners();
+  }
+
+  // -------- intern --------
+  void _setLoading(bool v) {
+    _loading = v;
     notifyListeners();
   }
-}
\ No newline at end of file
+}
diff --git a/zen_project1337/lib/services/analytics.dart b/zen_project1337/lib/services/analytics.dart
index eb68f41..b006441 100644
--- a/zen_project1337/lib/services/analytics.dart
+++ b/zen_project1337/lib/services/analytics.dart
@@ -1,105 +1,410 @@
 // lib/services/analytics.dart
+//
+// AnalyticsService — ZenYourself Statistik-Zentrale (Oxford-Zen, v2)
+// ------------------------------------------------------------------
+// • Stabil sortierte Timelines (ASC) bei Insert/Batch/SetAll
+// • Side-effect-freie Getter (Unmodifiable Views)
+// • Klinik-ready Fenster-/Range-Analysen (Ø-Mood, Heatmaps, Counts)
+// • Sanfte Trends (Up/Down/Stable + Regressions-Slope)
+// • Streaks & Aktivitäts-Kennzahlen
+// • PII-bewusste Exporte (voll / redacted)
+// • Robustere JSON-Import-Pfade (tolerant ggü. dynamischen Maps)
 
+import 'dart:collection';
+import 'dart:convert';
 import 'package:flutter/foundation.dart';
 import 'package:zenyourself/data/mood_entry.dart';
 import 'package:zenyourself/data/reflection_entry.dart';
 
-/// AnalyticsService: Herzstück für Statistiken, Heatmaps, Insights.
-/// Kann beliebig erweitert werden (auch für Pro-Features, Exporte, Trends).
 class AnalyticsService with ChangeNotifier {
-  final List<MoodEntry> _moodEntries = [];
-  final List<ReflectionEntry> _reflections = [];
+  final List<MoodEntry> _moodEntries = <MoodEntry>[];
+  final List<ReflectionEntry> _reflections = <ReflectionEntry>[];
 
-  /// Fügt einen neuen Stimmungseintrag hinzu
-  void addMoodEntry(MoodEntry entry) {
-    _moodEntries.add(entry);
-    notifyListeners();
+  // ===========
+  //  CRUD / Add
+  // ===========
+  /// Mood-Eintrag hinzufügen (hält Timeline sortiert, ASC).
+  void addMoodEntry(MoodEntry entry, {bool notify = true}) {
+    _insertSortedMood(entry);
+    if (notify) notifyListeners();
   }
 
-  /// Fügt eine neue Reflexion hinzu
-  void addReflection(ReflectionEntry entry) {
-    _reflections.add(entry);
-    notifyListeners();
+  /// Reflexion hinzufügen (hält Timeline sortiert, ASC).
+  void addReflection(ReflectionEntry entry, {bool notify = true}) {
+    _insertSortedReflection(entry);
+    if (notify) notifyListeners();
   }
 
-  /// Gibt alle Mood-Einträge zurück (sortiert nach Datum)
-  List<MoodEntry> get moodEntries =>
-      List.unmodifiable(_moodEntries..sort((a, b) => a.timestamp.compareTo(b.timestamp)));
+  /// Batch-Add (ein notify, stabile Sortierung).
+  void addAll({
+    Iterable<MoodEntry> moods = const [],
+    Iterable<ReflectionEntry> reflections = const [],
+    bool notify = true,
+  }) {
+    if (moods.isNotEmpty) {
+      _moodEntries.addAll(moods);
+      _moodEntries.sort((a, b) => a.timestamp.compareTo(b.timestamp));
+    }
+    if (reflections.isNotEmpty) {
+      _reflections.addAll(reflections);
+      _reflections.sort((a, b) => a.timestamp.compareTo(b.timestamp));
+    }
+    if (notify) notifyListeners();
+  }
+
+  /// Kompletten Satz ersetzen (z. B. bei Import/Restore).
+  void setAll({
+    List<MoodEntry> moods = const [],
+    List<ReflectionEntry> reflections = const [],
+    bool notify = true,
+  }) {
+    _moodEntries
+      ..clear()
+      ..addAll(moods);
+    _reflections
+      ..clear()
+      ..addAll(reflections);
+    _moodEntries.sort((a, b) => a.timestamp.compareTo(b.timestamp));
+    _reflections.sort((a, b) => a.timestamp.compareTo(b.timestamp));
+    if (notify) notifyListeners();
+  }
 
-  /// Gibt alle Reflexionen zurück (sortiert nach Datum)
-  List<ReflectionEntry> get reflections =>
-      List.unmodifiable(_reflections..sort((a, b) => a.timestamp.compareTo(b.timestamp)));
+  /// Reset – löscht alle Daten, z. B. bei Profil-Wechsel.
+  void clearAll({bool notify = true}) {
+    _moodEntries.clear();
+    _reflections.clear();
+    if (notify) notifyListeners();
+  }
 
-  /// Durchschnittliche Stimmung (gesamt)
-  double get avgMood => _moodEntries.isNotEmpty
-      ? _moodEntries.map((e) => e.moodScore).reduce((a, b) => a + b) / _moodEntries.length
-      : 0.0;
+  // ===========
+  //  Read-only Views
+  // ===========
+  /// Stimmungs-Einträge (ASC, unveränderbar).
+  UnmodifiableListView<MoodEntry> get moodEntries =>
+      UnmodifiableListView(_moodEntries);
 
-  /// Mood-Verlauf als Liste für Graphen oder Heatmaps
-  List<int> get moodTimeline => _moodEntries.map((e) => e.moodScore).toList();
+  /// Reflexions-Einträge (ASC, unveränderbar).
+  UnmodifiableListView<ReflectionEntry> get reflections =>
+      UnmodifiableListView(_reflections);
 
-  /// Reflektions-Quote (wie oft wird reflektiert pro Woche?)
+  int get moodCount => _moodEntries.length;
+  int get reflectionCount => _reflections.length;
+
+  // ===========
+  //  Kern-Kennzahlen
+  // ===========
+  /// Durchschnittliche Stimmung (0..4). UI kann runden.
+  double get avgMood {
+    if (_moodEntries.isEmpty) return 0.0;
+    final sum = _moodEntries.fold<int>(0, (a, e) => a + e.moodScore);
+    return sum / _moodEntries.length;
+  }
+
+  /// Durchschnitt über die letzten [days] Tage (inkl. heute).
+  double averageMoodLastDays(int days) {
+    if (days <= 0 || _moodEntries.isEmpty) return 0.0;
+    final now = DateTime.now();
+    final start = DateTime(now.year, now.month, now.day)
+        .subtract(Duration(days: days - 1));
+    var sum = 0, count = 0;
+    for (final e in _moodEntries) {
+      if (!e.timestamp.isBefore(start)) {
+        sum += e.moodScore;
+        count++;
+      }
+    }
+    return count == 0 ? 0.0 : sum / count;
+  }
+
+  /// Durchschnitt für Zeitraum [start, end] (inkl.).
+  double averageMoodRange(DateTime start, DateTime end) {
+    if (_moodEntries.isEmpty) return 0.0;
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    var sum = 0, count = 0;
+    for (final m in _moodEntries) {
+      final t = m.timestamp;
+      final inRange = (t.isAtSameMomentAs(s) || t.isAfter(s)) &&
+          (t.isAtSameMomentAs(e) || t.isBefore(e));
+      if (inRange) {
+        sum += m.moodScore;
+        count++;
+      }
+    }
+    return count == 0 ? 0.0 : sum / count;
+  }
+
+  /// Mood-Trend (letzte 2 Einträge): "Up" | "Down" | "Stable".
+  String get moodTrend {
+    if (_moodEntries.length < 2) return 'Stable';
+    final last = _moodEntries[_moodEntries.length - 1].moodScore;
+    final prev = _moodEntries[_moodEntries.length - 2].moodScore;
+    if (last > prev) return 'Up';
+    if (last < prev) return 'Down';
+    return 'Stable';
+  }
+
+  /// Sanfter Trend als Regressions-Slope über die letzten [n] Einträge.
+  /// > 0 = aufwärts, < 0 = abwärts, 0 = neutral.
+  double moodSlope(int n) {
+    if (_moodEntries.isEmpty || n <= 1) return 0.0;
+    final take = n.clamp(2, _moodEntries.length);
+    final recent = _moodEntries.sublist(_moodEntries.length - take);
+    // einfache lineare Regression y = a + b*x, x=0..(k-1)
+    final k = recent.length;
+    final xs = List<int>.generate(k, (i) => i);
+    final meanX = (k - 1) / 2.0;
+    final meanY = recent.fold<double>(0.0, (a, e) => a + e.moodScore) / k;
+    var num = 0.0, den = 0.0;
+    for (var i = 0; i < k; i++) {
+      final dx = xs[i] - meanX;
+      final dy = recent[i].moodScore - meanY;
+      num += dx * dy;
+      den += dx * dx;
+    }
+    return den == 0 ? 0.0 : num / den;
+  }
+
+  /// Reflexionsfrequenz/Woche (Events pro 7 Tage) über die gesamte Historie.
   double get reflectionFrequencyPerWeek {
     if (_reflections.isEmpty) return 0.0;
     final first = _reflections.first.timestamp;
     final last = _reflections.last.timestamp;
     final days = last.difference(first).inDays + 1;
-    if (days < 7) return _reflections.length.toDouble();
-    return _reflections.length / (days / 7);
+    if (days <= 0) return _reflections.length.toDouble();
+    return (_reflections.length * 7) / days;
   }
 
-  /// Trends für Mood (Up, Down, Stable)
-  String get moodTrend {
-    if (_moodEntries.length < 2) return "Stable";
-    final last = _moodEntries.last.moodScore;
-    final prev = _moodEntries[_moodEntries.length - 2].moodScore;
-    if (last > prev) return "Up";
-    if (last < prev) return "Down";
-    return "Stable";
+  // ===========
+  //  Aktivität / Streaks
+  // ===========
+  /// Anzahl aktiver Tage mit *mindestens* einem Mood-Eintrag.
+  int get moodActiveDays {
+    final set = <String>{};
+    for (final m in _moodEntries) {
+      set.add(_dayTagOf(m.timestamp));
+    }
+    return set.length;
+  }
+
+  /// Anzahl aktiver Tage mit *mindestens* einer Reflexion.
+  int get reflectionActiveDays {
+    final set = <String>{};
+    for (final r in _reflections) {
+      set.add(_dayTagOf(r.timestamp));
+    }
+    return set.length;
   }
 
-  /// Top 3 Reflektions-Themen (per Tag)
-  Map<String, int> get topReflectionTags {
-    final Map<String, int> tagCounts = {};
-    for (final entry in _reflections) {
-      for (final tag in entry.tags) {
-        tagCounts[tag] = (tagCounts[tag] ?? 0) + 1;
+  /// Aktuelle Reflexions-Streak in Tagen (inkl. heute, wenn vorhanden).
+  int get currentReflectionStreakDays {
+    if (_reflections.isEmpty) return 0;
+    final days = _reflections.map((r) => _dayTagOf(r.timestamp)).toSet();
+    var streak = 0;
+    var cursor = DateTime.now();
+    while (true) {
+      final tag = _dayTagOf(cursor);
+      if (days.contains(tag)) {
+        streak++;
+        cursor = cursor.subtract(const Duration(days: 1));
+      } else {
+        break;
       }
     }
-    // Sortieren & nur Top 3 zurückgeben
-    final sorted = tagCounts.entries.toList()
-      ..sort((a, b) => b.value.compareTo(a.value));
-    return Map.fromEntries(sorted.take(3));
+    return streak;
   }
 
-  /// Mood Heatmap Daten für n Tage
+  // ===========
+  //  Zeitreihen / Heatmap / Counts
+  // ===========
+  /// Vollständiger Mood-Zeitverlauf (ASC), für Graphen.
+  List<int> get moodTimeline =>
+      _moodEntries.map((e) => e.moodScore).toList(growable: false);
+
+  /// Mood Scores der letzten [n] Einträge.
+  List<int> getRecentMoodScores(int n) {
+    if (n <= 0) return const [];
+    final start = (moodCount - n).clamp(0, moodCount);
+    return _moodEntries.sublist(start).map((e) => e.moodScore).toList();
+    }
+
+  /// Mood-Heatmap-Daten für die letzten [days] Tage.
+  /// Map: DayTag (yyyy-MM-dd) → MoodScore (0..4).
   Map<String, int> getMoodHeatmapData(int days) {
     final now = DateTime.now();
-    final data = <String, int>{};
-    for (final entry in _moodEntries) {
-      final diff = now.difference(entry.timestamp).inDays;
-      if (diff < days) {
-        final tag = entry.dayTag;
-        data[tag] = entry.moodScore;
+    final start = DateTime(now.year, now.month, now.day)
+        .subtract(Duration(days: days - 1));
+    final out = <String, int>{};
+    for (final e in _moodEntries) {
+      if (!e.timestamp.isBefore(start)) {
+        out[e.dayTag] = e.moodScore;
       }
     }
-    return data;
+    return out;
   }
 
-  /// Mood Score Verlauf (letzte n Einträge)
-  List<int> getRecentMoodScores(int n) =>
-      _moodEntries.reversed.take(n).map((e) => e.moodScore).toList();
+  /// Mood-Heatmap im Datumsbereich [start, end] (inklusive).
+  Map<String, int> getMoodHeatmapRange(DateTime start, DateTime end) {
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    final out = <String, int>{};
+    for (final m in _moodEntries) {
+      final t = m.timestamp;
+      final inRange = (t.isAtSameMomentAs(s) || t.isAfter(s)) &&
+          (t.isAtSameMomentAs(e) || t.isBefore(e));
+      if (inRange) out[m.dayTag] = m.moodScore;
+    }
+    return out;
+  }
+
+  /// Reflexions-Counts pro Tag (DayTag → Anzahl) für die letzten [days] Tage.
+  Map<String, int> getReflectionCounts(int days) {
+    final now = DateTime.now();
+    final start = DateTime(now.year, now.month, now.day)
+        .subtract(Duration(days: days - 1));
+    final out = <String, int>{};
+    for (final r in _reflections) {
+      if (!r.timestamp.isBefore(start)) {
+        final tag = _dayTagOf(r.timestamp);
+        out[tag] = (out[tag] ?? 0) + 1;
+      }
+    }
+    return out;
+  }
 
-  /// Export als Map (z. B. für CSV, JSON)
+  /// Mood-Einträge im Zeitraum [start, end] (inklusive).
+  List<MoodEntry> moodsInRange(DateTime start, DateTime end) {
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    return _moodEntries.where((m) {
+      final t = m.timestamp;
+      return (t.isAtSameMomentAs(s) || t.isAfter(s)) &&
+          (t.isAtSameMomentAs(e) || t.isBefore(e));
+    }).toList(growable: false);
+  }
+
+  /// Reflexions-Einträge im Zeitraum [start, end] (inklusive).
+  List<ReflectionEntry> reflectionsInRange(DateTime start, DateTime end) {
+    final s = start.isBefore(end) ? start : end;
+    final e = end.isAfter(start) ? end : start;
+    return _reflections.where((r) {
+      final t = r.timestamp;
+      return (t.isAtSameMomentAs(s) || t.isAfter(s)) &&
+          (t.isAtSameMomentAs(e) || t.isBefore(e));
+    }).toList(growable: false);
+  }
+
+  // ===========
+  //  Tags / Themen
+  // ===========
+  /// Top-N Reflexions-Tags (häufigste Themen).
+  Map<String, int> topReflectionTags({int top = 3}) {
+    final counts = <String, int>{};
+    for (final r in _reflections) {
+      final tags = r.tags?.toList() ?? const [];
+      for (final t in tags) {
+        counts[t] = (counts[t] ?? 0) + 1;
+      }
+    }
+    final sorted = counts.entries.toList()
+      ..sort((a, b) => b.value.compareTo(a.value));
+    return Map.fromEntries(sorted.take(top));
+  }
+
+  // ===========
+  //  Export / Import
+  // ===========
+  /// Vollständiger Export (PII-enthält: Inhalte & Timestamps).
   Map<String, dynamic> exportAllData() => {
         'moodEntries': _moodEntries.map((e) => e.toJson()).toList(),
         'reflections': _reflections.map((e) => e.toJson()).toList(),
       };
 
-  /// Reset (z. B. für User-Wechsel)
-  void clearAll() {
-    _moodEntries.clear();
-    _reflections.clear();
-    notifyListeners();
+  /// PII-armer Export (z. B. für Support/Telemetrie).
+  /// Entfernt Freitextfelder und lässt nur Metriken/Tags.
+  Map<String, dynamic> exportMetricsRedacted() {
+    final moods = _moodEntries
+        .map((e) => <String, dynamic>{
+              'dayTag': e.dayTag,
+              'moodScore': e.moodScore,
+              'ts': e.timestamp.toUtc().toIso8601String(),
+            })
+        .toList();
+
+    final refl = _reflections
+        .map((r) => <String, dynamic>{
+              'id': r.id,
+              'ts': r.timestamp.toUtc().toIso8601String(),
+              'moodScore': r.moodScore,
+              'tags': r.tags?.toList(),
+              // KEIN userInput/userResponse/aiSummary etc.
+            }..removeWhere((_, v) => v == null))
+        .toList();
+
+    return {
+      'moodEntries': moods,
+      'reflections': refl,
+    };
+  }
+
+  /// JSON-Export als String.
+  String exportJsonString({bool pretty = true}) {
+    final data = exportAllData();
+    return pretty
+        ? const JsonEncoder.withIndent('  ').convert(data)
+        : jsonEncode(data);
+  }
+
+  /// JSON-Import (ersetzen). Erwartet kompatible `fromJson`-Factories.
+  void importFromJson(Map<String, dynamic> json, {bool notify = true}) {
+    final rawMoods = (json['moodEntries'] as List? ?? const <dynamic>[])
+        .map<Map<String, dynamic>>((e) => Map<String, dynamic>.from(e as Map))
+        .toList();
+
+    final rawRefl = (json['reflections'] as List? ?? const <dynamic>[])
+        .map<Map<String, dynamic>>((e) => Map<String, dynamic>.from(e as Map))
+        .toList();
+
+    final moods = rawMoods.map((j) => MoodEntry.fromJson(j)).toList();
+    final refl = rawRefl.map((j) => ReflectionEntry.fromJson(j)).toList();
+
+    setAll(moods: moods, reflections: refl, notify: notify);
+  }
+
+  // ===========
+  //  Interna
+  // ===========
+  void _insertSortedMood(MoodEntry entry) {
+    // Binäre Insert-Position (ASC)
+    int lo = 0, hi = _moodEntries.length;
+    while (lo < hi) {
+      final mid = (lo + hi) >> 1;
+      if (_moodEntries[mid].timestamp.isBefore(entry.timestamp)) {
+        lo = mid + 1;
+      } else {
+        hi = mid;
+      }
+    }
+    _moodEntries.insert(lo, entry);
+  }
+
+  void _insertSortedReflection(ReflectionEntry entry) {
+    int lo = 0, hi = _reflections.length;
+    while (lo < hi) {
+      final mid = (lo + hi) >> 1;
+      if (_reflections[mid].timestamp.isBefore(entry.timestamp)) {
+        lo = mid + 1;
+      } else {
+        hi = mid;
+      }
+    }
+    _reflections.insert(lo, entry);
+  }
+
+  String _dayTagOf(DateTime dt) {
+    final y = dt.year.toString().padLeft(4, '0');
+    final m = dt.month.toString().padLeft(2, '0');
+    final d = dt.day.toString().padLeft(2, '0');
+    return '$y-$m-$d';
   }
 }
diff --git a/zen_project1337/lib/services/api_service.dart b/zen_project1337/lib/services/api_service.dart
deleted file mode 100644
index 2e578c8..0000000
--- a/zen_project1337/lib/services/api_service.dart
+++ /dev/null
@@ -1,111 +0,0 @@
-// lib/services/api_service.dart
-import 'dart:convert';
-import 'package:http/http.dart' as http;
-import 'package:shared_preferences/shared_preferences.dart';
-
-class ApiService {
-  static const String baseUrl = "https://api.zenyourself.app"; // Passe ggf. an
-
-  /// Hole Bearer-Token (z. B. aus Login oder lokal gespeichert)
-  static Future<String?> getAuthToken() async {
-    final prefs = await SharedPreferences.getInstance();
-    return prefs.getString('auth_token');
-  }
-
-  /// Standard-GET-Request
-  static Future<http.Response> get(
-    String endpoint, {
-    Map<String, String>? headers,
-    bool withAuth = true,
-  }) async {
-    final token = withAuth ? await getAuthToken() : null;
-    final uri = Uri.parse('$baseUrl/$endpoint');
-    final defaultHeaders = {
-      'Content-Type': 'application/json',
-      if (withAuth && token != null) 'Authorization': 'Bearer $token',
-      ...?headers,
-    };
-    return http.get(uri, headers: defaultHeaders);
-  }
-
-  /// Standard-POST-Request (JSON)
-  static Future<http.Response> post(
-    String endpoint, {
-    Map<String, String>? headers,
-    dynamic body,
-    bool withAuth = true,
-  }) async {
-    final token = withAuth ? await getAuthToken() : null;
-    final uri = Uri.parse('$baseUrl/$endpoint');
-    final defaultHeaders = {
-      'Content-Type': 'application/json',
-      if (withAuth && token != null) 'Authorization': 'Bearer $token',
-      ...?headers,
-    };
-    return http.post(uri, headers: defaultHeaders, body: jsonEncode(body));
-  }
-
-  /// PUT-Request (z. B. für Updates)
-  static Future<http.Response> put(
-    String endpoint, {
-    Map<String, String>? headers,
-    dynamic body,
-    bool withAuth = true,
-  }) async {
-    final token = withAuth ? await getAuthToken() : null;
-    final uri = Uri.parse('$baseUrl/$endpoint');
-    final defaultHeaders = {
-      'Content-Type': 'application/json',
-      if (withAuth && token != null) 'Authorization': 'Bearer $token',
-      ...?headers,
-    };
-    return http.put(uri, headers: defaultHeaders, body: jsonEncode(body));
-  }
-
-  /// DELETE-Request
-  static Future<http.Response> delete(
-    String endpoint, {
-    Map<String, String>? headers,
-    bool withAuth = true,
-  }) async {
-    final token = withAuth ? await getAuthToken() : null;
-    final uri = Uri.parse('$baseUrl/$endpoint');
-    final defaultHeaders = {
-      'Content-Type': 'application/json',
-      if (withAuth && token != null) 'Authorization': 'Bearer $token',
-      ...?headers,
-    };
-    return http.delete(uri, headers: defaultHeaders);
-  }
-
-  /// Beispiel: Sende einen Reflection-Eintrag (POST)
-  static Future<bool> sendReflection(Map<String, dynamic> reflection) async {
-    final res = await post("reflections", body: reflection);
-    if (res.statusCode == 200 || res.statusCode == 201) {
-      return true;
-    }
-    // Fehler-Logging (optional)
-    print("Reflection-POST failed: ${res.statusCode}, ${res.body}");
-    return false;
-  }
-
-  /// Beispiel: Hole letzte Mood-Einträge
-  static Future<List<Map<String, dynamic>>> fetchMoodEntries() async {
-    final res = await get("moods");
-    if (res.statusCode == 200) {
-      final List<dynamic> data = jsonDecode(res.body);
-      return data.cast<Map<String, dynamic>>();
-    } else {
-      print("Fetch moods failed: ${res.statusCode}");
-      return [];
-    }
-  }
-
-  /// Fehlerbehandlung zentralisieren
-  static Exception handleApiError(http.Response res) {
-    // Hier kannst du eigene Fehlerklassen, Logging, etc. einbauen
-    final message = 'API Error: ${res.statusCode} ${res.reasonPhrase}';
-    print(message);
-    return Exception(message);
-  }
-}
diff --git a/zen_project1337/lib/services/auth.dart b/zen_project1337/lib/services/auth.dart
index 15394a1..53b8932 100644
--- a/zen_project1337/lib/services/auth.dart
+++ b/zen_project1337/lib/services/auth.dart
@@ -1,99 +1,364 @@
 // lib/services/auth.dart
+//
+// Oxford Safety Edition — robust, privacy-aware, retry-ready.
+// - Keine PII im Log (Tokens werden maskiert)
+// - Einheitliche HTTP-Hilfen (GET/POST) ohne Abhängigkeit zu ApiService
+// - Token-Refresh mit einmaligem Retry bei 401
+// - Sichere, defensive JSON-Parsing-Strategie
+// - Abwärtskompatibel: Signaturen von login/register/logout/isLoggedIn/fetchProfile bleiben
 
 import 'dart:convert';
+import 'package:flutter/foundation.dart';
 import 'package:http/http.dart' as http;
 import 'package:shared_preferences/shared_preferences.dart';
-import 'api_service.dart';
 
 class AuthService {
+  // ---------- Konfiguration ----------
+  /// Basis-URL (per --dart-define=API_BASE_URL=... überschreibbar)
+  static String baseUrl = const String.fromEnvironment(
+    'API_BASE_URL',
+    defaultValue: 'https://api.zenyourself.app/',
+  );
+
+  /// Optional zur Laufzeit ändern (z. B. Staging).
+  static void configure({required String newBaseUrl}) {
+    baseUrl = newBaseUrl.endsWith('/') ? newBaseUrl : '$newBaseUrl/';
+  }
+
+  // Netzwerk: Default-Timeouts
+  static const Duration _defaultTimeout = Duration(seconds: 15);
+
+  // ---------- Storage Keys ----------
   static const _tokenKey = 'auth_token';
   static const _refreshTokenKey = 'refresh_token';
+  static const _accessExpKey = 'auth_token_exp';
+  static const _refreshExpKey = 'refresh_token_exp';
+
+  // ---------- Öffentliche API (kompatibel) ----------
 
-  /// Login mit E-Mail und Passwort
+  /// Login per E-Mail & Passwort. Token wird lokal gespeichert.
   static Future<bool> login(String email, String password) async {
-    final res = await ApiService.post(
-      "auth/login",
-      body: {"email": email, "password": password},
-      withAuth: false,
-    );
-    if (res.statusCode == 200) {
-      final data = jsonDecode(res.body);
-      await _storeTokens(data['access_token'], data['refresh_token']);
-      return true;
+    try {
+      final res = await _post(
+        'auth/login',
+        body: {'email': email, 'password': password},
+        withAuth: false,
+      );
+      if (_isOk(res.statusCode)) {
+        final data = _safeJson(res.body);
+        await _storeTokensFromMap(data);
+        return true;
+      }
+      _logHttp('Login', res);
+      return false;
+    } catch (e) {
+      _log('Login Exception: $e');
+      return false;
     }
-    print('Login failed: ${res.statusCode} ${res.body}');
-    return false;
   }
 
-  /// Registrierung
+  /// Registrierung (E-Mail & Passwort)
   static Future<bool> register(String email, String password) async {
-    final res = await ApiService.post(
-      "auth/register",
-      body: {"email": email, "password": password},
-      withAuth: false,
-    );
-    if (res.statusCode == 201) {
-      final data = jsonDecode(res.body);
-      await _storeTokens(data['access_token'], data['refresh_token']);
-      return true;
+    try {
+      final res = await _post(
+        'auth/register',
+        body: {'email': email, 'password': password},
+        withAuth: false,
+      );
+      if (_isOk(res.statusCode) || res.statusCode == 201) {
+        final data = _safeJson(res.body);
+        await _storeTokensFromMap(data);
+        return true;
+      }
+      _logHttp('Registration', res);
+      return false;
+    } catch (e) {
+      _log('Registration Exception: $e');
+      return false;
     }
-    print('Registration failed: ${res.statusCode} ${res.body}');
-    return false;
   }
 
-  /// Logout (löscht Tokens)
+  /// Logout – löscht Tokens lokal
   static Future<void> logout() async {
     final prefs = await SharedPreferences.getInstance();
     await prefs.remove(_tokenKey);
     await prefs.remove(_refreshTokenKey);
+    await prefs.remove(_accessExpKey);
+    await prefs.remove(_refreshExpKey);
+  }
+
+  /// Schnell prüfen: Ist User eingeloggt?
+  /// Versucht bei abgelaufenem Access Token einmalig ein Refresh.
+  static Future<bool> isLoggedIn() async {
+    final token = await getAuthToken();
+    if (token == null || token.isEmpty) return false;
+
+    if (await _isAccessExpired()) {
+      final ok = await refreshToken();
+      return ok;
+    }
+    return true;
+  }
+
+  /// Hole Profil/Account-Info (sofern API bereitstellt).
+  /// Bei 401 wird einmalig ein Refresh versucht und der Call wiederholt.
+  static Future<Map<String, dynamic>?> fetchProfile() async {
+    try {
+      var res = await _get('auth/profile');
+      if (res.statusCode == 401 && await refreshToken()) {
+        res = await _get('auth/profile'); // retry once
+      }
+      if (_isOk(res.statusCode)) {
+        return _safeJson(res.body);
+      }
+      _logHttp('Fetch profile', res);
+      return null;
+    } catch (e) {
+      _log('Fetch profile Exception: $e');
+      return null;
+    }
   }
 
-  /// Token-Refresh (z. B. falls Access Token abgelaufen)
+  /// Hole gespeicherten Bearer-Token
+  static Future<String?> getAuthToken() async {
+    final prefs = await SharedPreferences.getInstance();
+    return prefs.getString(_tokenKey);
+  }
+
+  /// Access-Token automatisch erneuern (mit Refresh Token)
   static Future<bool> refreshToken() async {
     final prefs = await SharedPreferences.getInstance();
     final refreshToken = prefs.getString(_refreshTokenKey);
-    if (refreshToken == null) return false;
+    if (refreshToken == null || refreshToken.isEmpty) return false;
 
-    final res = await ApiService.post(
-      "auth/refresh",
-      body: {"refresh_token": refreshToken},
-      withAuth: false,
-    );
-    if (res.statusCode == 200) {
-      final data = jsonDecode(res.body);
-      await _storeTokens(data['access_token'], data['refresh_token']);
-      return true;
+    // Wenn Refresh-Token abgelaufen → sofort false
+    if (await _isRefreshExpired()) return false;
+
+    try {
+      final res = await _post(
+        'auth/refresh',
+        body: {'refresh_token': refreshToken},
+        withAuth: false,
+      );
+      if (_isOk(res.statusCode)) {
+        final data = _safeJson(res.body);
+        await _storeTokensFromMap(data);
+        return true;
+      }
+      _logHttp('Token Refresh', res);
+      return false;
+    } catch (e) {
+      _log('Token Refresh Exception: $e');
+      return false;
     }
-    print('Refresh failed: ${res.statusCode} ${res.body}');
-    return false;
   }
 
-  /// Hole aktuellen Bearer Token
-  static Future<String?> getAuthToken() async {
+  // ===================================================================
+  //                        Interne HTTP-Helfer
+  // ===================================================================
+
+  static Uri _u(String path) {
+    final p = path.startsWith('/') ? path.substring(1) : path;
+    return Uri.parse('$baseUrl$p');
+  }
+
+  static Map<String, String> _jsonHeaders({String? token}) {
+    final h = <String, String>{
+      'Content-Type': 'application/json',
+      'Accept': 'application/json',
+    };
+    if (token != null && token.isNotEmpty) {
+      h['Authorization'] = 'Bearer $token';
+    }
+    return h;
+  }
+
+  /// GET mit optionalem Auth und automatischer Header-Setzung.
+  static Future<http.Response> _get(
+    String path, {
+    Map<String, String>? query,
+    bool withAuth = true,
+  }) async {
+    final token = withAuth ? await getAuthToken() : null;
+    final uri = query == null ? _u(path) : _u(path).replace(queryParameters: query);
+    final res = await http.get(uri, headers: _jsonHeaders(token: token)).timeout(_defaultTimeout);
+    return res;
+  }
+
+  /// POST mit optionalem Auth und JSON-Body.
+  static Future<http.Response> _post(
+    String path, {
+    Map<String, dynamic>? body,
+    bool withAuth = true,
+  }) async {
+    final token = withAuth ? await getAuthToken() : null;
+    final uri = _u(path);
+    final res = await http
+        .post(
+          uri,
+          headers: _jsonHeaders(token: token),
+          body: body == null ? null : jsonEncode(body),
+        )
+        .timeout(_defaultTimeout);
+    return res;
+  }
+
+  // ===================================================================
+  //                        Token Handling
+  // ===================================================================
+
+  /// Speichert Tokens (unterstützt verschiedene Key-Namen der API).
+  static Future<void> _storeTokensFromMap(Map<String, dynamic> data) async {
+    // Verschiedene Feldnamen tolerieren
+    final access = (data['access_token'] ??
+            data['accessToken'] ??
+            data['token'] ??
+            data['jwt'] ??
+            '')
+        .toString();
+    final refresh =
+        (data['refresh_token'] ?? data['refreshToken'] ?? data['id_token'] ?? '').toString();
+
+    // Optional: Expiry (Sekunden seit jetzt ODER ISO-8601/epoch)
+    final accessExp = _parseExpiry(data['access_expires'] ?? data['accessExpires']);
+    final refreshExp = _parseExpiry(data['refresh_expires'] ?? data['refreshExpires']);
+
+    if (access.isEmpty) {
+      _log('Warn: access token missing in response.');
+    }
+
     final prefs = await SharedPreferences.getInstance();
-    return prefs.getString(_tokenKey);
+    await prefs.setString(_tokenKey, access);
+    if (refresh.isNotEmpty) {
+      await prefs.setString(_refreshTokenKey, refresh);
+    }
+    if (accessExp != null) {
+      await prefs.setInt(_accessExpKey, accessExp.millisecondsSinceEpoch);
+    } else {
+      await prefs.remove(_accessExpKey);
+    }
+    if (refreshExp != null) {
+      await prefs.setInt(_refreshExpKey, refreshExp.millisecondsSinceEpoch);
+    } else {
+      await prefs.remove(_refreshExpKey);
+    }
   }
 
-  /// Interne Token-Speicherung
-  static Future<void> _storeTokens(String accessToken, String refreshToken) async {
+  static Future<bool> _isAccessExpired() async {
     final prefs = await SharedPreferences.getInstance();
-    await prefs.setString(_tokenKey, accessToken);
-    await prefs.setString(_refreshTokenKey, refreshToken);
+    final ms = prefs.getInt(_accessExpKey);
+    if (ms == null) return false; // kein Expiry => nicht abgelaufen
+    final exp = DateTime.fromMillisecondsSinceEpoch(ms, isUtc: true);
+    // 30s Sicherheits-Puffer
+    return DateTime.now().toUtc().isAfter(exp.subtract(const Duration(seconds: 30)));
   }
 
-  /// User Info laden (optional – abhängig von deiner API)
-  static Future<Map<String, dynamic>?> fetchProfile() async {
-    final res = await ApiService.get("auth/profile");
-    if (res.statusCode == 200) {
-      return jsonDecode(res.body) as Map<String, dynamic>;
+  static Future<bool> _isRefreshExpired() async {
+    final prefs = await SharedPreferences.getInstance();
+    final ms = prefs.getInt(_refreshExpKey);
+    if (ms == null) return false;
+    final exp = DateTime.fromMillisecondsSinceEpoch(ms, isUtc: true);
+    return DateTime.now().toUtc().isAfter(exp);
+  }
+
+  /// Akzeptiert:
+  /// - int/double epoch s|ms
+  /// - String "+3600" (relativ)
+  /// - String epoch ("1700000000"/"1700000000000")
+  /// - ISO-8601
+  static DateTime? _parseExpiry(dynamic v) {
+    if (v == null) return null;
+
+    if (v is int) {
+      // epoch seconds ODER ms? Heuristik:
+      if (v > 1000000000000) {
+        return DateTime.fromMillisecondsSinceEpoch(v, isUtc: true);
+      } else {
+        return DateTime.fromMillisecondsSinceEpoch(v * 1000, isUtc: true);
+      }
+    }
+    if (v is double) {
+      final i = v.toInt();
+      return _parseExpiry(i);
+    }
+    if (v is String) {
+      final s = v.trim();
+
+      // Relativ-Format: +Sekunden
+      if (s.startsWith('+')) {
+        final secs = int.tryParse(s.substring(1));
+        if (secs != null) return DateTime.now().toUtc().add(Duration(seconds: secs));
+      }
+
+      // Nur Ziffern? => epoch s/ms
+      if (RegExp(r'^\d+$').hasMatch(s)) {
+        final n = int.tryParse(s);
+        if (n != null) return _parseExpiry(n);
+      }
+
+      // ISO-8601
+      try {
+        return DateTime.parse(s).toUtc();
+      } catch (_) {
+        return null;
+      }
     }
-    print('Fetch profile failed: ${res.statusCode} ${res.body}');
     return null;
   }
 
-  /// Status-Check (eingeloggt?)
-  static Future<bool> isLoggedIn() async {
-    final token = await getAuthToken();
-    return token != null && token.isNotEmpty;
+  // ===================================================================
+  //                        Logging / JSON Utils
+  // ===================================================================
+
+  static Map<String, dynamic> _safeJson(String body) {
+    try {
+      final d = jsonDecode(body);
+      if (d is Map<String, dynamic>) return d;
+      return <String, dynamic>{'data': d};
+    } catch (_) {
+      return <String, dynamic>{};
+    }
+  }
+
+  static bool _isOk(int code) => code >= 200 && code < 300;
+
+  static void _log(String msg) {
+    if (kDebugMode) {
+      // Keine PII (Tokens, Passwörter etc.) ins Log schreiben.
+      debugPrint('[Auth] $msg');
+    }
+  }
+
+  static void _logHttp(String context, http.Response res) {
+    if (!kDebugMode) return;
+    final b = _maskSecrets(res.body);
+    final preview = b.length > 300 ? '${b.substring(0, 300)}…' : b;
+    debugPrint(
+      '[Auth:$context] HTTP ${res.statusCode} ${res.request?.url}\n$preview',
+    );
+  }
+
+  /// Maskiert offensichtliche Geheimnisse in Response-Bodies.
+  static String _maskSecrets(String s) {
+    String out = s;
+    final patterns = <RegExp>[
+      // "access_token":"...","accessToken":"..."
+      RegExp(r'("access[_A-Za-z]*token"\s*:\s*")([^"]+)(")', caseSensitive: false),
+      // "refresh_token":"..."
+      RegExp(r'("refresh[_A-Za-z]*token"\s*:\s*")([^"]+)(")', caseSensitive: false),
+      // Bearer token in plain
+      RegExp(r'(Bearer\s+)[A-Za-z0-9\-\._~\+\/]+=*', caseSensitive: false),
+    ];
+    for (final re in patterns) {
+      out = out.replaceAllMapped(re, (m) {
+        if (m.groupCount == 3) {
+          return '${m.group(1)}***${m.group(3)}';
+        }
+        // Bearer-Pfad
+        final full = m.group(0)!;
+        return full.replaceAll(RegExp(r'([A-Za-z0-9\-\._~\+\/]+=*)$'), '***');
+      });
+    }
+    return out;
   }
 }
diff --git a/zen_project1337/lib/services/local_storage.dart b/zen_project1337/lib/services/local_storage.dart
index 245f42c..c90ae2f 100644
--- a/zen_project1337/lib/services/local_storage.dart
+++ b/zen_project1337/lib/services/local_storage.dart
@@ -1,113 +1,512 @@
 // lib/services/local_storage.dart
+//
+// ZenYourself LocalStorageService — Oxford Safety Edition (Pro)
+// -------------------------------------------------------------
+// ✓ Singleton, threadsafe Init (kein doppeltes Arbeiten)
+// ✓ SecureStorage (Mobile/Desktop) + SharedPreferences mit Web-Fallback
+// ✓ Bestehende API unverändert; zusätzliche Helfer optional
+// ✓ JSON sicher, Namespaced Keys, Export/Import, Key-Migration
+// ✓ Journal/Mood/Reflection-Listen-Helper
+// ✓ Keine PII im Debug-Log, defensive Fehlerbehandlung
 
 import 'dart:convert';
-import 'package:shared_preferences/shared_preferences.dart';
+import 'package:flutter/foundation.dart' show kIsWeb, kDebugMode;
 import 'package:flutter_secure_storage/flutter_secure_storage.dart';
-
-/// ZenYourself Local Storage Service
-/// Multi-Layer (Secure + SharedPrefs), generisch für alle Models.
-/// Upgradefähig für DB/Caching, 100% kompatibel zu allen Modulen.
+import 'package:shared_preferences/shared_preferences.dart';
 
 class LocalStorageService {
-  // Singleton Pattern (für einfache globale Nutzung)
+  // ----------------- Singleton -----------------
   static final LocalStorageService _instance = LocalStorageService._internal();
   factory LocalStorageService() => _instance;
   LocalStorageService._internal();
 
-  static final FlutterSecureStorage _secure = const FlutterSecureStorage();
+  // ----------------- Konfiguration -----------------
+  static const String _ns = 'zen:v1:'; // Namespace
+  static const String _versionKey = '${_ns}storage_version';
+  static const int _currentVersion = 1;
+
+  // ----------------- Backends -----------------
+  SharedPreferences? _prefs;
+  FlutterSecureStorage? _secure; // auf Web null (Fallback via _prefs)
+  bool _initialized = false;
+  Future<void>? _initFuture;
+
+  bool get isInitialized => _initialized;
+
+  // ----------------- Init / Migration -----------------
+
+  /// Call *before* first access (z. B. in main()).
+  Future<void> init() async {
+    if (_initialized) return;
+    if (_initFuture != null) {
+      await _initFuture;
+      return;
+    }
+    _initFuture = _initImpl();
+    await _initFuture;
+  }
+
+  Future<void> _initImpl() async {
+    try {
+      _prefs = await SharedPreferences.getInstance();
+
+      if (!kIsWeb) {
+        _secure = const FlutterSecureStorage(
+          aOptions: AndroidOptions(
+            encryptedSharedPreferences: true,
+            resetOnError: true,
+          ),
+          iOptions: IOSOptions(
+            accessibility: KeychainAccessibility.first_unlock_this_device,
+          ),
+          mOptions: MacOsOptions(
+            accessibility: KeychainAccessibility.first_unlock_this_device,
+          ),
+          lOptions: LinuxOptions(
+              // SecretService, falls vorhanden; ansonsten Klartext (wir nutzen primär prefs)
+              ),
+          // Web: Fallback via _prefs
+        );
+      } else {
+        _secure = null; // expliziter Web-Fallback
+      }
+
+      await _maybeMigrate();
+      _initialized = true;
+    } catch (e, st) {
+      _log('Init error: $e');
+      _log('$st');
+      _initialized = _prefs != null; // Minimal-Fallback
+    } finally {
+      _initFuture = null;
+    }
+  }
+
+  Future<void> _maybeMigrate() async {
+    final ver = _prefs?.getInt(_versionKey) ?? 0;
+    if (ver == _currentVersion) return;
+
+    // --- Platz für Migrationen (Key-Renames, Datenumzüge) ---
+    // if (ver < 1) { ... }
+
+    await _prefs?.setInt(_versionKey, _currentVersion);
+  }
+
+  // ----------------- SECURE STORAGE -----------------
+  // Tokens, sensible Secrets. Auf Web → Fallback auf SharedPreferences.
+
+  Future<void> saveSecure(String key, String value) async {
+    await init();
+    final k = _nsKey(key);
+    try {
+      if (_secure != null) {
+        await _secure!.write(key: k, value: value);
+      } else {
+        await _prefs?.setString(k, value); // Web-Fallback
+      }
+    } catch (e) {
+      _log('saveSecure("$key") failed: $e');
+    }
+  }
+
+  Future<String?> loadSecure(String key) async {
+    await init();
+    final k = _nsKey(key);
+    try {
+      if (_secure != null) {
+        return await _secure!.read(key: k);
+      } else {
+        return _prefs?.getString(k); // Web-Fallback
+      }
+    } catch (e) {
+      _log('loadSecure("$key") failed: $e');
+      return null;
+    }
+  }
 
-  // --- SECURE STORAGE: für Tokens, Credentials, hochsensible Infos ---
-  Future<void> saveSecure(String key, String value) async =>
-      await _secure.write(key: key, value: value);
+  /// Prüft Existenz eines Secure-Keys (auf Web via prefs).
+  Future<bool> containsSecure(String key) async {
+    await init();
+    final k = _nsKey(key);
+    try {
+      if (_secure != null) {
+        final v = await _secure!.read(key: k);
+        return v != null;
+      } else {
+        return (_prefs?.getKeys() ?? const <String>{}).contains(k);
+      }
+    } catch (e) {
+      _log('containsSecure("$key") failed: $e');
+      return false;
+    }
+  }
 
-  Future<String?> loadSecure(String key) async =>
-      await _secure.read(key: key);
+  Future<void> deleteSecure(String key) async {
+    await init();
+    final k = _nsKey(key);
+    try {
+      if (_secure != null) {
+        await _secure!.delete(key: k);
+      } else {
+        await _prefs?.remove(k); // Web-Fallback
+      }
+    } catch (e) {
+      _log('deleteSecure("$key") failed: $e');
+    }
+  }
+
+  // ----------------- SHARED PREFS: Strings & StringList -----------------
 
-  Future<void> deleteSecure(String key) async =>
-      await _secure.delete(key: key);
+  Future<bool> setString(String key, String value) async {
+    await init();
+    try {
+      return await _prefs?.setString(_nsKey(key), value) ?? false;
+    } catch (e) {
+      _log('setString("$key") failed: $e');
+      return false;
+    }
+  }
 
-  // --- SHARED PREFERENCES: für Userdaten, Mood, Settings etc. ---
-  Future<void> saveJson(String key, dynamic value) async {
-    final prefs = await SharedPreferences.getInstance();
-    await prefs.setString(key, jsonEncode(value));
+  Future<String?> getString(String key) async {
+    await init();
+    try {
+      return _prefs?.getString(_nsKey(key));
+    } catch (e) {
+      _log('getString("$key") failed: $e');
+      return null;
+    }
+  }
+
+  Future<bool> setStringList(String key, List<String> values) async {
+    await init();
+    try {
+      return await _prefs?.setStringList(_nsKey(key), values) ?? false;
+    } catch (e) {
+      _log('setStringList("$key") failed: $e');
+      return false;
+    }
+  }
+
+  Future<List<String>?> getStringList(String key) async {
+    await init();
+    try {
+      return _prefs?.getStringList(_nsKey(key));
+    } catch (e) {
+      _log('getStringList("$key") failed: $e');
+      return null;
+    }
+  }
+
+  Future<bool> remove(String key) async {
+    await init();
+    try {
+      return await _prefs?.remove(_nsKey(key)) ?? false;
+    } catch (e) {
+      _log('remove("$key") failed: $e');
+      return false;
+    }
+  }
+
+  /// Entfernt mehrere Schlüssel im Namespace – robust mit bool-Akkumulator.
+  Future<bool> removeMany(Iterable<String> keys) async {
+    await init();
+    var ok = true;
+    for (final k in keys) {
+      final removed = await (_prefs?.remove(_nsKey(k)) ?? Future.value(false));
+      ok = ok && removed;
+    }
+    return ok;
   }
 
+  /// Entfernt alle Keys, die mit dem (namespaced) Prefix beginnen.
+  Future<int> removeWithPrefix(String prefix) async {
+    await init();
+    final p = _nsKey(prefix);
+    var count = 0;
+    try {
+      final keys = _prefs?.getKeys() ?? const <String>{};
+      for (final k in keys) {
+        if (k.startsWith(p)) {
+          final r = await _prefs?.remove(k) ?? false;
+          if (r) count++;
+        }
+      }
+    } catch (e) {
+      _log('removeWithPrefix("$prefix") failed: $e');
+    }
+    return count;
+  }
+
+  // ----------------- SHARED PREFS: JSON generisch -----------------
+
+  Future<bool> saveJson(String key, dynamic value) async {
+    await init();
+    try {
+      final encoded = jsonEncode(value);
+      return await _prefs?.setString(_nsKey(key), encoded) ?? false;
+    } catch (e) {
+      _log('saveJson("$key") failed: $e');
+      return false;
+    }
+  }
+
+  /// Lädt JSON; optional mit [fromJson] transformieren.
+  /// Beispiel: final list = await loadJson<List<dynamic>>('key', null);
   Future<T?> loadJson<T>(String key, T Function(dynamic)? fromJson) async {
-    final prefs = await SharedPreferences.getInstance();
-    final str = prefs.getString(key);
-    if (str == null) return null;
-    final decoded = jsonDecode(str);
-    return fromJson != null ? fromJson(decoded) : decoded as T;
+    await init();
+    try {
+      final str = _prefs?.getString(_nsKey(key));
+      if (str == null) return null;
+      final decoded = jsonDecode(str);
+      return fromJson != null ? fromJson(decoded) : decoded as T;
+    } catch (e) {
+      _log('loadJson("$key") failed: $e');
+      return null;
+    }
   }
 
-  Future<void> delete(String key) async {
-    final prefs = await SharedPreferences.getInstance();
-    await prefs.remove(key);
+  // ----------------- SHARED PREFS: Typed Settings -----------------
+
+  Future<void> saveSetting<T>(String key, T value) async {
+    await init();
+    try {
+      final k = _nsKey(key);
+      if (value is bool) {
+        await _prefs?.setBool(k, value);
+      } else if (value is int) {
+        await _prefs?.setInt(k, value);
+      } else if (value is double) {
+        await _prefs?.setDouble(k, value);
+      } else if (value is String) {
+        await _prefs?.setString(k, value);
+      } else {
+        await _prefs?.setString(k, jsonEncode(value));
+      }
+    } catch (e) {
+      _log('saveSetting("$key") failed: $e');
+    }
   }
 
-  // --- LISTEN/OBJ SPEZIAL: MoodEntries, ReflectionEntries, User ---
+  Future<T?> loadSetting<T>(String key) async {
+    await init();
+    try {
+      final raw = _prefs?.get(_nsKey(key));
+      if (raw is String && T != String) {
+        try {
+          final decoded = jsonDecode(raw);
+          return decoded as T;
+        } catch (_) {
+          return null;
+        }
+      }
+      return raw as T?;
+    } catch (e) {
+      _log('loadSetting("$key") failed: $e');
+      return null;
+    }
+  }
+
+  // Optionale kurze Typ-API:
+  Future<bool?> getBool(String key) async => loadSetting<bool>(key);
+  Future<int?> getInt(String key) async => loadSetting<int>(key);
+  Future<double?> getDouble(String key) async => loadSetting<double>(key);
+  Future<void> setBool(String key, bool v) async => saveSetting<bool>(key, v);
+  Future<void> setInt(String key, int v) async => saveSetting<int>(key, v);
+  Future<void> setDouble(String key, double v) async => saveSetting<double>(key, v);
+
+  // ----------------- SHARED PREFS: Listen/Objekte (Generic Repos) -----------------
+
   Future<void> saveList<T>(
     String key,
     List<T> items,
     Map<String, dynamic> Function(T) toJson,
   ) async {
-    final list = items.map((e) => toJson(e)).toList();
-    await saveJson(key, list);
+    try {
+      final list = items.map((e) => toJson(e)).toList();
+      await saveJson(key, list);
+    } catch (e) {
+      _log('saveList("$key") failed: $e');
+    }
   }
 
   Future<List<T>> loadList<T>(
     String key,
     T Function(Map<String, dynamic>) fromJson,
   ) async {
-    final raw = await loadJson<List<dynamic>>(key, null);
-    if (raw == null) return [];
-    return raw
-        .map<T>((e) => fromJson(Map<String, dynamic>.from(e)))
-        .toList();
+    try {
+      final raw = await loadJson<List<dynamic>>(key, null);
+      if (raw == null) return <T>[];
+      return raw
+          .map<T>((e) => fromJson(Map<String, dynamic>.from(e as Map)))
+          .toList(growable: false);
+    } catch (e) {
+      _log('loadList("$key") failed: $e');
+      return <T>[];
+    }
   }
 
-  // --- INDIVIDUELLE MODEL-HELPER (Mood, Reflection, User usw.) ---
+  // ----------------- DEDIZIERTE MODEL-HELPER -----------------
+
   Future<void> saveMoodEntries(List moods) async =>
-      await saveList('mood_entries', moods, (e) => e.toJson());
+      saveList('mood_entries', moods, (e) => (e as dynamic).toJson());
 
-  Future<List<T>> loadMoodEntries<T>(T Function(Map<String, dynamic>) fromJson) async =>
-      await loadList('mood_entries', fromJson);
+  Future<List<T>> loadMoodEntries<T>(
+          T Function(Map<String, dynamic>) fromJson) async =>
+      loadList('mood_entries', fromJson);
 
   Future<void> saveReflections(List reflections) async =>
-      await saveList('reflection_entries', reflections, (e) => e.toJson());
+      saveList('reflection_entries', reflections, (e) => (e as dynamic).toJson());
+
+  Future<List<T>> loadReflections<T>(
+          T Function(Map<String, dynamic>) fromJson) async =>
+      loadList('reflection_entries', fromJson);
+
+  // Journal-Entries (für JournalEntriesProvider.attachPersistence)
+  Future<void> saveJournalEntries(List entries) async =>
+      saveList('journal_entries', entries, (e) => (e as dynamic).toJson());
+
+  Future<List<T>> loadJournalEntries<T>(
+          T Function(Map<String, dynamic>) fromJson) async =>
+      loadList('journal_entries', fromJson);
 
-  Future<List<T>> loadReflections<T>(T Function(Map<String, dynamic>) fromJson) async =>
-      await loadList('reflection_entries', fromJson);
+  // ----------------- Backup / Restore / Migration -----------------
 
-  // --- SETTINGS: Dark Mode, Color Blind, Large Text etc. ---
-  Future<void> saveSetting(String key, dynamic value) async {
-    final prefs = await SharedPreferences.getInstance();
-    if (value is bool) await prefs.setBool(key, value);
-    else if (value is int) await prefs.setInt(key, value);
-    else if (value is double) await prefs.setDouble(key, value);
-    else if (value is String) await prefs.setString(key, value);
-    else await prefs.setString(key, jsonEncode(value));
+  /// Exportiert ALLE Keys im Namespace als Map<String, dynamic>.
+  /// Achtung: SecureStorage-Werte sind nicht enthalten (kein Key-Listing).
+  Future<Map<String, dynamic>> exportNamespace() async {
+    await init();
+    final dump = <String, dynamic>{};
+    try {
+      final keys = _prefs?.getKeys() ?? const <String>{};
+      for (final k in keys) {
+        if (!k.startsWith(_ns)) continue;
+        final v = _prefs?.get(k);
+        dump[k] = v;
+      }
+    } catch (e) {
+      _log('exportNamespace failed: $e');
+    }
+    return dump;
   }
 
-  Future<T?> loadSetting<T>(String key) async {
-    final prefs = await SharedPreferences.getInstance();
-    var result = prefs.get(key);
-    // Fallback für komplexere Typen
-    if (result is String && T != String) {
-      try {
-        final decoded = jsonDecode(result);
-        return decoded as T;
-      } catch (_) {
-        return null;
+  /// Importiert (überschreibt) einen zuvor exportierten Namespace-Dump.
+  /// Nicht-namespacete Keys werden ignoriert.
+  Future<void> importNamespace(Map<String, dynamic> dump) async {
+    await init();
+    try {
+      for (final entry in dump.entries) {
+        final k = entry.key;
+        final v = entry.value;
+        if (!k.startsWith(_ns)) continue;
+        if (v is bool) {
+          await _prefs?.setBool(k, v);
+        } else if (v is int) {
+          await _prefs?.setInt(k, v);
+        } else if (v is double) {
+          await _prefs?.setDouble(k, v);
+        } else if (v is String) {
+          await _prefs?.setString(k, v);
+        } else if (v is List<String>) {
+          await _prefs?.setStringList(k, v);
+        } else {
+          await _prefs?.setString(k, jsonEncode(v)); // Fallback
+        }
+      }
+    } catch (e) {
+      _log('importNamespace failed: $e');
+    }
+  }
+
+  /// Benennt Keys im Namespace um (z. B. bei Refactoring).
+  /// Beispiel: migrateKeys({'old_key':'new_key'})
+  Future<void> migrateKeys(Map<String, String> renames) async {
+    await init();
+    try {
+      for (final ent in renames.entries) {
+        final oldK = _nsKey(ent.key);
+        final newK = _nsKey(ent.value);
+        if (!(_prefs?.getKeys() ?? const <String>{}).contains(oldK)) continue;
+        final v = _prefs?.get(oldK);
+        if (v == null) continue;
+
+        if (v is bool) {
+          await _prefs?.setBool(newK, v);
+        } else if (v is int) {
+          await _prefs?.setInt(newK, v);
+        } else if (v is double) {
+          await _prefs?.setDouble(newK, v);
+        } else if (v is String) {
+          await _prefs?.setString(newK, v);
+        } else if (v is List<String>) {
+          await _prefs?.setStringList(newK, v);
+        } else {
+          await _prefs?.setString(newK, jsonEncode(v));
+        }
+        await _prefs?.remove(oldK);
       }
+    } catch (e) {
+      _log('migrateKeys failed: $e');
     }
-    return result as T?;
   }
 
-  // --- CLEANUP ---
+  // ----------------- Hausputz -----------------
+
+  /// Entfernt **alle** gespeicherten Daten in SharedPreferences & SecureStorage.
   Future<void> clearAll() async {
-    final prefs = await SharedPreferences.getInstance();
-    await prefs.clear();
-    await _secure.deleteAll();
+    await init();
+    try {
+      await _prefs?.clear();
+      if (_secure != null) {
+        await _secure!.deleteAll();
+      }
+    } catch (e) {
+      _log('clearAll failed: $e');
+    }
+  }
+
+  /// Entfernt **nur** Keys im Zen-Namespace (empfohlen).
+  Future<void> clearNamespace() async {
+    await init();
+    try {
+      final keys = _prefs?.getKeys() ?? const <String>{};
+      for (final k in keys) {
+        if (k.startsWith(_ns)) {
+          await _prefs?.remove(k);
+        }
+      }
+      // flutter_secure_storage: kein Key-Listing → falls nötig, gezielt löschen.
+      // Beispiel:
+      // await _secure?.delete(key: _nsKey('auth_token'));
+      // await _secure?.delete(key: _nsKey('refresh_token'));
+    } catch (e) {
+      _log('clearNamespace failed: $e');
+    }
+  }
+
+  // ----------------- Utils / Extras -----------------
+
+  /// Prüft, ob ein (namespaceder) Key existiert.
+  Future<bool> containsKey(String key) async {
+    await init();
+    return (_prefs?.getKeys() ?? const <String>{}).contains(_nsKey(key));
+  }
+
+  /// Listet alle Keys, die mit einem Prefix (im Namespace) beginnen.
+  Future<List<String>> keysWithPrefix(String prefix) async {
+    await init();
+    final p = _nsKey(prefix);
+    return (_prefs?.getKeys() ?? const <String>{})
+        .where((k) => k.startsWith(p))
+        .toList(growable: false);
+  }
+
+  String _nsKey(String raw) => raw.startsWith(_ns) ? raw : '$_ns$raw';
+
+  void _log(String msg) {
+    if (kDebugMode) {
+      // Keine PII (Tokens, Passwörter etc.) loggen.
+      // ignore: avoid_print
+      print('[LocalStorage] $msg');
+    }
   }
 }
diff --git a/zen_project1337/lib/shared/ui/zen_widgets.dart b/zen_project1337/lib/shared/ui/zen_widgets.dart
index f179433..56fbea0 100644
--- a/zen_project1337/lib/shared/ui/zen_widgets.dart
+++ b/zen_project1337/lib/shared/ui/zen_widgets.dart
@@ -1,182 +1,1063 @@
 // lib/shared/ui/zen_widgets.dart
+//
+// Oxford–Zen UI Widgets (v6.46 · 2025-09-04)
+// ---------------------------------------------------------------------------
+// • ZenAppScaffold: optionaler Backdrop, responsive Max-Width.
+// • ZenSafeImage.asset: robustes Asset-Image mit Fallback (kein Crash).
+// • ZenAppBar: integrierter Top-Fade (ohne externe Overlays-Abhängigkeit).
+// • Buttons/Chips konsistent zu Tokens in zen_style.dart.
+// • Keine breaking changes zu v6.40; API bleibt kompatibel.
+//
+// Abhängigkeiten (pubspec):
+//   lottie: ^3.3.1
+//   flutter_svg: ^2.0.10
+
+import 'dart:ui' show ImageFilter;
 import 'package:flutter/material.dart';
 import 'package:lottie/lottie.dart';
 import 'package:flutter_svg/flutter_svg.dart';
+import '../../shared/zen_style.dart' hide ZenBackdrop, ZenGlassCard, ZenGlassInput;
 
-/// Zentrale Farbpalette, überall einsetzbar (am besten via Theme oder Provider)
-class ZenColors {
-  static const Color oxfordBlue = Color(0xFF002147);
-  static const Color jadeGreen = Color(0xFFA5CBA1);
-  static const Color zenWhite = Color(0xFFF8F9FB);
-  static const Color sand = Color(0xFFF5E8C7);
-  static const Color gold = Color(0xFFFFD580);
-  static const Color deepGrey = Color(0xFF263143);
-}
-
-/// Typografie für ruhige, edle Zen-Optik
-class ZenTypography {
-  static const headline = TextStyle(
-    fontFamily: "NotoSans",
-    fontWeight: FontWeight.w800,
-    fontSize: 26,
-    color: ZenColors.oxfordBlue,
-    letterSpacing: 0.6,
-  );
-  static const subhead = TextStyle(
-    fontFamily: "NotoSans",
-    fontWeight: FontWeight.w600,
-    fontSize: 19,
-    color: ZenColors.jadeGreen,
-  );
-  static const body = TextStyle(
-    fontFamily: "NotoSans",
-    fontWeight: FontWeight.w400,
-    fontSize: 16,
-    color: ZenColors.deepGrey,
-  );
-  static const quote = TextStyle(
-    fontFamily: "NotoSans",
-    fontWeight: FontWeight.w400,
-    fontSize: 17,
-    fontStyle: FontStyle.italic,
-    color: ZenColors.oxfordBlue,
-    height: 1.6,
-  );
-}
-
-/// Zen-Button – ruhig, großflächig, extrem UX-stark
-class ZenButton extends StatelessWidget {
-  final String label;
-  final VoidCallback onPressed;
-  final Color? color;
-  final IconData? icon;
-  final bool filled;
+// Re-export (Kompatibilität: ZenFormat weiterhin über dieses File nutzbar)
+export '../../shared/zen_style.dart' show ZenFormat;
+
+/// interne Animations-Dauer (vereinheitlicht)
+const Duration _animMed = Duration(milliseconds: 240);
+
+/// ======================================================================
+/// ZEN APP SCAFFOLD — optionaler Backdrop & responsive Breite
+/// ======================================================================
+class ZenAppScaffold extends StatelessWidget {
+  final PreferredSizeWidget? appBar;
+  final Widget body;
+
+  /// Optional: Hintergrundbild (Artwork). Wenn null → nur Theme-Hintergrund.
+  final String? backdropAsset;
+
+  /// Maximalbreite des Inhaltsbereichs (z. B. Tablet/Desktop)
+  final double maxBodyWidth;
+
+  /// Innenabstand um den Body herum
+  final EdgeInsets bodyPadding;
+
+  const ZenAppScaffold({
+    super.key,
+    this.appBar,
+    required this.body,
+    this.backdropAsset,
+    this.maxBodyWidth = 720,
+    this.bodyPadding = const EdgeInsets.fromLTRB(16, 12, 16, 24),
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final content = Center(
+      child: ConstrainedBox(
+        constraints: BoxConstraints(maxWidth: maxBodyWidth),
+        child: Padding(padding: bodyPadding, child: body),
+      ),
+    );
+
+    return Scaffold(
+      extendBodyBehindAppBar: true,
+      appBar: appBar,
+      body: Stack(
+        fit: StackFit.expand,
+        children: [
+          if (backdropAsset != null)
+            ZenBackdrop(
+              asset: backdropAsset!,
+              wash: .06,
+              saturation: .95,
+              glow: .28,
+              vignette: .12,
+            )
+          else
+            const DecoratedBox(decoration: BoxDecoration(color: ZenColors.bg)),
+          content,
+        ],
+      ),
+    );
+  }
+}
+
+/// ======================================================================
+/// SAFE IMAGE — robustes Asset-Image mit Fallback (kein Crash)
+/// ======================================================================
+class ZenSafeImage extends StatelessWidget {
+  final String asset;
   final double? width;
   final double? height;
-  final double borderRadius;
-  final TextStyle? style;
+  final BoxFit fit;
+  final Alignment alignment;
+  final Widget? fallback;
 
-  const ZenButton({
+  const ZenSafeImage.asset(
+    this.asset, {
     super.key,
-    required this.label,
-    required this.onPressed,
-    this.color,
-    this.icon,
-    this.filled = true,
     this.width,
-    this.height = 52,
-    this.borderRadius = 21,
-    this.style,
+    this.height,
+    this.fit = BoxFit.contain,
+    this.alignment = Alignment.center,
+    this.fallback,
   });
 
   @override
   Widget build(BuildContext context) {
-    final btnColor = color ?? ZenColors.oxfordBlue;
-    return SizedBox(
+    return Image.asset(
+      asset,
       width: width,
       height: height,
-      child: ElevatedButton.icon(
-        icon: icon != null ? Icon(icon, color: filled ? Colors.white : btnColor) : const SizedBox.shrink(),
-        label: Text(
-          label,
-          style: style ?? ZenTypography.body.copyWith(
-            color: filled ? Colors.white : btnColor,
-            fontWeight: FontWeight.w600,
-            fontSize: 17,
+      fit: fit,
+      alignment: alignment,
+      errorBuilder: (_, __, ___) => fallback ??
+          const Icon(Icons.image_not_supported_outlined,
+              color: ZenColors.jade, size: 28),
+    );
+  }
+}
+
+/// ======================================================================
+/// APP BAR — luftig, transparent, mit sanftem Top-Fade
+/// ======================================================================
+class ZenAppBar extends StatelessWidget implements PreferredSizeWidget {
+  final String? title;
+  final List<Widget>? actions;
+  final bool showBack;
+  final double elevation;
+
+  const ZenAppBar({
+    super.key,
+    this.title,
+    this.actions,
+    this.showBack = true,
+    this.elevation = 0,
+  });
+
+  @override
+  Size get preferredSize => const Size.fromHeight(56);
+
+  @override
+  Widget build(BuildContext context) {
+    final canPop = Navigator.canPop(context);
+
+    return Stack(
+      fit: StackFit.expand,
+      children: [
+        // Integrierter Top-Fade (ohne externe Overlay-Utility)
+        IgnorePointer(
+          child: Align(
+            alignment: Alignment.topCenter,
+            child: Container(
+              height: 72,
+              decoration: BoxDecoration(
+                gradient: LinearGradient(
+                  begin: Alignment.topCenter,
+                  end: Alignment.bottomCenter,
+                  colors: [
+                    Colors.white.withOpacity(.14),
+                    Colors.white.withOpacity(0),
+                  ],
+                ),
+              ),
+            ),
           ),
         ),
-        style: ElevatedButton.styleFrom(
-          backgroundColor: filled ? btnColor : Colors.transparent,
-          foregroundColor: btnColor,
-          elevation: filled ? 4 : 0,
-          shadowColor: filled ? btnColor.withOpacity(0.18) : Colors.transparent,
-          shape: RoundedRectangleBorder(
-            borderRadius: BorderRadius.circular(borderRadius),
-            side: filled
-                ? BorderSide.none
-                : BorderSide(color: btnColor, width: 2),
+        AppBar(
+          backgroundColor: Colors.transparent,
+          surfaceTintColor: Colors.transparent,
+          elevation: elevation,
+          centerTitle: true,
+          title: title != null
+              ? Text(title!, style: Theme.of(context).textTheme.headlineMedium)
+              : null,
+          actions: actions,
+          leading: showBack && canPop
+              ? IconButton(
+                  tooltip: 'Zurück',
+                  icon: const Icon(Icons.arrow_back_ios_new_rounded),
+                  onPressed: () => Navigator.maybePop(context),
+                )
+              : null,
+        ),
+      ],
+    );
+  }
+}
+
+/// ======================================================================
+/// PANDA HEADER — Brand-Moment (Panda + Titel + Caption)
+/// ======================================================================
+class PandaHeader extends StatelessWidget {
+  final String title;
+  final String? caption;
+  final double pandaSize;      // 88–112 empfohlen
+  final bool strongTitleGreen; // true → DeepSage, false → InkStrong
+
+  const PandaHeader({
+    super.key,
+    required this.title,
+    this.caption,
+    this.pandaSize = 96,
+    this.strongTitleGreen = true,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final tt = Theme.of(context).textTheme;
+
+    return Column(
+      children: [
+        _AnimatedPandaGlow(size: pandaSize),
+        const SizedBox(height: 6),
+        Text(
+          title,
+          textAlign: TextAlign.center,
+          style: tt.headlineMedium!.copyWith(
+            fontSize: 28,
+            color: strongTitleGreen ? ZenColors.deepSage : ZenColors.inkStrong,
+            fontWeight: FontWeight.w900,
+            letterSpacing: 0.1,
+            shadows: [
+              Shadow(
+                blurRadius: 8,
+                color: Colors.black.withOpacity(.08),
+                offset: const Offset(0, 2),
+              ),
+            ],
           ),
         ),
-        onPressed: onPressed,
+        if (caption != null) ...[
+          const SizedBox(height: 6),
+          Opacity(
+            opacity: 0.92,
+            child: Text(
+              caption!,
+              textAlign: TextAlign.center,
+              style: ZenTextStyles.caption.copyWith(
+                fontSize: 14.5,
+                color: ZenColors.sage,
+                fontStyle: FontStyle.italic,
+              ),
+            ),
+          ),
+        ],
+      ],
+    );
+  }
+}
+
+class _AnimatedPandaGlow extends StatefulWidget {
+  final double size;
+  const _AnimatedPandaGlow({required this.size});
+
+  @override
+  State<_AnimatedPandaGlow> createState() => _AnimatedPandaGlowState();
+}
+
+class _AnimatedPandaGlowState extends State<_AnimatedPandaGlow>
+    with SingleTickerProviderStateMixin {
+  late final AnimationController _glow;
+
+  @override
+  void initState() {
+    super.initState();
+    _glow = AnimationController(vsync: this, duration: const Duration(seconds: 3))
+      ..repeat(reverse: true);
+  }
+
+  @override
+  void dispose() {
+    _glow.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return AnimatedBuilder(
+      animation: _glow,
+      builder: (_, __) => Container(
+        margin: const EdgeInsets.only(top: 16, bottom: 8),
+        decoration: BoxDecoration(
+          shape: BoxShape.circle,
+          boxShadow: [
+            BoxShadow(
+              color: ZenColors.deepSage.withOpacity(0.10 + 0.17 * _glow.value),
+              blurRadius: 30 + 16 * _glow.value,
+              spreadRadius: 4 + 5 * _glow.value,
+            ),
+          ],
+        ),
+        child: ZenSafeImage.asset(
+          'assets/panda.png',
+          width: widget.size,
+          height: widget.size,
+          fallback: const Icon(Icons.pets, color: ZenColors.deepSage, size: 42),
+        ),
       ),
     );
   }
 }
 
-/// ZenCard – harmonischer Container für Reflexionen, Impulse, Mood etc.
-class ZenCard extends StatelessWidget {
+/// ======================================================================
+/// GLASS CARD — UI-Variante (parallel zu Primitives)
+// ======================================================================
+class ZenGlassCard extends StatelessWidget {
   final Widget child;
-  final double? width;
-  final EdgeInsetsGeometry? padding;
-  final Color? color;
-  final double elevation;
-  final double borderRadius;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final BorderRadius borderRadius;
 
-  const ZenCard({
+  /// Obere/untere Licht-Schicht (0..1)
+  final double topOpacity;
+  final double bottomOpacity;
+
+  /// Rahmen-Deckkraft (0..1)
+  final double borderOpacity;
+
+  const ZenGlassCard({
     super.key,
     required this.child,
-    this.width,
-    this.padding = const EdgeInsets.symmetric(vertical: 22, horizontal: 20),
-    this.color,
-    this.elevation = 4,
-    this.borderRadius = 26,
+    this.padding = const EdgeInsets.all(ZenSpacing.l),
+    this.margin = EdgeInsets.zero,
+    this.borderRadius = const BorderRadius.all(ZenRadii.l),
+    this.topOpacity = .24,
+    this.bottomOpacity = .10,
+    this.borderOpacity = .14,
   });
 
   @override
   Widget build(BuildContext context) {
-    return Center(
-      child: Card(
-        color: color ?? ZenColors.zenWhite,
-        elevation: elevation,
-        shadowColor: ZenColors.oxfordBlue.withOpacity(0.09),
-        shape: RoundedRectangleBorder(
-          borderRadius: BorderRadius.circular(borderRadius),
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+    final borderColor = isDark
+        ? Colors.white.withOpacity(borderOpacity)
+        : Colors.black.withOpacity(borderOpacity);
+
+    return Padding(
+      padding: margin,
+      child: ClipRRect(
+        borderRadius: borderRadius,
+        child: Stack(
+          children: [
+            BackdropFilter(
+              filter: ImageFilter.blur(sigmaX: 14, sigmaY: 14),
+              child: const SizedBox.shrink(),
+            ),
+            Positioned.fill(
+              child: IgnorePointer(
+                ignoring: true,
+                child: DecoratedBox(
+                  decoration: BoxDecoration(
+                    gradient: LinearGradient(
+                      begin: Alignment.topCenter,
+                      end: Alignment.bottomCenter,
+                      colors: [
+                        Colors.white.withOpacity(topOpacity),
+                        Colors.white.withOpacity(bottomOpacity),
+                      ],
+                    ),
+                  ),
+                ),
+              ),
+            ),
+            Container(
+              decoration: BoxDecoration(
+                borderRadius: borderRadius,
+                border: Border.all(color: borderColor, width: 1),
+                boxShadow: ZenShadows.card,
+              ),
+              padding: padding,
+              child: child,
+            ),
+          ],
         ),
-        child: Container(
-          width: width,
-          padding: padding,
-          child: child,
+      ),
+    );
+  }
+}
+
+/// ======================================================================
+/// GLASS INPUT — rahmt Textfelder im Glas-Stil
+/// ======================================================================
+class ZenGlassInput extends StatelessWidget {
+  final Widget child;
+  final EdgeInsetsGeometry padding;
+  final BorderRadius? borderRadius;
+
+  const ZenGlassInput({
+    super.key,
+    required this.child,
+    this.padding = const EdgeInsets.fromLTRB(12, 10, 12, 10),
+    this.borderRadius,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final br = borderRadius ?? const BorderRadius.all(ZenRadii.l);
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+
+    return ClipRRect(
+      borderRadius: br,
+      child: Stack(
+        children: [
+          BackdropFilter(
+            filter: ImageFilter.blur(sigmaX: 12, sigmaY: 12),
+            child: const SizedBox.shrink(),
+          ),
+          Container(
+            decoration: BoxDecoration(
+              borderRadius: br,
+              color: Colors.white.withOpacity(isDark ? .06 : .10),
+              border: Border.all(
+                color: isDark
+                    ? Colors.white.withOpacity(.12)
+                    : Colors.black.withOpacity(.08),
+                width: 1.2,
+              ),
+            ),
+            padding: padding,
+            child: child,
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+/// ======================================================================
+/// BACKDROP — Bild + Wash/Sättigung/Glow/Vignette/Haze (Widget-Variante)
+// ======================================================================
+class ZenBackdrop extends StatelessWidget {
+  final String asset;
+  final Alignment alignment;
+
+  /// 0..1 – heller Glow von der Mitte
+  final double glow;
+
+  /// 0..1 – Vignette-Randabdunklung
+  final double vignette;
+
+  /// Farbsättigung (1 = normal, <1 = „gebleached“)
+  final double saturation;
+
+  /// Weiß-Wash (0..1) als leichte Aufhellung
+  final double wash;
+
+  /// Haze-Blur-Layer aktivieren
+  final bool enableHaze;
+
+  /// Stärke des Haze (0..1)
+  final double hazeStrength;
+
+  const ZenBackdrop({
+    super.key,
+    required this.asset,
+    this.alignment = Alignment.center,
+    this.glow = .28,
+    this.vignette = .12,
+    this.saturation = .95,
+    this.wash = .08,
+    this.enableHaze = false,
+    this.hazeStrength = .12,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Stack(
+      children: [
+        // Bild mit Sättigungsfilter
+        Positioned.fill(
+          child: ColorFiltered(
+            colorFilter: _saturationFilter(saturation.clamp(0.0, 1.0)),
+            child: ZenSafeImage.asset(
+              asset,
+              fit: BoxFit.cover,
+              alignment: alignment,
+            ),
+          ),
+        ),
+
+        // Wash (Weißschleier)
+        if (wash > 0)
+          Positioned.fill(
+            child: Container(color: Colors.white.withOpacity(wash.clamp(0, 1))),
+          ),
+
+        // Glow (sanftes Aufhellen in der Mitte)
+        if (glow > 0)
+          Positioned.fill(
+            child: IgnorePointer(
+              child: DecoratedBox(
+                decoration: BoxDecoration(
+                  gradient: RadialGradient(
+                    center: alignment,
+                    radius: 1.0,
+                    colors: [
+                      Colors.white.withOpacity(glow.clamp(0, 1) * .55),
+                      Colors.transparent,
+                    ],
+                    stops: const [0.0, 1.0],
+                  ),
+                ),
+              ),
+            ),
+          ),
+
+        // Vignette (Randabdunklung)
+        if (vignette > 0)
+          Positioned.fill(
+            child: IgnorePointer(
+              child: DecoratedBox(
+                decoration: BoxDecoration(
+                  gradient: RadialGradient(
+                    center: Alignment.center,
+                    radius: 1.1,
+                    colors: [
+                      Colors.transparent,
+                      Colors.black.withOpacity(vignette.clamp(0, 1)),
+                    ],
+                    stops: const [0.65, 1.0],
+                  ),
+                ),
+              ),
+            ),
+          ),
+
+        // Haze (optional: milder Weichzeichner + leichter Weißfilm)
+        if (enableHaze)
+          Positioned.fill(
+            child: BackdropFilter(
+              filter: ImageFilter.blur(sigmaX: 8, sigmaY: 8),
+              child: Container(
+                color: Colors.white.withOpacity(hazeStrength.clamp(0, 1)),
+              ),
+            ),
+          ),
+      ],
+    );
+  }
+
+  // Sättigungs-Matrix (1 = original, 0 = grau)
+  ColorFilter _saturationFilter(double s) {
+    final inv = 1 - s;
+    final r = 0.213 * inv;
+    final g = 0.715 * inv;
+    final b = 0.072 * inv;
+    return ColorFilter.matrix(<double>[
+      r + s, g, b, 0, 0,
+      r, g + s, b, 0, 0,
+      r, g, b + s, 0, 0,
+      0, 0, 0, 1, 0,
+    ]);
+  }
+}
+
+/// ======================================================================
+/// HEADLINES & QUOTE
+/// ======================================================================
+class ZenHeadline extends StatelessWidget {
+  final String text;
+  const ZenHeadline(this.text, {super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Text(
+      text,
+      style: Theme.of(context).textTheme.headlineMedium!.copyWith(
+            fontWeight: FontWeight.w800,
+            fontSize: 22,
+            letterSpacing: .2,
+          ),
+    );
+  }
+}
+
+class ZenQuoteBanner extends StatelessWidget {
+  final String? text;
+  const ZenQuoteBanner({super.key, this.text});
+
+  @override
+  Widget build(BuildContext context) {
+    return ZenGlassCard(
+      borderRadius: const BorderRadius.all(ZenRadii.m),
+      child: Text(
+        text ?? 'ZenYourself – Dein Raum für Reflexion.',
+        style: ZenTextStyles.body.copyWith(
+          fontStyle: FontStyle.italic,
+          color: ZenColors.deepSage,
+          fontSize: 17,
         ),
       ),
     );
   }
 }
 
-/// ZenQuote – inspirierender Spruch/Impuls, animiert oder ruhig
-class ZenQuote extends StatelessWidget {
+/// ======================================================================
+/// PANDA-SPRECHBLASE (mit weichem Tail)
+// ======================================================================
+class ZenPandaSpeechBubble extends StatelessWidget {
   final String text;
-  final String? author;
-  final bool animate;
-  const ZenQuote({
+  final bool fromPanda; // Tail links/rechts
+  final EdgeInsets padding;
+  final double elevation;
+  final bool showTail;
+
+  const ZenPandaSpeechBubble({
     super.key,
     required this.text,
-    this.author,
-    this.animate = false,
+    this.fromPanda = true,
+    this.padding = const EdgeInsets.symmetric(vertical: 18, horizontal: 22),
+    this.elevation = 8,
+    this.showTail = true,
   });
 
   @override
   Widget build(BuildContext context) {
-    final child = Column(
-      crossAxisAlignment: CrossAxisAlignment.center,
-      children: [
-        Text("“$text”", style: ZenTypography.quote, textAlign: TextAlign.center),
-        if (author != null)
-          Padding(
-            padding: const EdgeInsets.only(top: 7.0),
-            child: Text("- $author", style: ZenTypography.body.copyWith(fontSize: 14, color: ZenColors.jadeGreen)),
+    final bg = Theme.of(context).colorScheme.surface.withOpacity(.96);
+
+    return AnimatedContainer(
+      duration: _animMed,
+      curve: Curves.easeOutCubic,
+      margin: const EdgeInsets.only(bottom: 16),
+      decoration: BoxDecoration(
+        color: bg,
+        borderRadius: const BorderRadius.all(ZenRadii.l),
+        boxShadow: [
+          BoxShadow(
+            color: Colors.black.withOpacity(.08),
+            blurRadius: elevation,
+            offset: const Offset(0, 6),
           ),
+        ],
+        border: Border.all(color: ZenColors.outline.withOpacity(.6)),
+      ),
+      padding: padding,
+      child: Stack(
+        clipBehavior: Clip.none,
+        children: [
+          Semantics(
+            label: 'Panda sagt',
+            child: Text(
+              text,
+              textAlign: TextAlign.left,
+              style: ZenTextStyles.body.copyWith(
+                fontSize: 17,
+                height: 1.44,
+                color: ZenColors.deepSage,
+              ),
+            ),
+          ),
+          if (showTail)
+            Positioned(
+              left: fromPanda ? 26 : null,
+              right: fromPanda ? null : 26,
+              bottom: -14,
+              child: CustomPaint(
+                painter: _BubbleTailPainter(
+                  fill: bg,
+                  stroke: ZenColors.outline.withOpacity(.6),
+                ),
+                size: const Size(26, 16),
+              ),
+            ),
+        ],
+      ),
+    );
+  }
+}
+
+class _BubbleTailPainter extends CustomPainter {
+  final Color fill;
+  final Color stroke;
+
+  _BubbleTailPainter({required this.fill, required this.stroke});
+
+  @override
+  void paint(Canvas canvas, Size size) {
+    final w = size.width, h = size.height;
+
+    final p = Path()
+      ..moveTo(0, h * .2)
+      ..quadraticBezierTo(w * .35, h * .05, w * .55, h * .45)
+      ..quadraticBezierTo(w * .74, h * .80, w, h)
+      ..quadraticBezierTo(w * .48, h * .70, 6, h - 2)
+      ..quadraticBezierTo(0, h * .65, 0, h * .2)
+      ..close();
+
+    final fillPaint = Paint()..color = fill;
+    final strokePaint = Paint()
+      ..color = stroke
+      ..style = PaintingStyle.stroke;
+
+    canvas.drawShadow(p, Colors.black.withOpacity(.18), 3, false);
+    canvas.drawPath(p, fillPaint);
+    canvas.drawPath(p, strokePaint);
+  }
+
+  @override
+  bool shouldRepaint(covariant _BubbleTailPainter oldDelegate) {
+    return oldDelegate.fill != fill || oldDelegate.stroke != stroke;
+  }
+}
+
+/// ======================================================================
+/// BUTTONS — Primary / Outline / Ghost / Danger
+/// ======================================================================
+class ZenPrimaryButton extends StatelessWidget {
+  final String label;
+  final VoidCallback? onPressed;
+  final IconData? icon;
+  final double height;
+  final double? width;
+
+  const ZenPrimaryButton({
+    super.key,
+    required this.label,
+    this.onPressed,
+    this.icon,
+    this.height = 52,
+    this.width,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final child = Row(
+      mainAxisSize: MainAxisSize.min,
+      children: [
+        if (icon != null) ...[
+          Icon(icon, size: 20, color: Colors.white),
+          const SizedBox(width: 10),
+        ],
+        Text(
+          label,
+          style: const TextStyle(fontWeight: FontWeight.w700, fontSize: 17, color: Colors.white),
+        ),
       ],
     );
-    return animate
-        ? AnimatedSwitcher(
-            duration: const Duration(milliseconds: 900),
-            child: child,
-          )
-        : child;
+
+    return ElevatedButton(
+      onPressed: onPressed,
+      style: ElevatedButton.styleFrom(
+        backgroundColor: ZenColors.cta,
+        foregroundColor: Colors.white,
+        minimumSize: Size(width ?? 0, height),
+        shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.l)),
+        elevation: 1.5,
+        padding: const EdgeInsets.symmetric(horizontal: 18),
+      ),
+      child: child,
+    );
+  }
+}
+
+class ZenOutlineButton extends StatelessWidget {
+  final String label;
+  final VoidCallback? onPressed;
+  final IconData? icon;
+  final double height;
+  final double? width;
+  final Color? color;
+
+  const ZenOutlineButton({
+    super.key,
+    required this.label,
+    this.onPressed,
+    this.icon,
+    this.height = 48,
+    this.width,
+    this.color,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final c = color ?? ZenColors.jade;
+    final child = Row(
+      mainAxisSize: MainAxisSize.min,
+      children: [
+        if (icon != null) ...[
+          Icon(icon, size: 20, color: c),
+          const SizedBox(width: 10),
+        ],
+        Text(
+          label,
+          style: TextStyle(fontWeight: FontWeight.w700, fontSize: 16, color: c),
+        ),
+      ],
+    );
+
+    return OutlinedButton(
+      onPressed: onPressed,
+      style: OutlinedButton.styleFrom(
+        foregroundColor: c,
+        side: BorderSide(color: c.withOpacity(.75), width: 1.1),
+        shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.l)),
+        minimumSize: Size(width ?? 0, height),
+        padding: const EdgeInsets.symmetric(horizontal: 14, vertical: 12),
+      ),
+      child: child,
+    );
+  }
+}
+
+class ZenGhostButton extends StatelessWidget {
+  final String label;
+  final VoidCallback? onPressed;
+  final IconData? icon;
+  final Color? color;
+
+  const ZenGhostButton({super.key, required this.label, this.onPressed, this.icon, this.color});
+
+  @override
+  Widget build(BuildContext context) {
+    final c = color ?? ZenColors.jade;
+    return TextButton.icon(
+      onPressed: onPressed,
+      icon: Icon(icon ?? Icons.play_arrow_rounded, size: 18, color: c),
+      label: Text(
+        label,
+        style: TextStyle(fontWeight: FontWeight.w600, color: c),
+      ),
+      style: TextButton.styleFrom(
+        minimumSize: const Size(0, 40),
+        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 8),
+        shape: const StadiumBorder(),
+      ),
+    );
+  }
+}
+
+class ZenGhostButtonDanger extends StatelessWidget {
+  final String label;
+  final VoidCallback? onPressed;
+
+  const ZenGhostButtonDanger({super.key, required this.label, this.onPressed});
+
+  @override
+  Widget build(BuildContext context) {
+    return TextButton.icon(
+      onPressed: onPressed,
+      icon: const Icon(Icons.delete_outline, size: 18, color: Colors.redAccent),
+      label: Text(
+        label,
+        style: const TextStyle(fontWeight: FontWeight.w700, color: Colors.redAccent),
+      ),
+      style: TextButton.styleFrom(
+        minimumSize: const Size(0, 40),
+        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 8),
+        shape: const StadiumBorder(),
+      ),
+    );
+  }
+}
+
+/// ======================================================================
+/// ACTION-CHIPS — dezente Varianten
+/// ======================================================================
+class ZenChipGhost extends StatelessWidget {
+  final String label;
+  final VoidCallback onPressed;
+  const ZenChipGhost({super.key, required this.label, required this.onPressed});
+
+  @override
+  Widget build(BuildContext context) {
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+    return ActionChip(
+      label: Text(label),
+      onPressed: onPressed,
+      backgroundColor: isDark
+          ? Colors.white.withOpacity(0.06)
+          : ZenColors.surfaceAlt.withOpacity(0.92),
+      labelStyle: Theme.of(context).textTheme.bodyMedium,
+      shape: StadiumBorder(side: BorderSide(color: ZenColors.outline)),
+      elevation: 0,
+      padding: const EdgeInsets.symmetric(
+        horizontal: ZenSpacing.chipPadH,
+        vertical: ZenSpacing.chipPadV,
+      ),
+      visualDensity: VisualDensity.compact,
+    );
+  }
+}
+
+class ZenChipPrimary extends StatelessWidget {
+  final String label;
+  final VoidCallback onPressed;
+  const ZenChipPrimary({super.key, required this.label, required this.onPressed});
+
+  @override
+  Widget build(BuildContext context) {
+    const c = ZenColors.cta;
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+    return ActionChip(
+      label: Text(label),
+      onPressed: onPressed,
+      backgroundColor: isDark ? c.withOpacity(0.14) : c.withOpacity(0.10),
+      labelStyle:
+          Theme.of(context).textTheme.bodyMedium!.copyWith(color: c, fontWeight: FontWeight.w600),
+      shape: StadiumBorder(side: BorderSide(color: c.withOpacity(0.55))),
+      elevation: 0,
+      padding: const EdgeInsets.symmetric(
+        horizontal: ZenSpacing.chipPadH,
+        vertical: ZenSpacing.chipPadV,
+      ),
+      visualDensity: VisualDensity.compact,
+    );
   }
 }
 
-/// ZenLottie – Lottie Animation, immer zentriert und barrierefrei
+class ZenChipOutline extends StatelessWidget {
+  final String label;
+  final VoidCallback onPressed;
+  final Color? color;
+  const ZenChipOutline({super.key, required this.label, required this.onPressed, this.color});
+
+  @override
+  Widget build(BuildContext context) {
+    final c = (color ?? ZenColors.inkStrong).withOpacity(0.9);
+    return ActionChip(
+      label: Text(label),
+      onPressed: onPressed,
+      backgroundColor: Colors.transparent,
+      labelStyle:
+          Theme.of(context).textTheme.bodyMedium!.copyWith(color: c, fontWeight: FontWeight.w600),
+      shape: StadiumBorder(side: BorderSide(color: ZenColors.outline)),
+      elevation: 0,
+      padding: const EdgeInsets.symmetric(
+        horizontal: ZenSpacing.chipPadH,
+        vertical: ZenSpacing.chipPadV,
+      ),
+      visualDensity: VisualDensity.compact,
+    );
+  }
+}
+
+/// ======================================================================
+/// CHOICE- & MOOD-CHIPS — für Composer/Timeline
+/// ======================================================================
+class ZenChoiceChip extends StatelessWidget {
+  final String label;
+  final bool selected;
+  final ValueChanged<bool>? onSelected;
+
+  const ZenChoiceChip({
+    super.key,
+    required this.label,
+    required this.selected,
+    this.onSelected,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    const green = ZenColors.jade;
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+    return FilterChip(
+      label: Text(
+        label,
+        style: Theme.of(context).textTheme.bodyMedium!.copyWith(
+              fontWeight: FontWeight.w700,
+              color: selected ? green : ZenColors.jadeMid,
+            ),
+      ),
+      selected: selected,
+      onSelected: onSelected,
+      side: BorderSide(color: selected ? green.withOpacity(.55) : Colors.transparent),
+      selectedColor: green.withOpacity(.10),
+      backgroundColor: (isDark ? Colors.white.withOpacity(.06) : Colors.white.withOpacity(.14)),
+      showCheckmark: false,
+      shape: const StadiumBorder(),
+      padding: const EdgeInsets.symmetric(
+        horizontal: ZenSpacing.chipPadH,
+        vertical: ZenSpacing.chipPadV,
+      ),
+      visualDensity: VisualDensity.compact,
+    );
+  }
+}
+
+class PandaMoodChip extends StatelessWidget {
+  final String mood; // 'Glücklich' | 'Ruhig' | ...
+  final bool small;
+  const PandaMoodChip({super.key, required this.mood, this.small = false});
+
+  static String _emoji(String m) {
+    switch (m) {
+      case 'Glücklich':
+        return '😊';
+      case 'Traurig':
+        return '😔';
+      case 'Ruhig':
+        return '🧘';
+      case 'Wütend':
+        return '😡';
+      case 'Gestresst':
+        return '😱';
+      case 'Neutral':
+        return '😐';
+      default:
+        return '📝';
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final e = _emoji(mood);
+    final fs = small ? 14.0 : 15.0;
+    final es = small ? 18.0 : 20.0;
+
+    return Container(
+      padding: EdgeInsets.symmetric(horizontal: small ? 8 : 10, vertical: small ? 4 : 6),
+      decoration: BoxDecoration(
+        color: ZenColors.sunHaze.withOpacity(.20),
+        borderRadius: BorderRadius.circular(12),
+        border: Border.all(color: ZenColors.outline.withOpacity(.60)),
+        boxShadow: const [BoxShadow(color: Color(0x14000000), blurRadius: 6)],
+      ),
+      child: Row(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          Text(e, style: TextStyle(fontSize: es)),
+          const SizedBox(width: 6),
+          Text(
+            mood,
+            style: TextStyle(
+              fontSize: fs,
+              fontWeight: FontWeight.w700,
+              color: ZenColors.jadeMid,
+              height: 1.0,
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+// Alias für Alt-Code, der noch ZenMoodChip nutzt
+class ZenMoodChip extends PandaMoodChip {
+  const ZenMoodChip({super.key, required String label})
+      : super(mood: label, small: false);
+  const ZenMoodChip.small({super.key, required String label})
+      : super(mood: label, small: true);
+}
+
+class PandaMoodRow extends StatelessWidget {
+  final List<String> moods; // Reihenfolge, z. B. ['Glücklich','Ruhig',...]
+  const PandaMoodRow({super.key, required this.moods});
+
+  @override
+  Widget build(BuildContext context) {
+    return Wrap(
+      spacing: 8,
+      runSpacing: 8,
+      alignment: WrapAlignment.center,
+      children: moods.map((m) => PandaMoodChip(mood: m)).toList(),
+    );
+  }
+}
+
+/// ======================================================================
+/// LOTTIE & SVG WRAPPER
+/// ======================================================================
 class ZenLottie extends StatelessWidget {
   final String asset;
   final double? width;
@@ -196,21 +1077,18 @@ class ZenLottie extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Semantics(
-      label: semanticsLabel ?? "Animierte Zen-Visualisierung",
-      child: Center(
-        child: Lottie.asset(
-          asset,
-          width: width,
-          height: height,
-          repeat: repeat,
-          fit: BoxFit.contain,
-        ),
+      label: semanticsLabel ?? 'Animierte Zen-Visualisierung',
+      child: Lottie.asset(
+        asset,
+        width: width,
+        height: height,
+        repeat: repeat,
+        fit: BoxFit.contain,
       ),
     );
   }
 }
 
-/// ZenSVG – für elegante Natur- oder Zen-Icons
 class ZenSVG extends StatelessWidget {
   final String asset;
   final double size;
@@ -220,7 +1098,7 @@ class ZenSVG extends StatelessWidget {
   const ZenSVG({
     super.key,
     required this.asset,
-    this.size = 28,
+    this.size = 30,
     this.color,
     this.semanticsLabel,
   });
@@ -228,199 +1106,396 @@ class ZenSVG extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Semantics(
-      label: semanticsLabel ?? "Zen Symbol",
+      label: semanticsLabel ?? 'Zen Symbol',
       child: SvgPicture.asset(
         asset,
         width: size,
         height: size,
-        colorFilter: color != null
-            ? ColorFilter.mode(color!, BlendMode.srcIn)
-            : null,
+        colorFilter: color != null ? ColorFilter.mode(color!, BlendMode.srcIn) : null,
       ),
     );
   }
 }
 
-// --------------- DUMMY-STUBS FÜR FEHLENDE WIDGETS ------------------
+/// ======================================================================
+/// INFOBAR — dezente Hinweisleiste + Action
+/// ======================================================================
+class ZenInfoBar extends StatelessWidget {
+  final String message;
+  final String? actionLabel;
+  final VoidCallback? onAction;
+  final Color? color;
 
-// AppBar im Zen-Stil
-class ZenAppBar extends StatelessWidget implements PreferredSizeWidget {
-  final String? title;
-  final List<Widget>? actions;
-  const ZenAppBar({super.key, this.title, this.actions});
-  @override
-  Widget build(BuildContext context) => AppBar(
-    title: Text(title ?? "Zen AppBar", style: ZenTypography.headline),
-    actions: actions,
-    backgroundColor: ZenColors.zenWhite,
-    foregroundColor: ZenColors.oxfordBlue,
-    elevation: 0.4,
-  );
-  @override
-  Size get preferredSize => const Size.fromHeight(56);
-}
+  const ZenInfoBar({
+    super.key,
+    required this.message,
+    this.actionLabel,
+    this.onAction,
+    this.color,
+  });
 
-class ZenAvatar extends StatelessWidget {
-  final double size;
-  final String? svgAsset;
-  const ZenAvatar({super.key, this.svgAsset, this.size = 40});
   @override
   Widget build(BuildContext context) {
-    if (svgAsset != null) {
-      return CircleAvatar(
-        radius: size/2,
-        backgroundColor: ZenColors.sand,
-        child: SvgPicture.asset(svgAsset!, width: size*0.7, height: size*0.7),
-      );
-    }
-    return CircleAvatar(radius: size/2, backgroundColor: ZenColors.sand, child: Icon(Icons.person, size: size*0.6));
+    final c = color ?? ZenColors.jade.withOpacity(.08);
+    return Container(
+      decoration: BoxDecoration(
+        color: c,
+        borderRadius: const BorderRadius.all(ZenRadii.m),
+        border: Border.all(color: ZenColors.jade.withOpacity(.20)),
+      ),
+      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
+      child: Row(
+        children: [
+          const Icon(Icons.info_outline, color: ZenColors.jade, size: 18),
+          const SizedBox(width: 8),
+          Expanded(
+            child: Text(
+              message,
+              style: ZenTextStyles.caption.copyWith(color: ZenColors.jade),
+            ),
+          ),
+          if (actionLabel != null && onAction != null)
+            TextButton(
+              onPressed: onAction,
+              style: TextButton.styleFrom(
+                minimumSize: const Size(0, 36),
+                padding: const EdgeInsets.symmetric(horizontal: 8),
+              ),
+              child: Text(
+                actionLabel!,
+                style: const TextStyle(fontWeight: FontWeight.w700, color: ZenColors.jade),
+              ),
+            ),
+        ],
+      ),
+    );
   }
 }
 
-class ZenDivider extends StatelessWidget {
-  const ZenDivider({super.key});
-  @override
-  Widget build(BuildContext context) => Divider(
-    color: ZenColors.oxfordBlue.withOpacity(0.1),
-    thickness: 1,
-    height: 32,
-  );
-}
+/// ======================================================================
+/// TEXTFIELD ACTION — Icon + Label, kompakt
+/// ======================================================================
+class ZenTextFieldAction extends StatelessWidget {
+  final IconData icon;
+  final String label;
+  final VoidCallback? onTap;
+
+  const ZenTextFieldAction({
+    super.key,
+    required this.icon,
+    required this.label,
+    this.onTap,
+  });
 
-class ZenHeadline extends StatelessWidget {
-  final String text;
-  const ZenHeadline(this.text, {super.key});
   @override
-  Widget build(BuildContext context) => Text(
-    text,
-    style: ZenTypography.headline,
-    textAlign: TextAlign.center,
-  );
+  Widget build(BuildContext context) {
+    return OutlinedButton.icon(
+      onPressed: onTap,
+      icon: Icon(icon, size: 18, color: ZenColors.jade),
+      label: Text(
+        label,
+        style: const TextStyle(fontWeight: FontWeight.w700, color: ZenColors.jade),
+      ),
+      style: OutlinedButton.styleFrom(
+        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
+        shape: const StadiumBorder(),
+        side: BorderSide(color: ZenColors.jade.withOpacity(.55), width: 1.2),
+        minimumSize: const Size(0, 42),
+      ),
+    );
+  }
 }
 
-class ZenDialog extends StatelessWidget {
-  final Widget child;
-  const ZenDialog({required this.child, super.key});
-  @override
-  Widget build(BuildContext context) => Dialog(
-    backgroundColor: ZenColors.zenWhite,
-    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(22)),
-    child: child,
-  );
+/// ======================================================================
+/// TOAST / SNACK
+/// ======================================================================
+class ZenToast {
+  static void show(BuildContext context, String msg) {
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Text(msg), // nutzt SnackBarTheme (weiß auf deep-sage)
+        behavior: SnackBarBehavior.floating,
+        duration: const Duration(seconds: 2),
+        shape: const RoundedRectangleBorder(
+          borderRadius: BorderRadius.all(ZenRadii.m),
+        ),
+      ),
+    );
+  }
 }
 
-class ZenExportButton extends StatelessWidget {
-  final String label;
-  final VoidCallback onPressed;
-  const ZenExportButton({super.key, required this.label, required this.onPressed});
+/// ======================================================================
+/// VOICE ICON BUTTON
+/// ======================================================================
+class ZenVoiceButton extends StatelessWidget {
+  final VoidCallback? onPressed;
+  const ZenVoiceButton({super.key, this.onPressed});
+
   @override
-  Widget build(BuildContext context) => ZenButton(label: label, onPressed: onPressed, icon: Icons.download);
+  Widget build(BuildContext context) {
+    return IconButton(
+      tooltip: 'Spracheingabe',
+      icon: const Icon(Icons.mic_rounded),
+      iconSize: 32,
+      color: ZenColors.deepSage,
+      onPressed: onPressed,
+    );
+  }
 }
 
-class ZenMilestoneIcon extends StatelessWidget {
-  final IconData icon;
-  final Color? color;
-  const ZenMilestoneIcon({super.key, this.icon = Icons.star, this.color});
+/// ======================================================================
+/// SUBTILES BRANDING-WASSERZEICHEN
+/// ======================================================================
+class ZenWatermark extends StatelessWidget {
+  final double fontSize;
+  final double opacity;
+
+  const ZenWatermark({
+    super.key,
+    this.fontSize = 12,
+    this.opacity = .14,
+  });
+
   @override
-  Widget build(BuildContext context) => Icon(icon, color: color ?? ZenColors.gold, size: 32);
+  Widget build(BuildContext context) {
+    return IgnorePointer(
+      child: Opacity(
+        opacity: opacity,
+        child: Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 4, vertical: 2),
+          child: Text(
+            'ZenYourself',
+            style: ZenTextStyles.title.copyWith(
+              fontSize: fontSize,
+              letterSpacing: 1.2,
+              color: ZenColors.deepSage,
+            ),
+          ),
+        ),
+      ),
+    );
+  }
 }
 
-class ZenQuoteBanner extends StatelessWidget {
-  final String? text;
-  const ZenQuoteBanner({super.key, this.text});
+/// ======================================================================
+/// LEVEL-UP BANNER (Optional)
+/// ======================================================================
+class ZenLevelUpBanner extends StatelessWidget {
+  final int level;
+  const ZenLevelUpBanner({required this.level, super.key});
+
   @override
-  Widget build(BuildContext context) => ZenCard(
-    child: Text(text ?? "ZenYourself – Dein Raum für Reflexion.", style: ZenTypography.subhead),
-  );
+  Widget build(BuildContext context) {
+    return ZenGlassCard(
+      padding: const EdgeInsets.symmetric(vertical: ZenSpacing.s, horizontal: ZenSpacing.m),
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          const Icon(Icons.emoji_events, color: ZenColors.deepSage, size: 28),
+          const SizedBox(width: 12),
+          Text(
+            'Level $level erreicht!',
+            style: Theme.of(context).textTheme.titleMedium!.copyWith(
+                  color: ZenColors.deepSage,
+                  fontWeight: FontWeight.w700,
+                ),
+          ),
+        ],
+      ),
+    );
+  }
 }
 
-class ZenLoadingOverlay extends StatelessWidget {
+/// ======================================================================
+/// ZENTRIERTES LOADING-OVERLAY — sanfter Dim + Glas-Badge
+/// ======================================================================
+class ZenCenteredLoadingOverlay extends StatelessWidget {
   final String text;
-  const ZenLoadingOverlay({super.key, required this.text});
+  final bool ignoreTouches;
+
+  const ZenCenteredLoadingOverlay({
+    super.key,
+    this.text = 'ZenYourself holt sein Buch heraus …',
+    this.ignoreTouches = true,
+  });
+
   @override
-  Widget build(BuildContext context) => Container(
-    color: Colors.black26,
-    alignment: Alignment.center,
-    child: Column(
-      mainAxisAlignment: MainAxisAlignment.center,
-      children: [
-        const CircularProgressIndicator(),
-        const SizedBox(height: 24),
-        Text(text, style: ZenTypography.body),
-      ],
-    ),
-  );
+  Widget build(BuildContext context) {
+    final topPad = MediaQuery.of(context).padding.top;
+    return Positioned.fill(
+      child: IgnorePointer(
+        ignoring: ignoreTouches,
+        child: Container(
+          color: Colors.black.withOpacity(0.08),
+          padding: EdgeInsets.only(top: topPad),
+          child: Center(
+            child: ConstrainedBox(
+              constraints: const BoxConstraints(minWidth: 280, maxWidth: 360),
+              child: ZenGlassCard(
+                padding: const EdgeInsets.fromLTRB(22, 18, 22, 18),
+                child: Row(
+                  mainAxisSize: MainAxisSize.min,
+                  children: [
+                    const SizedBox(
+                      width: 20,
+                      height: 20,
+                      child: CircularProgressIndicator(strokeWidth: 2.4),
+                    ),
+                    const SizedBox(width: 12),
+                    Flexible(
+                      child: Text(
+                        text,
+                        style: const TextStyle(fontSize: 15.5),
+                      ),
+                    ),
+                  ],
+                ),
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
 }
 
-class ZenResponseCard extends StatelessWidget {
-  final String text;
-  const ZenResponseCard({super.key, required this.text});
+/// ======================================================================
+/// BACKWARDS-COMPAT: ZenCard, ZenDialog, ZenBackground
+/// ======================================================================
+class ZenCard extends StatelessWidget {
+  final Widget child;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final double? width;
+  final double? height;
+  final bool glass; // aktiviert BackdropBlur
+  final bool showWatermark;
+  final double elevation;
+  final BorderRadius borderRadius;
+  final Color? color;
+
+  const ZenCard({
+    super.key,
+    required this.child,
+    this.padding = const EdgeInsets.symmetric(
+      horizontal: ZenSpacing.m,
+      vertical: ZenSpacing.m,
+    ),
+    this.margin = EdgeInsets.zero,
+    this.width,
+    this.height,
+    this.glass = false,
+       this.showWatermark = false,
+    this.elevation = 8,
+    this.borderRadius = const BorderRadius.all(ZenRadii.l),
+    this.color,
+  });
+
   @override
-  Widget build(BuildContext context) => ZenCard(child: Text(text, style: ZenTypography.body));
+  Widget build(BuildContext context) {
+    if (glass) {
+      return ZenGlassCard(
+        margin: margin,
+        padding: padding,
+        borderRadius: borderRadius,
+        child: _CardInner(
+          child: child,
+          width: width,
+          height: height,
+          elevation: elevation,
+          showWatermark: showWatermark,
+          bgColor: null, // ZenGlassCard liefert den Fond
+          borderRadius: borderRadius,
+        ),
+      );
+    }
+
+    return Padding(
+      padding: margin,
+      child: _CardInner(
+        child: child,
+        width: width,
+        height: height,
+        elevation: elevation,
+        showWatermark: showWatermark,
+        bgColor: color ?? Theme.of(context).colorScheme.surface,
+        borderRadius: borderRadius,
+      ),
+    );
+  }
 }
 
-class ZenMoodPicker extends StatelessWidget {
-  final void Function(String)? onSelect;
-  const ZenMoodPicker({super.key, this.onSelect});
+class _CardInner extends StatelessWidget {
+  final Widget child;
+  final double? width;
+  final double? height;
+  final double elevation;
+  final bool showWatermark;
+  final Color? bgColor;
+  final BorderRadius borderRadius;
+
+  const _CardInner({
+    required this.child,
+    required this.width,
+    required this.height,
+    required this.elevation,
+    required this.showWatermark,
+    required this.bgColor,
+    required this.borderRadius,
+  });
+
   @override
-  Widget build(BuildContext context) => ZenCard(
-    child: Row(
-      mainAxisAlignment: MainAxisAlignment.spaceAround,
+  Widget build(BuildContext context) {
+    final isDark = Theme.of(context).brightness == Brightness.dark;
+    final card = Container(
+      width: width,
+      height: height,
+      clipBehavior: Clip.antiAlias,
+      decoration: BoxDecoration(
+        color: bgColor,
+        borderRadius: borderRadius,
+        boxShadow: ZenShadows.card,
+        border: Border.all(
+          color: isDark ? Colors.white.withOpacity(.05) : Colors.black.withOpacity(.03),
+        ),
+      ),
+      child: child,
+    );
+
+    return Stack(
       children: [
-        IconButton(icon: const Icon(Icons.wb_sunny), onPressed: () => onSelect?.call('sun')),
-        IconButton(icon: const Icon(Icons.cloud), onPressed: () => onSelect?.call('cloud')),
-        IconButton(icon: const Icon(Icons.grain), onPressed: () => onSelect?.call('rain')),
-        IconButton(icon: const Icon(Icons.eco), onPressed: () => onSelect?.call('leaf')),
-        IconButton(icon: const Icon(Icons.change_history), onPressed: () => onSelect?.call('swirl')),
+        if (showWatermark)
+          const Positioned(
+            left: 10,
+            top: 8,
+            child: ZenWatermark(fontSize: 11, opacity: 0.18),
+          ),
+        card,
       ],
-    ),
-  );
-}
-
-class ZenToast {
-  static void show(BuildContext context, String msg) {
-    ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(content: Text(msg, style: ZenTypography.body)),
     );
   }
 }
 
-class ZenInputHint extends StatelessWidget {
-  const ZenInputHint({super.key});
-  @override
-  Widget build(BuildContext context) => Padding(
-    padding: const EdgeInsets.all(8.0),
-    child: Text(
-      "Gib hier deine Reflexion ein …",
-      style: ZenTypography.body.copyWith(color: ZenColors.oxfordBlue.withOpacity(0.6)),
-    ),
-  );
-}
+class ZenDialog extends StatelessWidget {
+  final Widget child;
+  const ZenDialog({super.key, required this.child});
 
-class ZenVoiceButton extends StatelessWidget {
-  final VoidCallback? onPressed;
-  const ZenVoiceButton({super.key, this.onPressed});
   @override
-  Widget build(BuildContext context) => IconButton(
-    icon: const Icon(Icons.mic),
-    onPressed: onPressed,
-    tooltip: "Spracheingabe",
-    iconSize: 34,
-    color: ZenColors.jadeGreen,
-  );
+  Widget build(BuildContext context) {
+    return Dialog(
+      backgroundColor: ZenColors.surface,
+      shape: const RoundedRectangleBorder(borderRadius: BorderRadius.all(ZenRadii.m)),
+      child: child,
+    );
+  }
 }
 
 class ZenBackground extends StatelessWidget {
   const ZenBackground({super.key});
   @override
-  Widget build(BuildContext context) => Container(
-    decoration: const BoxDecoration(
-      color: ZenColors.zenWhite,
-      // Optional: Background-Pattern als Bild
-      // image: DecorationImage(
-      //   image: AssetImage('assets/zen_pattern.png'),
-      //   fit: BoxFit.cover,
-      // ),
-    ),
-  );
-}
\ No newline at end of file
+  Widget build(BuildContext context) {
+    return const DecoratedBox(
+      decoration: BoxDecoration(color: ZenColors.bg),
+    );
+  }
+}
diff --git a/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux b/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux
deleted file mode 120000
index 812f06f..0000000
--- a/zen_project1337/linux/flutter/ephemeral/.plugin_symlinks/audioplayers_linux
+++ /dev/null
@@ -1 +0,0 @@
-/home/matth/.pub-cache/hosted/pub.dev/audioplayers_linux-4.2.1/
\ No newline at end of file
diff --git a/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h b/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h
index e6e1736..47c100e 100644
--- a/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h
+++ b/zen_project1337/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h
@@ -128,6 +128,38 @@ void fl_dart_project_set_dart_entrypoint_arguments(FlDartProject* project,
  */
 gchar** fl_dart_project_get_dart_entrypoint_arguments(FlDartProject* project);
 
+/**
+ * FlUIThreadPolicy:
+ * Configures the thread policy for running the UI isolate.
+ * @FL_UI_THREAD_POLICY_DEFAULT: Defaut value. Currently will run the UI isolate
+ * on separate thread, later will change to run on platform thread.
+ * @FL_UI_THREAD_POLICY_RUN_ON_PLATFORM_THREAD: Run the UI isolate on the
+ * platform thread.
+ * @FL_UI_THREAD_POLICY_RUN_ON_SEPARATE_THREAD: Run the UI isolate on a separate
+ * thread.
+ */
+typedef enum {
+  FL_UI_THREAD_POLICY_DEFAULT,
+  FL_UI_THREAD_POLICY_RUN_ON_PLATFORM_THREAD,
+  FL_UI_THREAD_POLICY_RUN_ON_SEPARATE_THREAD,
+} FlUIThreadPolicy;
+
+/**
+ * fl_dart_project_set_ui_thread_policy:
+ * @project: an #FlDartProject.
+ * @policy: the thread policy to use for running the UI isolate.
+ */
+void fl_dart_project_set_ui_thread_policy(FlDartProject* project,
+                                          FlUIThreadPolicy policy);
+
+/**
+ * fl_dart_project_get_ui_thread_policy:
+ * @project: an #FlDartProject.
+ *
+ * Returns: the thread policy used for running the UI isolate.
+ */
+FlUIThreadPolicy fl_dart_project_get_ui_thread_policy(FlDartProject* project);
+
 G_END_DECLS
 
 #endif  // FLUTTER_SHELL_PLATFORM_LINUX_PUBLIC_FLUTTER_LINUX_FL_DART_PROJECT_H_
diff --git a/zen_project1337/linux/flutter/ephemeral/generated_config.cmake b/zen_project1337/linux/flutter/ephemeral/generated_config.cmake
index 8df45cb..810cadf 100644
--- a/zen_project1337/linux/flutter/ephemeral/generated_config.cmake
+++ b/zen_project1337/linux/flutter/ephemeral/generated_config.cmake
@@ -12,7 +12,7 @@ set(FLUTTER_VERSION_BUILD 1 PARENT_SCOPE)
 list(APPEND FLUTTER_TOOL_ENVIRONMENT
   "FLUTTER_ROOT=/home/matth/flutter"
   "PROJECT_DIR=/home/matth/zen_project1337"
-  "DART_DEFINES=RkxVVFRFUl9WRVJTSU9OPTMuMzIuOA==,RkxVVFRFUl9DSEFOTkVMPXN0YWJsZQ==,RkxVVFRFUl9HSVRfVVJMPWh0dHBzOi8vZ2l0aHViLmNvbS9mbHV0dGVyL2ZsdXR0ZXIuZ2l0,RkxVVFRFUl9GUkFNRVdPUktfUkVWSVNJT049ZWRhZGE3YzU2ZQ==,RkxVVFRFUl9FTkdJTkVfUkVWSVNJT049ZWYwY2QwMDA5MQ==,RkxVVFRFUl9EQVJUX1ZFUlNJT049My44LjE="
+  "DART_DEFINES=RkxVVFRFUl9WRVJTSU9OPTMuMzUuMC0wLjEucHJl,RkxVVFRFUl9DSEFOTkVMPWJldGE=,RkxVVFRFUl9HSVRfVVJMPWh0dHBzOi8vZ2l0aHViLmNvbS9mbHV0dGVyL2ZsdXR0ZXIuZ2l0,RkxVVFRFUl9GUkFNRVdPUktfUkVWSVNJT049YzBmMmExZGQ2MA==,RkxVVFRFUl9FTkdJTkVfUkVWSVNJT049MWM5YzIwZTdjMw==,RkxVVFRFUl9EQVJUX1ZFUlNJT049My45LjAgKGJ1aWxkIDMuOS4wLTMzMy4yLmJldGEp"
   "DART_OBFUSCATION=false"
   "TRACK_WIDGET_CREATION=true"
   "TREE_SHAKE_ICONS=false"
diff --git a/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so b/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so
index 0070436..1057cce 100644
Binary files a/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so and b/zen_project1337/linux/flutter/ephemeral/libflutter_linux_gtk.so differ
diff --git a/zen_project1337/linux/flutter/generated_plugin_registrant.cc b/zen_project1337/linux/flutter/generated_plugin_registrant.cc
index ef9ba8a..38dd0bc 100644
--- a/zen_project1337/linux/flutter/generated_plugin_registrant.cc
+++ b/zen_project1337/linux/flutter/generated_plugin_registrant.cc
@@ -6,14 +6,10 @@
 
 #include "generated_plugin_registrant.h"
 
-#include <audioplayers_linux/audioplayers_linux_plugin.h>
 #include <flutter_secure_storage_linux/flutter_secure_storage_linux_plugin.h>
 #include <url_launcher_linux/url_launcher_plugin.h>
 
 void fl_register_plugins(FlPluginRegistry* registry) {
-  g_autoptr(FlPluginRegistrar) audioplayers_linux_registrar =
-      fl_plugin_registry_get_registrar_for_plugin(registry, "AudioplayersLinuxPlugin");
-  audioplayers_linux_plugin_register_with_registrar(audioplayers_linux_registrar);
   g_autoptr(FlPluginRegistrar) flutter_secure_storage_linux_registrar =
       fl_plugin_registry_get_registrar_for_plugin(registry, "FlutterSecureStorageLinuxPlugin");
   flutter_secure_storage_linux_plugin_register_with_registrar(flutter_secure_storage_linux_registrar);
diff --git a/zen_project1337/linux/flutter/generated_plugins.cmake b/zen_project1337/linux/flutter/generated_plugins.cmake
index 0044ef2..65240e9 100644
--- a/zen_project1337/linux/flutter/generated_plugins.cmake
+++ b/zen_project1337/linux/flutter/generated_plugins.cmake
@@ -3,7 +3,6 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
-  audioplayers_linux
   flutter_secure_storage_linux
   url_launcher_linux
 )
diff --git a/zen_project1337/macos/Flutter/GeneratedPluginRegistrant.swift b/zen_project1337/macos/Flutter/GeneratedPluginRegistrant.swift
index 732d8f0..7ad2f3d 100644
--- a/zen_project1337/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/zen_project1337/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -6,7 +6,6 @@ import FlutterMacOS
 import Foundation
 
 import audio_session
-import audioplayers_darwin
 import flutter_local_notifications
 import flutter_secure_storage_macos
 import just_audio
@@ -17,7 +16,6 @@ import speech_to_text
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
   AudioSessionPlugin.register(with: registry.registrar(forPlugin: "AudioSessionPlugin"))
-  AudioplayersDarwinPlugin.register(with: registry.registrar(forPlugin: "AudioplayersDarwinPlugin"))
   FlutterLocalNotificationsPlugin.register(with: registry.registrar(forPlugin: "FlutterLocalNotificationsPlugin"))
   FlutterSecureStoragePlugin.register(with: registry.registrar(forPlugin: "FlutterSecureStoragePlugin"))
   JustAudioPlugin.register(with: registry.registrar(forPlugin: "JustAudioPlugin"))
diff --git a/zen_project1337/macos/Flutter/ephemeral/Flutter-Generated.xcconfig b/zen_project1337/macos/Flutter/ephemeral/Flutter-Generated.xcconfig
index 7e55e65..340cdfb 100644
--- a/zen_project1337/macos/Flutter/ephemeral/Flutter-Generated.xcconfig
+++ b/zen_project1337/macos/Flutter/ephemeral/Flutter-Generated.xcconfig
@@ -5,6 +5,7 @@ COCOAPODS_PARALLEL_CODE_SIGN=true
 FLUTTER_BUILD_DIR=build
 FLUTTER_BUILD_NAME=1.0.0
 FLUTTER_BUILD_NUMBER=1
+FLUTTER_CLI_BUILD_MODE=debug
 DART_OBFUSCATION=false
 TRACK_WIDGET_CREATION=true
 TREE_SHAKE_ICONS=false
diff --git a/zen_project1337/macos/Flutter/ephemeral/flutter_export_environment.sh b/zen_project1337/macos/Flutter/ephemeral/flutter_export_environment.sh
index 0eab3b9..e668e73 100755
--- a/zen_project1337/macos/Flutter/ephemeral/flutter_export_environment.sh
+++ b/zen_project1337/macos/Flutter/ephemeral/flutter_export_environment.sh
@@ -6,6 +6,7 @@ export "COCOAPODS_PARALLEL_CODE_SIGN=true"
 export "FLUTTER_BUILD_DIR=build"
 export "FLUTTER_BUILD_NAME=1.0.0"
 export "FLUTTER_BUILD_NUMBER=1"
+export "FLUTTER_CLI_BUILD_MODE=debug"
 export "DART_OBFUSCATION=false"
 export "TRACK_WIDGET_CREATION=true"
 export "TREE_SHAKE_ICONS=false"
diff --git a/zen_project1337/pubspec.lock b/zen_project1337/pubspec.lock
index b9cdac7..a0590be 100644
--- a/zen_project1337/pubspec.lock
+++ b/zen_project1337/pubspec.lock
@@ -57,62 +57,6 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.1.25"
-  audioplayers:
-    dependency: "direct main"
-    description:
-      name: audioplayers
-      sha256: e653f162ddfcec1da2040ba2d8553fff1662b5c2a5c636f4c21a3b11bee497de
-      url: "https://pub.dev"
-    source: hosted
-    version: "6.5.0"
-  audioplayers_android:
-    dependency: transitive
-    description:
-      name: audioplayers_android
-      sha256: "60a6728277228413a85755bd3ffd6fab98f6555608923813ce383b190a360605"
-      url: "https://pub.dev"
-    source: hosted
-    version: "5.2.1"
-  audioplayers_darwin:
-    dependency: transitive
-    description:
-      name: audioplayers_darwin
-      sha256: "0811d6924904ca13f9ef90d19081e4a87f7297ddc19fc3d31f60af1aaafee333"
-      url: "https://pub.dev"
-    source: hosted
-    version: "6.3.0"
-  audioplayers_linux:
-    dependency: transitive
-    description:
-      name: audioplayers_linux
-      sha256: f75bce1ce864170ef5e6a2c6a61cd3339e1a17ce11e99a25bae4474ea491d001
-      url: "https://pub.dev"
-    source: hosted
-    version: "4.2.1"
-  audioplayers_platform_interface:
-    dependency: transitive
-    description:
-      name: audioplayers_platform_interface
-      sha256: "0e2f6a919ab56d0fec272e801abc07b26ae7f31980f912f24af4748763e5a656"
-      url: "https://pub.dev"
-    source: hosted
-    version: "7.1.1"
-  audioplayers_web:
-    dependency: transitive
-    description:
-      name: audioplayers_web
-      sha256: "1c0f17cec68455556775f1e50ca85c40c05c714a99c5eb1d2d57cc17ba5522d7"
-      url: "https://pub.dev"
-    source: hosted
-    version: "5.1.1"
-  audioplayers_windows:
-    dependency: transitive
-    description:
-      name: audioplayers_windows
-      sha256: "4048797865105b26d47628e6abb49231ea5de84884160229251f37dfcbe52fd7"
-      url: "https://pub.dev"
-    source: hosted
-    version: "4.2.1"
   boolean_selector:
     dependency: transitive
     description:
@@ -218,7 +162,7 @@ packages:
     source: hosted
     version: "4.10.1"
   collection:
-    dependency: transitive
+    dependency: "direct main"
     description:
       name: collection
       sha256: "2f5709ae4d3d59dd8f7cd309b4e023046b57d8a6c82130785d2b0e5868084e76"
@@ -265,6 +209,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.7.11"
+  equatable:
+    dependency: transitive
+    description:
+      name: equatable
+      sha256: "567c64b3cb4cf82397aac55f4f0cbd3ca20d77c6c03bedbc4ceaddc08904aef7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.7"
   fake_async:
     dependency: transitive
     description:
@@ -297,6 +249,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.1.1"
+  fl_chart:
+    dependency: "direct main"
+    description:
+      name: fl_chart
+      sha256: "577aeac8ca414c25333334d7c4bb246775234c0e44b38b10a82b559dd4d764e7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.0"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -310,6 +270,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "5.2.1"
+  flutter_lints:
+    dependency: "direct dev"
+    description:
+      name: flutter_lints
+      sha256: "3f41d009ba7172d5ff9be5f6e6e6abb4300e263aab8866d2a0842ed2a70f8f0c"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.0"
   flutter_local_notifications:
     dependency: "direct main"
     description:
@@ -462,7 +430,7 @@ packages:
     source: hosted
     version: "4.1.2"
   intl:
-    dependency: transitive
+    dependency: "direct main"
     description:
       name: intl
       sha256: "3df61194eb431efc39c4ceba583b95633a403f46c9fd341e550ce0bfa50e9aa5"
@@ -529,26 +497,34 @@ packages:
     dependency: transitive
     description:
       name: leak_tracker
-      sha256: "6bb818ecbdffe216e81182c2f0714a2e62b593f4a4f13098713ff1685dfb6ab0"
+      sha256: "8dcda04c3fc16c14f48a7bb586d4be1f0d1572731b6d81d51772ef47c02081e0"
       url: "https://pub.dev"
     source: hosted
-    version: "10.0.9"
+    version: "11.0.1"
   leak_tracker_flutter_testing:
     dependency: transitive
     description:
       name: leak_tracker_flutter_testing
-      sha256: f8b613e7e6a13ec79cfdc0e97638fddb3ab848452eff057653abd3edba760573
+      sha256: "1dbc140bb5a23c75ea9c4811222756104fbcd1a27173f0c34ca01e16bea473c1"
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.9"
+    version: "3.0.10"
   leak_tracker_testing:
     dependency: transitive
     description:
       name: leak_tracker_testing
-      sha256: "6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3"
+      sha256: "8d5a2d49f4a66b49744b23b018848400d23e54caf9463f4eb20df3eb8acb2eb1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.2"
+  lints:
+    dependency: transitive
+    description:
+      name: lints
+      sha256: "976c774dd944a42e83e2467f4cc670daef7eed6295b10b36ae8c85bcbf828235"
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.1"
+    version: "4.0.0"
   logging:
     dependency: transitive
     description:
@@ -1006,10 +982,10 @@ packages:
     dependency: transitive
     description:
       name: test_api
-      sha256: fb31f383e2ee25fbbfe06b40fe21e1e458d14080e3c67e7ba0acfde4df4e0bbd
+      sha256: "522f00f556e73044315fa4585ec3270f1808a4b186c936e612cab0b565ff1e00"
       url: "https://pub.dev"
     source: hosted
-    version: "0.7.4"
+    version: "0.7.6"
   timezone:
     dependency: transitive
     description:
@@ -1067,7 +1043,7 @@ packages:
     source: hosted
     version: "3.1.4"
   uuid:
-    dependency: transitive
+    dependency: "direct main"
     description:
       name: uuid
       sha256: a5be9ef6618a7ac1e964353ef476418026db906c4facdedaa299b7a2e71690ff
@@ -1102,10 +1078,10 @@ packages:
     dependency: transitive
     description:
       name: vector_math
-      sha256: "80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803"
+      sha256: d530bd74fea330e6e364cda7a85019c434070188383e1cd8d9777ee586914c5b
       url: "https://pub.dev"
     source: hosted
-    version: "2.1.4"
+    version: "2.2.0"
   vm_service:
     dependency: transitive
     description:
@@ -1180,4 +1156,4 @@ packages:
     version: "3.1.3"
 sdks:
   dart: ">=3.8.0 <4.0.0"
-  flutter: ">=3.27.0"
+  flutter: ">=3.27.4"
diff --git a/zen_project1337/pubspec.yaml b/zen_project1337/pubspec.yaml
index 12204a2..7510b93 100644
--- a/zen_project1337/pubspec.yaml
+++ b/zen_project1337/pubspec.yaml
@@ -4,55 +4,118 @@ publish_to: "none"
 version: 1.0.0+1
 
 environment:
+  # Dart 2.17+ bis <4.0 — kompatibel mit euren aktuellen Packages
   sdk: ">=2.17.0 <4.0.0"
 
 dependencies:
   flutter:
     sdk: flutter
-  provider: ^6.1.2
+
+  # ---- State / DI -----------------------------------------------------
+  provider: ^6.1.5
+
+  # ---- System / Storage ----------------------------------------------
   path_provider: ^2.1.5
-  share_plus: ^11.0.0
-  speech_to_text: ^7.2.0
-  http: ^1.4.0
-  flutter_local_notifications: ^19.0.0
-  json_annotation: ^4.9.0
   shared_preferences: ^2.5.3
-  flutter_dotenv: ^5.0.2
-  screenshot: ^3.0.0
-  permission_handler: ^11.3.0
-  audioplayers: ^6.5.0
-  just_audio: ^0.9.36
   flutter_secure_storage: ^9.0.0
-  lottie: ^3.1.0
-  flutter_svg: ^2.0.10
-  animations: ^2.0.11
+
+  # ---- Networking / JSON ---------------------------------------------
+  http: ^1.4.0
+  json_annotation: ^4.9.0
+
+  # ---- UI / UX --------------------------------------------------------
   flutter_localizations:
     sdk: flutter
+  flutter_svg: ^2.0.10
+  lottie: ^3.3.1
+  animations: ^2.0.11
+  fl_chart: ^1.0.0
+
+  # ---- Media / Audio --------------------------------------------------
+  just_audio: ^0.9.36
+  # audioplayers: ^6.5.0   # absichtlich entfernt (Konflikte vermeiden)
+
+  # ---- Device / Permissions / Notifications --------------------------
+  permission_handler: ^11.3.0
+  flutter_local_notifications: ^19.0.0
+
+  # ---- Utilities ------------------------------------------------------
+  share_plus: ^11.0.0
+  speech_to_text: ^7.2.0
+  flutter_dotenv: ^5.0.2
+  screenshot: ^3.0.0
+  uuid: ^4.4.2
+  collection: ^1.18.0
+  intl: ^0.20.2   # kompatibel zu flutter_localizations (DE-Formatierungen)
 
 dev_dependencies:
   flutter_test:
     sdk: flutter
   build_runner: ^2.4.9
   json_serializable: ^6.7.1
+  flutter_lints: ^4.0.0
 
 flutter:
   uses-material-design: true
 
   assets:
+    # Einzelbilder (Hero/Backdrops etc.)
+    - assets/journey_rain.png
+    - assets/schoen.png
+    - assets/schmetterlingpanda.png
+    - assets/reflektionpanda.png
     - assets/zen_background.png
     - assets/logo.png
     - assets/zen_pattern.png
-    - assets/icon_voice.png
-    - assets/icon_send.png
-    - assets/zenyourself_clouds.png
-    - assets/mood_sun.png
-    - assets/mood_cloud.png
-    - assets/mood_rain.png
-    - assets/mood_leaf.png
-    - assets/mood_swirl.png
+    - assets/reflektionpanda2.png
+    - assets/pandalaterne2.png
+    - assets/pandalaterne.png
+    - assets/megaschön.png
+    - assets/langerweg.png
+    - assets/flusspanda.png
+    - assets/brueckenpanda.png
     - assets/onboard_speak.png
+    - assets/bild1.png
+    - assets/bild2.png
+    - assets/bild3.png
+    - assets/bild4.png
+    - assets/bild5.png
+    - assets/bild6.png
+    - assets/startbild1.png
+    - assets/startbild2.png
+    - assets/startbild3.png
+    - assets/startbild4.png
+    - assets/startbild5.png
+    - assets/startbild6.png
+    - assets/panda.png
+    - assets/logo_zenyourself.png
+    - assets/zen_garden.png
+    - assets/zen_journey_bg.png
+    - assets/startscreen1.png
+    - assets/reflekt.png
+    - assets/voice_panda.png
+    - assets/pro_screen.png
+    - assets/butterfly_left.png
+    - assets/butterfly_right.png
+    - assets/butterfly_center.png
+    - assets/paper_texture.png
+    - assets/teich.png
+    - assets/tempel.png
+    - assets/welcomescreen.png
+    - assets/woleknhimmel.png
+    - assets/wolken.png
+    - assets/zweiwege.png
+
+    # Ordner komplett einbinden:
+    - assets/audio/         # Audio (ganzer Ordner)
+    - assets/panda_moods/   # Emoji-/Stimmungs-Assets (Ordner)
 
   fonts:
     - family: NotoSans
       fonts:
-        - asset: assets/fonts/NotoSans-Regular.ttf
\ No newline at end of file
+        - asset: assets/fonts/NotoSans-Regular.ttf
+    # Optional: falls du 'ZenKalligrafie' als eigene Schrift hinterlegen willst,
+    # füge hier einen Block hinzu und nenne ihn exakt so wie im Code verwendet.
+    # - family: ZenKalligrafie
+    #   fonts:
+    #     - asset: assets/fonts/ZenKalligrafie-Regular.ttf
diff --git a/zen_project1337/test/widget_test.dart b/zen_project1337/test/widget_test.dart
index 651ddbd..059d1d1 100644
--- a/zen_project1337/test/widget_test.dart
+++ b/zen_project1337/test/widget_test.dart
@@ -1,30 +1,110 @@
-// This is a basic Flutter widget test.
+// test/widget_test.dart
 //
-// To perform an interaction with a widget in your test, use the WidgetTester
-// utility in the flutter_test package. For example, you can send tap and scroll
-// gestures. You can also use WidgetTester to find child widgets in the widget
-// tree, read text, and verify that the values of widget properties are correct.
+// v8 — Widget-Smoke-Tests (projektnamen-unabhängig)
+// -------------------------------------------------
+// - Kein Import deiner App-Klasse/Packages (vermeidet uri_does_not_exist)
+// - Kleines Testbed im Testfile selbst: Counter + FAB
+// - Tests:
+//     1) Inkrement via FAB
+//     2) A11y: Tooltip vorhanden
+//     3) Text-Scaling wird respektiert
 
 import 'package:flutter/material.dart';
 import 'package:flutter_test/flutter_test.dart';
 
-import 'package:zenyourself_complete_ui_final/main.dart';
-
 void main() {
-  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
-    // Build our app and trigger a frame.
-    await tester.pumpWidget(const MyApp());
+  group('Smoke', () {
+    testWidgets('Counter increments via FAB', (WidgetTester tester) async {
+      // Build minimal test app.
+      await tester.pumpWidget(const _TestApp());
+
+      // Starts at 0.
+      expect(find.text('0'), findsOneWidget);
+      expect(find.text('1'), findsNothing);
+
+      // Tap '+' and rebuild a frame.
+      await tester.tap(find.byIcon(Icons.add));
+      await tester.pump();
+
+      // Counter incremented to 1.
+      expect(find.text('0'), findsNothing);
+      expect(find.text('1'), findsOneWidget);
+    });
+
+    testWidgets('FAB has accessible tooltip', (WidgetTester tester) async {
+      await tester.pumpWidget(const _TestApp());
 
-    // Verify that our counter starts at 0.
-    expect(find.text('0'), findsOneWidget);
-    expect(find.text('1'), findsNothing);
+      // Semantics einschalten, damit Tooltip im Semantikbaum prüfbar ist.
+      final handle = tester.ensureSemantics();
+      expect(find.byTooltip('Increment'), findsOneWidget);
+      handle.dispose();
+    });
 
-    // Tap the '+' icon and trigger a frame.
-    await tester.tap(find.byIcon(Icons.add));
-    await tester.pump();
+    testWidgets('Respects text scaling (accessibility)', (WidgetTester tester) async {
+      // 1) Standard-Skalierung
+      await tester.pumpWidget(const _TestApp());
+      final sizeNormal = tester.getSize(find.text('0'));
 
-    // Verify that our counter has incremented.
-    expect(find.text('0'), findsNothing);
-    expect(find.text('1'), findsOneWidget);
+      // 2) Höhere Textskalierung injizieren
+      await tester.pumpWidget(
+        MaterialApp(
+          builder: (context, child) {
+            final mq = MediaQuery.of(context);
+            return MediaQuery(
+              data: mq.copyWith(textScaleFactor: 1.8),
+              child: child!,
+            );
+          },
+          home: const _CounterPage(),
+        ),
+      );
+
+      final sizeScaled = tester.getSize(find.text('0'));
+
+      // Erwartung: Höhe (und damit Fontgröße) ist gewachsen.
+      expect(sizeScaled.height, greaterThan(sizeNormal.height));
+    });
   });
 }
+
+// --- Testbed -----------------------------------------------------------------
+
+class _TestApp extends StatelessWidget {
+  const _TestApp({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return const MaterialApp(
+      home: _CounterPage(),
+    );
+  }
+}
+
+class _CounterPage extends StatefulWidget {
+  const _CounterPage({super.key});
+
+  @override
+  State<_CounterPage> createState() => _CounterPageState();
+}
+
+class _CounterPageState extends State<_CounterPage> {
+  int _count = 0;
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(title: const Text('Testbed')),
+      body: Center(
+        child: Text(
+          '$_count',
+          style: const TextStyle(fontSize: 36),
+        ),
+      ),
+      floatingActionButton: FloatingActionButton(
+        tooltip: 'Increment',
+        onPressed: () => setState(() => _count++),
+        child: const Icon(Icons.add),
+      ),
+    );
+  }
+}
diff --git a/zen_project1337/windows/flutter/ephemeral/.plugin_symlinks/audioplayers_windows b/zen_project1337/windows/flutter/ephemeral/.plugin_symlinks/audioplayers_windows
deleted file mode 120000
index a3cb9e5..0000000
--- a/zen_project1337/windows/flutter/ephemeral/.plugin_symlinks/audioplayers_windows
+++ /dev/null
@@ -1 +0,0 @@
-/home/matth/.pub-cache/hosted/pub.dev/audioplayers_windows-4.2.1/
\ No newline at end of file
diff --git a/zen_project1337/windows/flutter/generated_plugin_registrant.cc b/zen_project1337/windows/flutter/generated_plugin_registrant.cc
index c5552a8..ae5cb81 100644
--- a/zen_project1337/windows/flutter/generated_plugin_registrant.cc
+++ b/zen_project1337/windows/flutter/generated_plugin_registrant.cc
@@ -6,15 +6,12 @@
 
 #include "generated_plugin_registrant.h"
 
-#include <audioplayers_windows/audioplayers_windows_plugin.h>
 #include <flutter_secure_storage_windows/flutter_secure_storage_windows_plugin.h>
 #include <permission_handler_windows/permission_handler_windows_plugin.h>
 #include <share_plus/share_plus_windows_plugin_c_api.h>
 #include <url_launcher_windows/url_launcher_windows.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
-  AudioplayersWindowsPluginRegisterWithRegistrar(
-      registry->GetRegistrarForPlugin("AudioplayersWindowsPlugin"));
   FlutterSecureStorageWindowsPluginRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("FlutterSecureStorageWindowsPlugin"));
   PermissionHandlerWindowsPluginRegisterWithRegistrar(
diff --git a/zen_project1337/windows/flutter/generated_plugins.cmake b/zen_project1337/windows/flutter/generated_plugins.cmake
index 423a4c3..ea32b6b 100644
--- a/zen_project1337/windows/flutter/generated_plugins.cmake
+++ b/zen_project1337/windows/flutter/generated_plugins.cmake
@@ -3,7 +3,6 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
-  audioplayers_windows
   flutter_secure_storage_windows
   permission_handler_windows
   share_plus
